cset: moving following pidspec: 18315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.390527008 seconds)
loading group "string"... done (took 0.563328009 seconds)
loading group "linalg"... done (took 7.241261823 seconds)
loading group "parallel"... done (took 0.16215254 seconds)
loading group "find"... done (took 1.120824902 seconds)
loading group "tuple"... done (took 1.851627914 seconds)
loading group "dates"... done (took 1.218375304 seconds)
loading group "micro"... done (took 0.247256488 seconds)
loading group "io"... done (took 0.925497423 seconds)
loading group "scalar"... done (took 37.769084468 seconds)
loading group "sparse"... done (took 11.264365312 seconds)
loading group "broadcast"... done (took 0.966918925 seconds)
loading group "union"... done (took 12.410251396 seconds)
loading group "simd"... done (took 4.321547632 seconds)
loading group "random"... done (took 8.824072073 seconds)
loading group "problem"... done (took 1.882783905 seconds)
loading group "array"... done (took 20.697767554 seconds)
loading group "misc"... done (took 1.748818162 seconds)
loading group "sort"... done (took 3.187751384 seconds)
loading group "collection"... done (took 17.169340722 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.490139534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123552759 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115061982 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118772309 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.135361246 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115740159 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123640318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084291724 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.776796467 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145367966 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119015543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416600496 seconds)
done (took 5.089579374 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173303092 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082984552 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08177048 seconds)
  done (took 1.307513905 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066086692 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121650425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066646372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067084893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067148128 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066382686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06634497 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066308438 seconds)
  done (took 1.665512353 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072898613 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069076379 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069627475 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068348327 seconds)
  done (took 1.423900387 seconds)
done (took 5.786492145 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767660213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205485869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183953587 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401484994 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129034641 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15460663 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.631361939 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312471602 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184433646 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081338609 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108305667 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320105869 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107243841 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636756041 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074203132 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090194053 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138857454 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431686648 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06752674 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0822358 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089360158 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128106557 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085791617 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074661112 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144291928 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068113739 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130252988 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080560302 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066203803 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208248669 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172849757 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653875855 seconds)
  done (took 10.192805947 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096159772 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097610044 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068682054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137165356 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096019065 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069919965 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070824819 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067217284 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087152965 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128662243 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088962526 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101699981 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065324878 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069054674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084769402 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205238082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08269283 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083071768 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07159845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076672476 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116777094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078130496 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078241618 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078376564 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128622337 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180271987 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100158508 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099913172 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06904205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082464847 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116948654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128768819 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065609221 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06662361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124686412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094291057 seconds)
  done (took 4.637528101 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.929866064 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112981722 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140048936 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090760886 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133577055 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06494797 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1073975 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066723569 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086649602 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20721626 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.310792371 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.581958409 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084322376 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111373961 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101482499 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067538219 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068197736 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066519506 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.358657285 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107279718 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104308238 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081323229 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070091898 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069321014 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342397017 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069916094 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065675443 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070135111 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059897889 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12707512 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070179215 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.033045772 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070690944 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124764857 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0661775 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099956662 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218378537 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143462486 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067886326 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064086634 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149962834 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069868713 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069095395 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083966848 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103737544 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113113943 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06546661 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067159183 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162337246 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065255664 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078540326 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.990926994 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153884038 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078439194 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065744033 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248146787 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085301952 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069406286 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064478894 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090668033 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179769555 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138111203 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067478065 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066567915 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067955181 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069381624 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.318235999 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066223886 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.777308723 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070534851 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076271558 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068996859 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069291161 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073069303 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072695516 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085116607 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065963568 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075511855 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065943113 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065996579 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066881487 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084279348 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358035708 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066295963 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068195184 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066069938 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087719623 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097975357 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066401854 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064939183 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099820547 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067781498 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070706213 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105651698 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06689595 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063278771 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083665901 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068066186 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114361661 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065145835 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090452502 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066177098 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09771868 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0681299 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097667531 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078892418 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066735444 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.388819428 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064076178 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063788222 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066802679 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06442698 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066340069 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06517259 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062763844 seconds)
  done (took 20.862957787 seconds)
done (took 37.764408017 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278282034 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080287912 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078175877 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075792624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075651744 seconds)
  done (took 1.822449247 seconds)
done (took 3.060148623 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120947645 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100902978 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065783501 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098685688 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065981803 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102889334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102418226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083518949 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102405132 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066207632 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099007421 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065878737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065334472 seconds)
  done (took 2.375720033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082334893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083606066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069928598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082684707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064819939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082978894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080596929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088099177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080651906 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073090709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063983737 seconds)
  done (took 2.062598815 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081675936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083473571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069571928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081533883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064096317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081714979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081234725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085569998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081082178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073870686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063492773 seconds)
  done (took 2.051745169 seconds)
done (took 7.691546181 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076581649 seconds)
  done (took 1.273111794 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604271668 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.102653495 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.0818148 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112954767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187411052 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124473374 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.286012086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091095651 seconds)
  done (took 8.968793172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089293915 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070799305 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084509084 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073230502 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073922774 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073610013 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073436206 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074280336 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072060792 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070839368 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072974332 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070595152 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071031855 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073827729 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070522681 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071163632 seconds)
  done (took 2.456692563 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094228658 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093246336 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075753283 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077183555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073409353 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074003355 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076657614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07554249 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072986366 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074192593 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077118666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075857369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073773846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067117104 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076853562 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078475942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073509663 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076524045 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07740641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077106857 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077012148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066892386 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073695646 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076817238 seconds)
  done (took 3.146550566 seconds)
done (took 17.047088254 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11332856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071256869 seconds)
  done (took 1.390251115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081301907 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084983223 seconds)
  done (took 1.38005647 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083085954 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066171682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090603305 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079853342 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068697216 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068003781 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09061395 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068506115 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068568633 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068936842 seconds)
  done (took 1.96683542 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068428802 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079410065 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071423651 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083523178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076364669 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066418337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075416227 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069952585 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081016655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064908007 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073239118 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085078031 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074062052 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086874604 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075175973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070582383 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07280707 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069124606 seconds)
  done (took 2.560740793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065401768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067838361 seconds)
  done (took 1.353521268 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066800231 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063940564 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0688596 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068274418 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065179088 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064721198 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065464742 seconds)
  done (took 1.678309262 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394403195 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11369764 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305485191 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072784317 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084670435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256553334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066938105 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072143436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072530234 seconds)
  done (took 2.70283706 seconds)
done (took 14.249992072 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078655902 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084831622 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095564764 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.366413383 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092005599 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066057206 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114814913 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19467312 seconds)
done (took 2.32091592 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21082171 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613915444 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391506529 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199172099 seconds)
  done (took 2.425534846 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32434049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086367588 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060336418 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068566685 seconds)
  done (took 1.770110039 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065688462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068873135 seconds)
  done (took 1.360842996 seconds)
done (took 6.993544713 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066096276 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086683538 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066751974 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065267131 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067335925 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065291517 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065085404 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065404078 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067603095 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06751437 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070469829 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067228816 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067280898 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067315199 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064842155 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065397949 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064819696 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067376895 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068445461 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064860559 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064901536 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067757016 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064904516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064883076 seconds)
  done (took 2.874484238 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083069891 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066668106 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07114562 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07140504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070130798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071315516 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070995779 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066218016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071119453 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0678207 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069538269 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069779318 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067790188 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070384667 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068312665 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070490356 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071535205 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066494953 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068095405 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071611089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072865096 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068650412 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071956766 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073266345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071582098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071705075 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06980991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068376224 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073617473 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071673859 seconds)
  done (took 3.352478735 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069650788 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06313536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063913656 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0701779 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063769998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066574006 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064804949 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065732864 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065994176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065253432 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068120813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064898984 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065017741 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066236902 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066239545 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068830244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08079278 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065361559 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065081688 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065787404 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068643533 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065278812 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065394574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065235403 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064887182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064874175 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065574125 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065319499 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065704012 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064893186 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0682241 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06861041 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064990006 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072273996 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068627058 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064978767 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069018904 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064748045 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065662492 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064604065 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064551787 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064947687 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.175234042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070319451 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063743613 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065007029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063569715 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064563259 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064049072 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066363164 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063399278 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063583261 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066099582 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064582934 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067196116 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062669707 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064136697 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063113019 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064310536 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063068598 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062477637 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062585273 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065344121 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06382875 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077982347 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069485971 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064100161 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064558373 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064135405 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065423117 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064841549 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076173579 seconds)
  done (took 6.105686755 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090441799 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086982951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065736615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065371808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062439851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063958867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0689394 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065874308 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067291877 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07206413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066165024 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067346931 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067084521 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078316136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066695605 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067556995 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072021077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063684052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065826543 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069732631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066070189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069776042 seconds)
  done (took 2.775276686 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155360034 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069857597 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105405044 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073130066 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06782758 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072930008 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069755742 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070008837 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070044756 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06820337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068059044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069812344 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068284399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067904845 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067985201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068150782 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069803797 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067989555 seconds)
  done (took 2.611638227 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077503467 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06635392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086461656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065495786 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065914854 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068076021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070684028 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074569151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068109243 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065573678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074154132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068662282 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068355083 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06590716 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068198004 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066425187 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068041759 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065541484 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074112128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070557818 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071048708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074454828 seconds)
  done (took 2.784787877 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078738875 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067489287 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081965203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068575807 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062199195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06460051 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070010999 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065723155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070128784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068106205 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065959434 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064192668 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069420422 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066312512 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069466548 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066022746 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06725723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065467208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067364119 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063321676 seconds)
  done (took 2.604950345 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085988771 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067802719 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06748682 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077752654 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068495962 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067971043 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075708637 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067604909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067190893 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087600852 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067840659 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067147968 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075360025 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072264084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067634708 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075089111 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075197932 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075286889 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067022791 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06722198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087475939 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067433063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075495816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067699863 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068429305 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068605925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068662198 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074331565 seconds)
  done (took 3.267293113 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066443677 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066053511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063920745 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063883556 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063335003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063723136 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064236538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063454034 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066079063 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063576616 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06667135 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066893903 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066869014 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066735686 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066192769 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065793643 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066016825 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063934338 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063589621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063964322 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065591016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066147356 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065836788 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063313107 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06328944 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066067265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063540159 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063766825 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067670957 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065449888 seconds)
  done (took 3.199433931 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075009077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073649007 seconds)
  done (took 1.398074906 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06369031 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08001025 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064017328 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070359404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070474408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066849044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073566657 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070411347 seconds)
  done (took 1.804156995 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081768297 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078801633 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069692992 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082514922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078966847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085075767 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135758967 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068598386 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075759056 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064701782 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080409222 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065554099 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072824677 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066860835 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073473696 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074747361 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066181418 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074816548 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071394301 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067319554 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069157305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077122698 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070475026 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063496644 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069258641 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090444542 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079882536 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068140556 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071411933 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076215037 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074102671 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062070596 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068057764 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06846893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065950236 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077797446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083843329 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07143287 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07700415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069160286 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079990995 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062725959 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072545089 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074680351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078362732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068322529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067946213 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062699329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065387597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069972492 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061481272 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066260321 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060938928 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076409292 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069478136 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076951359 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06493751 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069209233 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069466283 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069582749 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072705787 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067839858 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068307504 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065826414 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072877547 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070732634 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075238948 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061073227 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060497562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064675751 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076176909 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088487314 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072202182 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066490059 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066967824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064189068 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068952601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067323119 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071983818 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072387106 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066060265 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071610125 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073291447 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066499043 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068609732 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07470772 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064554005 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069659827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064103783 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082157759 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064725984 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064124533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064116306 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076368196 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06932143 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066074187 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06398161 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073605927 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060899811 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068418247 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067322379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066717082 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076637857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069603216 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070520399 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073725999 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072508124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065457591 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067994823 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06206089 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065966564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064772993 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072705273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059950867 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068349353 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06610162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066043904 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198771442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065029721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06726284 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074636904 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073485724 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065808387 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063408516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06956193 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06677979 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069739026 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075043258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065688173 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061467293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061398299 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070449852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066565594 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070809256 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071030848 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06971446 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061618688 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064701767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0718005 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074981614 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067252012 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067481754 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073071087 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067182813 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065777668 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072949966 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069300208 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065275871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071909038 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067814955 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061588279 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070270435 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069382248 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065332632 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070647336 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069629671 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069413863 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067350213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065520739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074730493 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067693434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065566886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066050272 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065216619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077082783 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068842991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061295707 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063649464 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075921566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064445651 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065764624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066476429 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068583029 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067190593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064152569 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065109225 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068530044 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077022384 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070781555 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067536687 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072233645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07763336 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06579278 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069444177 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066265586 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067722895 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06767344 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074737922 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071703942 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071181832 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068213848 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062748652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072090888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073846273 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065447817 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063968943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065227086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070990173 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072040246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070537514 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06735545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064728587 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067173449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069737001 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069503459 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066115796 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06605398 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073039894 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065209754 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073770082 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067901685 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076570206 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069766357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061853897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069456615 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064681709 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07224147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061743024 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06455812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065299376 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067559947 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065362788 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068605843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060317939 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073180727 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073481357 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065536065 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064263448 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065153997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0714539 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066321815 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068802259 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068703572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07082182 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07542132 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064692143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068580789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0752574 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065271889 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187647238 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072142791 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065673276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065282276 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06559739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064830977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070630492 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076040669 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073127359 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061440274 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069978238 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065055328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065726281 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062189784 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072005172 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070953752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068201693 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074173172 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067759681 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067166471 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070999224 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066716178 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068375029 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068573319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070110596 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067960806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068460981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066423074 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069926484 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066068592 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064483225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069377851 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066704282 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067597713 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071630656 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065805332 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066936274 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069023578 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067671578 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067500736 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066671941 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066370025 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070623259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068822862 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066790452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069058874 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061467401 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075353507 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066753617 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075132463 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066605883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063468879 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073563864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068548766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073245807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067998349 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06791625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0683291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066251758 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069601602 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073097468 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064273059 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077193664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074752043 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067103594 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069728827 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067187714 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068469086 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066321022 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067553985 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067484323 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067210678 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065948791 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072331798 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070873039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068042126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069708833 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068612029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068228497 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069106607 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062496798 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06703216 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067244268 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068001143 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078084623 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068518049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067366081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067134684 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069018127 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06686833 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064563297 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076337447 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07778885 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067917815 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074391473 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066586508 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068265287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077055582 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061429743 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065064052 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065372019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065682356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075633596 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06912992 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078131769 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068285514 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067511283 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065209501 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068623718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066788132 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062137716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065333779 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071465575 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066235857 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065868739 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067524135 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069569274 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067664049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075753263 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064977485 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065811881 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065370972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062600754 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064530705 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064294946 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201188762 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068281294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064937204 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064410679 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068507736 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070176657 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070234414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067408381 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069273695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076243967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066026763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069648438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070867586 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062014249 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069736342 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066662303 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066405212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065661309 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070724399 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069788031 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068156863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076310145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068855798 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070165108 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069169907 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066482581 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069331594 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068678282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069104256 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068284681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07006253 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07710744 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06670066 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072033518 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068772096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069042951 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075463057 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069290779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072057924 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076014252 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069218318 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070172722 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077261383 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072575166 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072178559 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069960102 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070035766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07456136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067396166 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074940311 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069115244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069796084 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069463165 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065185602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067443858 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068083179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067872092 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074120123 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070211285 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067917243 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06764865 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066010084 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069005878 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072149966 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076533964 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071253111 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0713676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063569509 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065439376 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069195244 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065892938 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070666953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070758215 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073899436 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070150263 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06851422 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06732904 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078199072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074310799 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071514112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065823773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072230306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068135764 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068985241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067652087 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067338837 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068228319 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07052392 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068663641 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067468598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075672084 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072137433 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069963389 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070308518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069741591 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06903851 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064272178 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069808109 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07100803 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07372244 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07089653 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068715248 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079354928 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065421741 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066831599 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070144685 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066026881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071103244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061938471 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068990841 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06959338 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068953984 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06258205 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066163475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064529254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068752597 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065205514 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061247749 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075222656 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07405734 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067977197 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064231768 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064067743 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060693569 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060769761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196181308 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068276409 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068872597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077142711 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06733363 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067425305 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064622147 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069121566 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071794562 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071607015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065991155 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0636426 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067237554 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072784397 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074171244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067182103 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068486004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072135528 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071102494 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066765436 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072330915 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065270958 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072832154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082450411 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069355325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069371634 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075031788 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07727244 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070048225 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064207237 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069094884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072323787 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069144239 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07057636 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069628227 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085232223 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071881422 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068435132 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06743881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07153853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067729076 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076467804 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070780453 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06971667 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073923337 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071916921 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078857124 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071241048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075721702 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070290923 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069180823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065616376 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068637104 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06727905 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067476925 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069846248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069289192 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074667668 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077769475 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067861059 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079767594 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078431636 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070064381 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065207065 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067550643 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068388852 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063678418 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069243999 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066559013 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066387617 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066108318 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067502931 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068860431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074098395 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068806558 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069488502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067832486 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062516308 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070737025 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07038755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068946623 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065280224 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068134435 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06892891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072456292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071697898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065599378 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069865739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069710924 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068762041 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063333825 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074781423 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067352597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070115824 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067471676 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068244005 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069276059 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07163729 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073010967 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069110516 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070119919 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07157662 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06989196 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065405224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064922027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073551202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066043513 seconds)
  done (took 43.129015458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100413253 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063119453 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061690967 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062875737 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076012703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064217827 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062170349 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063437415 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063202833 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065357231 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062432325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061998745 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07115866 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078017341 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074141073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067210193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0620396 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063155945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061952113 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063679845 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073141651 seconds)
  done (took 2.76825062 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073584808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069710206 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074280118 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078484124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069665159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0725551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075200554 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072424925 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077718703 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067766951 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076436943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070930893 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067232978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067488292 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067297842 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071256214 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076405035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068372284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079262689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07295989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070714449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073329855 seconds)
  done (took 2.916184922 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066565459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065377229 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067673132 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062113497 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068117344 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06287898 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070318391 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064083359 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069316039 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065227004 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065222881 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06488135 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067843752 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061316144 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065972196 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064184048 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108687446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069228947 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065771378 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067048828 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063298422 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070071831 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063123235 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063726518 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06693745 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071291589 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068510183 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065727259 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068509018 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06699215 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067719615 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065365716 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069585751 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068626951 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066854787 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066475313 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06718812 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067633564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063299587 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065628443 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06802191 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063574199 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06770686 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069318855 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065998497 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065179198 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067684369 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065164862 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060845309 seconds)
  done (took 4.616996604 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080841363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107571176 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067604821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088446021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080526257 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075547854 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069378725 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089906728 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063526889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064352784 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082198793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080471631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06624459 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070454965 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068969121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065966292 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067008945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064636165 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070264628 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065717969 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071371454 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074743066 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082705428 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081094756 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071699247 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066785249 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066885685 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072020308 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080371664 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072159882 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072659797 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07307632 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082539328 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069655195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066742876 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069550244 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08399604 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06784072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0699557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065493524 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069591937 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071664776 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073139479 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083042328 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068274155 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072949238 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067311681 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064443687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08050552 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069851741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07513292 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082289366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071521911 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067839199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071672443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082464176 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067349203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065803332 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070583542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080111682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065268606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071577882 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081245702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068779836 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074231203 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081971723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072361172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070949083 seconds)
  done (took 6.454856264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075002796 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072270545 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080533122 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080045698 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072562769 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072612041 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073029256 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072562066 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072154594 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077313529 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072631566 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092875472 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067547427 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075252716 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073002442 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072413592 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072346215 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072803612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072827102 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072552052 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072480404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081427679 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073189456 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08009182 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098036139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068279797 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072456841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072580956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080670579 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072589221 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079911362 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072751506 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072469546 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080522881 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079598424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072098457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065319981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072237833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072220162 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072179602 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067424451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080912739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072265957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069115602 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074682104 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073998833 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082494094 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081504349 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077018915 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079666519 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07434904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082425142 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073922167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07423304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082941869 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107528172 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081232511 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080459258 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072222431 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079823447 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080117746 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086384285 seconds)
  done (took 6.084680695 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083447613 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074975278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076124415 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061336198 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06398471 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069703024 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064139784 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064406424 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074635885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074608499 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077542983 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070100605 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073018834 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077053641 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070377518 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073052695 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070180281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069769358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074739916 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069922781 seconds)
  done (took 2.781187999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073999628 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082255442 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066809861 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072235113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068434499 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071736227 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068219207 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069317836 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06705954 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068836582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076337899 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07594709 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066924953 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071943896 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075773119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071620003 seconds)
  done (took 2.488231158 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075161726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07183311 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079528154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066949393 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064283656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062758284 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066249359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061391344 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062407496 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077749045 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065973791 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068300216 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065983122 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064386237 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062902172 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068663976 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062356138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063216069 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065474412 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078112545 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07644831 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064639754 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066763217 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065745292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065894619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070971336 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065611014 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063686197 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063547976 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066204169 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066682179 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069741843 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063468941 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064009036 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064627171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064024257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065851388 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066291682 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07030302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068013725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064808358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065713517 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065685418 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066607552 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062089471 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066271161 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062320711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067922416 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063525664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065959621 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065709024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068207295 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066539119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072604362 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068722565 seconds)
  done (took 5.020877058 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079106921 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070287842 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062468997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064322807 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068588086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067918419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069680793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067444299 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067854688 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064246969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067598835 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068771489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067603599 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069740357 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067891975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069417443 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062227307 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06742093 seconds)
  done (took 2.575353692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071171904 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066305729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072826742 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065934145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065835774 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068308083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061859604 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06513269 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064507113 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065790761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065648677 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06818537 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064283279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068621736 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065781218 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065825649 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068534412 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064366407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065862418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061999038 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06785204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064639206 seconds)
  done (took 2.805294919 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071807555 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091921882 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137893167 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084001614 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081152614 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078879278 seconds)
  done (took 1.893856041 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089550281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078725874 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066645789 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087660101 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073925803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067431316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067513895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067900311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076155769 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076905534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067566918 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076379335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076212142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075723866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073634911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073036896 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06756368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067471311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066192737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084439386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067709082 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07593498 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06781972 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067043966 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06765185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075446171 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076171525 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076417926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0671892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075963757 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073164202 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067664745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076325578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076128139 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069053604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07617075 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067847356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084685932 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073550498 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07556661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068638009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073428461 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076087565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072599746 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076127116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067738589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072349329 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067561324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067801081 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08685387 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073629526 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075805798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073734719 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076423302 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076414399 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08658012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076530971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075685248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074164859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079291963 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076105315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073559404 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075569798 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076243139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073755602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075647357 seconds)
  done (took 6.240046683 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08206237 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085863757 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067747522 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076474613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075868658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068372403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068469213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067825304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06803392 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067235623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108066554 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068053579 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076005968 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076081988 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067867196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068004655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06815902 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076216802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067189814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08653766 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06781459 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075797102 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075692742 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075698301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076880284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073394995 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067969916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06763577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068135476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067613911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072819434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068515251 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07555366 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067059473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076051129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067928371 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067579139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072559108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06795125 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073103737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075736166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08405145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067761723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067609256 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076460036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067477961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067545422 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067196656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067693304 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067291663 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076202728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076714832 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076807624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07587527 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068431461 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067609198 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068061166 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067721886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067806082 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07360505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075482725 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067901282 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086477879 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067824266 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067767562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075801408 seconds)
  done (took 6.152602575 seconds)
done (took 129.927342267 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187141898 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17116576 seconds)
  done (took 1.705529872 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068949297 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096812434 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076606868 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129297116 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066787885 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100726098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099728257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078035347 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066429351 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066688559 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066368759 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068452752 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131133514 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066747326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066106273 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069056528 seconds)
  done (took 2.677699953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097034575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157535865 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098393194 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064995615 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096933596 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072931681 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064819525 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074829805 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071607116 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064768076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073107363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070506271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065007384 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070945625 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070992579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073370619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065489226 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072785965 seconds)
  done (took 2.788663519 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100524299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091264104 seconds)
  done (took 1.555042958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155468178 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105596562 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149664524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345784935 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.173545053 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229021708 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126822889 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127331096 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116900042 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123708961 seconds)
  done (took 3.012840336 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097212862 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152050932 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255100227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115601717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072925776 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095368595 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116413089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077945784 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080935395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080202425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080216534 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075963453 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099061829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073607565 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073044426 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076000185 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102436978 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072372037 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074172204 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076753323 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099244808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065898927 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073754905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072078835 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077967484 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077518288 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065236462 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065599815 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077467738 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074061568 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077126507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094303255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077430533 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108030264 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070398257 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108972392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076696725 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073820244 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074144823 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073940638 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079035366 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078788883 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072100846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075846469 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06527699 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077333845 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066620036 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066805595 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079138971 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06673468 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078243688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076938054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10780532 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068299423 seconds)
  done (took 5.974468993 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101182479 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105545371 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070848076 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110032342 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097558403 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071348319 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101651069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0912471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102822026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092921031 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088891854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071208998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08237315 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083673983 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110230453 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102490817 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095444352 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071140198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10228501 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10256645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068605005 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094623881 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091132186 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102420681 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06795183 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070759053 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068438777 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070511806 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077224132 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078601202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069879989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102338916 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085069018 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078290873 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067325442 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068199669 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068419491 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080085403 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098231787 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079014897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078262008 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068036718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068404612 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069762232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090812792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067899457 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079455386 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080219358 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079098549 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06954588 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070386073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0683144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069714274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079991728 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0781271 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081011346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080460762 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068392203 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068959687 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071994797 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081002312 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079426962 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079825594 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092639 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079616423 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068260744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080350684 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085038687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068376792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070169767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069105721 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069572102 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06993058 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078053279 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078689036 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07014572 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070016501 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068445976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080428177 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078684521 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068457521 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077251546 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067229694 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068669308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070129741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070350333 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078017854 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080098185 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070197743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068186771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069536692 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068432741 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066965602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076160373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07885132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077717854 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078211264 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068965066 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078413721 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077858528 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069473544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07842057 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196579444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070916212 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070393138 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080680708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080469528 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081781008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070908655 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068929394 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079271901 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082268089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069201376 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.0788015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0809252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079402087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067960028 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081222562 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069106185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079930381 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070355068 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080794461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069679958 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07957017 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069756677 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068268513 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069034628 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079097848 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071117401 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068898187 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070345792 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070407589 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08033455 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083135132 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070802544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081273978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079163379 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070628708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079310217 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069669894 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080012799 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070221837 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070342677 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06737039 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082910128 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069597903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068519486 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069646047 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081221978 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069084679 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081383674 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078918008 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068446739 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081363414 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080084056 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077928408 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080199003 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069908874 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068687723 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068397942 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07094628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077903317 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079818385 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070891906 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068549524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078105448 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079768633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067877828 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078848275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078714758 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079161696 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06883541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070160366 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081018924 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081374565 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079120482 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078779638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078951944 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068819132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077709444 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079621628 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068329298 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085440637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068358655 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083171948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079809758 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078021477 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079861744 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081143091 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081577437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080670786 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083563271 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068980936 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068481686 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080499427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068465025 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069877682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078711637 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069379209 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068731501 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082644997 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067749832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078546742 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066761656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077683041 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066237968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068713011 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.213492358 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069432064 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070264309 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080278008 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070468062 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078655525 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082031468 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079626242 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068660514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071037005 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08145625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079419261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068131169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06855313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070684578 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078597831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078151724 seconds)
  done (took 18.8539607 seconds)
done (took 37.935912309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209052338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151603255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180468746 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120862981 seconds)
  done (took 2.125718694 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121988593 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101754457 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09721174 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066540868 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104400116 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065186121 seconds)
  done (took 1.956615389 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312762688 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212510742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183611622 seconds)
  done (took 2.105065447 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200174128 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188779883 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393797255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254426328 seconds)
  done (took 2.541025438 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144253813 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092808241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068134554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083518722 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136575199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162383737 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102219542 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128378575 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078569975 seconds)
  done (took 2.445129393 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.1483061 seconds)
done (took 12.718622084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.255882746 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196203649 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162259167 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197188737 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.119175771 seconds)
    (6/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07481368 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140369578 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077165836 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168944843 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070748654 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207343463 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118460779 seconds)
    (13/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110588258 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07795283 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092464814 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073675329 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08200255 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.160099187 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173137965 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.1073639 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07215131 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170605489 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070741659 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071603702 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181821638 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095915702 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087670048 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106019725 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094356547 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094874926 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073351092 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.074544266 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.147136927 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107735827 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064643993 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077427142 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071600143 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138554948 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090741549 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142787222 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158801289 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086659022 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064689489 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079821648 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083285153 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157647064 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.148278975 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.209679689 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065719531 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082415613 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069803755 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.149449371 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073128366 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072728927 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 0.126386789 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089183175 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100690985 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18611299 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067821625 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110887944 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066812039 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182604453 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17981585 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074982924 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194796387 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088404818 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072465265 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148946095 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160210619 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157614062 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072741385 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075056476 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08835418 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123186113 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063299723 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183684975 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073535434 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08487533 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072971111 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091284249 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089596398 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.292614959 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052637733 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158455778 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106749599 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066921024 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195799492 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066741264 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151823144 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111032693 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052288521 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067535446 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111757365 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066011883 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076400595 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0688516 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065472151 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076359115 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072483482 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088241136 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.165201517 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125837145 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09126253 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051983668 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091914003 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066733345 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140081801 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097598538 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072052059 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.413598964 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090166541 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075893327 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053887711 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052596504 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074964312 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.134169231 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073174233 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109272062 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.076373083 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135586827 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144601944 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072599328 seconds)
    (123/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05207561 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108083545 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13915161 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070343971 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 0.126138847 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071631786 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087938521 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054043619 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05149197 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070370378 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08589135 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052794978 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074073519 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05146939 seconds)
    (137/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067729946 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079322167 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072059333 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06133993 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070264989 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091281108 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121841791 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064389994 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071816835 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156719127 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172900167 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.175233123 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09666365 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150580312 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073977085 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052569278 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067139419 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095939868 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075867238 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065774775 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052728781 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065264299 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174776126 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066088656 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065759203 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07928649 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08124748 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071861411 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066071783 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.184830777 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06946758 seconds)
    (168/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070102877 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051887388 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092375703 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051713018 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176087901 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09833697 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053984455 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183295344 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145212166 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172075863 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079006386 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071484669 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068278727 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184122175 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148615164 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053128489 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073289284 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064748069 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086621838 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.246504026 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074865241 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053825677 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110130218 seconds)
    (191/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108044898 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072920007 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071059875 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064758585 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075594361 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073343009 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066419744 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067417125 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091493912 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067145276 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066275995 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075053575 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077100886 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140903062 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051080627 seconds)
    (206/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061151508 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170134954 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072812469 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05181513 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066313168 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09046319 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074512056 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072415416 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051966242 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051506611 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112505644 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06848512 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068842266 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061286397 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065213279 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051986475 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051972551 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179621716 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06583945 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068172165 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086999524 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052304168 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137770879 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071587149 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052960717 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073790736 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052366418 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05130135 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052426035 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171614736 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064774947 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051552625 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100870729 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109238407 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089797851 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136228136 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05294224 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067619524 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051781407 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051323923 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065528305 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052084611 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073417299 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053636359 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052198288 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065471977 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066127133 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051318028 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051821971 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052080233 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065136153 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051156265 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065774323 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071928112 seconds)
    (260/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052707187 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169528175 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086071894 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067512271 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0725239 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 0.139396892 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066417543 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051036173 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065371772 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064058694 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052408148 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071635761 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067177005 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06806367 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107767792 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051021616 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053436589 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141408993 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073524341 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079238984 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117557173 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072364914 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06392027 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071323202 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051683725 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07148904 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063828922 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071926726 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051498922 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072350204 seconds)
    (290/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052552752 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052628894 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099090411 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064664959 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061619444 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06652574 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.0526282 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070373786 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065806256 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087575849 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065354815 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064577089 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051627031 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053188266 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070766544 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070647927 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051489966 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051700024 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050925012 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054227568 seconds)
  done (took 30.543686239 seconds)
done (took 31.949382545 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084828302 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093869217 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075217807 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09338276 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081208131 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077301906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072658114 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078640227 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08066116 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082418445 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079773129 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055413311 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074498084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074977344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0745919 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091606072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078631254 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073249929 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073684024 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06543704 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073978507 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066458031 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067761994 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05521255 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078262178 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072015783 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072834298 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074559711 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066104305 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066612434 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069274964 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073252529 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066125273 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07852779 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072533895 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073683998 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075225959 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076910109 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068079279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06618909 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074431911 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066568074 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072992593 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074000803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07232304 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071976422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073552027 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07881101 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092262264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068725496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075042032 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07606325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077001444 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073009679 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069718938 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073426614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071602864 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091765162 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07382655 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068522394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074681121 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074384841 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071274391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073412286 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073180203 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075394797 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075935592 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071287898 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074919649 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071581815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065841613 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073354997 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069156008 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066020919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075976116 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077036627 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064834687 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071163364 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07268812 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071532623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065318327 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067794955 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06747718 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071894411 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06797318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054832769 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069263394 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071780068 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064609442 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073114748 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071587619 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072654454 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067410307 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076082847 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06485288 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070585682 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065911765 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065750652 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067352397 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069444373 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065612951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06775133 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074628312 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067312733 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071795414 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079374011 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065605605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072136938 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064710882 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065074972 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079930222 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074735186 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065776822 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06799698 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064623672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071890117 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06417838 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064932479 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065067104 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065229035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070924713 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06557423 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066834982 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071612539 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076662637 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064905652 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068302239 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067003583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064475298 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0699535 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064964504 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064715545 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201141622 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062650725 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06805394 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066399905 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072965591 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068452048 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073948421 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067710232 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074736807 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070956684 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071692271 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071450741 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065171585 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059765562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069185369 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068946654 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068706948 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066414511 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067549723 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066804773 seconds)
done (took 12.511867056 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067369979 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143352471 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101123593 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095866926 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086591757 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067365037 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076734084 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102711893 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068311855 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103117184 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087737601 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085147119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113137431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065316919 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066162994 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070037786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067571804 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082637655 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101953999 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087445137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116873869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065376522 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094757664 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090894996 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087767496 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102405144 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067303543 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07039758 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070415188 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092336156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08736502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070417152 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067402636 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101429093 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093477734 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083911225 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06709055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082841886 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066864957 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066219586 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067996213 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098419624 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080711602 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081083619 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070250343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069934013 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068014526 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08421037 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090190811 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079415411 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086966401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103931919 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069020688 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066128351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065120303 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086256313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065659569 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069095492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066444315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068456725 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066168483 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069847723 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081487485 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082827744 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070046204 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080958129 seconds)
  done (took 6.843194122 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083698148 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090560455 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084095633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083889045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065807368 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066695865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06668169 seconds)
  done (took 2.044263272 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06726863 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088651385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089077627 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089244965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084995673 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087843223 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076037863 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067000001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080717752 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067990995 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08750525 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102834781 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067548531 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073395289 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091392991 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066799893 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090753878 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06714401 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069705632 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090884826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068807763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082548608 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070597237 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067433565 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081280319 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066945161 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113836245 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070900917 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068423612 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069969452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0648515 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107859931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080441481 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075857285 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067015106 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081251372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081019169 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065374533 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08346062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071902237 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080407719 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067175872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067676472 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065165913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070927718 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077367017 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06796292 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067450806 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068848411 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086051107 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067130811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080212487 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070861526 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069272532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068251352 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070477532 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076208475 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067196877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085925212 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067709451 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082748412 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082564261 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080314174 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082227159 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06848016 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080501453 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080604411 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068818076 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068321931 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069892164 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082779858 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065112286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068066678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077404119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068156318 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09004308 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090024375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067968122 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075897891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067250469 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066929877 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067113138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089501979 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069036315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066670676 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070613242 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069338548 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065119189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065472275 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070215749 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064722957 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068378967 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069255412 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070228715 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069113259 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082613321 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069065395 seconds)
  done (took 8.793150396 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068635953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067903003 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070328816 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067747885 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067580918 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069011821 seconds)
  done (took 1.934142658 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09402092 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069813782 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0806784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07269055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105276094 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087840608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087646832 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079029804 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084441181 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079008383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08710892 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088694534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093374165 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072956457 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086973961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072225755 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087590244 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076346024 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078472147 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073760352 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087277307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073247275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07405646 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082002147 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076142562 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072281894 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067611281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079391734 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079058211 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079740839 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072738276 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07582588 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071083714 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078934083 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087250515 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071511422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072142025 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077545903 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07312233 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076139909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088152148 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073479616 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074916129 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077923224 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079433387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070603857 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077616524 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076215784 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086369924 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07758821 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077370647 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.0725317 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075892339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077413757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070370577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078811244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077503314 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086793059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072453072 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070406007 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069051032 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075858895 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07830157 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075487228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0790798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077211174 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07031216 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072988521 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073225237 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071643702 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076795198 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069377006 seconds)
  done (took 7.118100656 seconds)
done (took 28.220301749 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543518018 seconds)
  done (took 2.036306931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603178873 seconds)
  done (took 2.118479167 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.611569627 seconds)
  done (took 8.12228947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394206798 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47657126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690134651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131598569 seconds)
  done (took 3.24429542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667688085 seconds)
  done (took 2.192704821 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210277748 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197392469 seconds)
  done (took 1.943655665 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377689457 seconds)
  done (took 1.894466072 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100490372 seconds)
  done (took 2.618429482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263240408 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164294525 seconds)
  done (took 1.94799088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459443566 seconds)
  done (took 1.97815438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.869524645 seconds)
  done (took 6.389869187 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212366977 seconds)
  done (took 1.77871713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240205336 seconds)
  done (took 1.764005033 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.695967983 seconds)
  done (took 3.218532306 seconds)
done (took 42.765317729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080780577 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081468091 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082529758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078685974 seconds)
  done (took 1.833584304 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077461735 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073878914 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076849694 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072494524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077425725 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072536515 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074966529 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077637964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07274396 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073960091 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073144885 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07339587 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075752791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074894854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071474685 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075210439 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076759975 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072925265 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076466006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072984866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071663496 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075488023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075559147 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073033097 seconds)
  done (took 3.314011377 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078172452 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073805577 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075860102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073057089 seconds)
  done (took 1.835283828 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077361285 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093101536 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090293003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077637863 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092468806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087595963 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069740255 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069585124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073502549 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077577431 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068419793 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097328869 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088409037 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077226468 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079716413 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066658368 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069057999 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087489767 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077686732 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077945839 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070410851 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077999013 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068260406 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089544967 seconds)
  done (took 3.435807855 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077906437 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104374399 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078274404 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088266072 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090499571 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066181956 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075162166 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089805005 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124099447 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065745858 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070447697 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066042293 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07304457 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065543836 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076862603 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105403283 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109377516 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068864917 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096294526 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065822913 seconds)
  done (took 3.196689618 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073279489 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069691372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065944769 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068725699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077815001 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072855881 seconds)
  done (took 1.969479727 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068750137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067592868 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0676375 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067670454 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072204791 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067795976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066545456 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067580632 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067394342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067549401 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067189844 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066473675 seconds)
  done (took 2.351819373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.425768219 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070215996 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069776767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066590441 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071201129 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066750319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080395993 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068608254 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091105988 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067218008 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067132604 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068836192 seconds)
  done (took 2.753207682 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207716602 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076964552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239948809 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138728489 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112990449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11661696 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104981337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114100149 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145305526 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102939477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169887565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167983996 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108323396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138995055 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089937357 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098965906 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157223177 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1640667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104770203 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167437463 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145229372 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125800641 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148720382 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102264107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107081193 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123064347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071337562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080686999 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17286806 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133262741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148662522 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112252975 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094967257 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178705439 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173276338 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144506269 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135961753 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084360918 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103236328 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134257334 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204113784 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090448913 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164619119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246952179 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082257503 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135288484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122204177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121012528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107997984 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090124942 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148448972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18658223 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140298508 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088319957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113039834 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117267817 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116720939 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104230452 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183599356 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162277088 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129146591 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071497512 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100052929 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154067844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132781461 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111280473 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128586069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094652693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134789541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155635928 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119599774 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145804255 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129865103 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08955545 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120878434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141172879 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130734328 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172397287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126279546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073748417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126751195 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104757419 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082277645 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142792916 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076493012 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177840036 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10000548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108505154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11376624 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109594326 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110197608 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162694074 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144882816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244298473 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066827518 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105066362 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122072069 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149538297 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088208697 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11038268 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118336582 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07825747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141194704 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075980076 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123977657 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076515634 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126906476 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133875117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076968087 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123832361 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10268509 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100955541 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135100174 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161967931 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090250861 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083149389 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168270937 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124055069 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105981774 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145682211 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157488785 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099890419 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103427018 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150696448 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181947916 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09053808 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164695823 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108613299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084802098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088191802 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125499726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113770238 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123858259 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082812521 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120279091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170971582 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075713886 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096839412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1354641 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080353588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081683874 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104277519 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101211849 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095426576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100817799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105127985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13855571 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124514467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105500148 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271144739 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099510622 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171871824 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090065103 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101060191 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10512798 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070153851 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13933185 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159553548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079516375 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165233727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124800169 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105839695 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120373659 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08387181 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141691925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078807808 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071589958 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14600717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111614606 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111298216 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151602027 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106359669 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128359635 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120441801 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136835983 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133892202 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129996734 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105629714 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088282387 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11231718 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126511352 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07370363 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092976534 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081420466 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104800263 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096839558 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084070891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144784052 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126811128 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101353228 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112727254 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097908856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1488862 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077399057 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131122965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12071712 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095434877 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153338655 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153598001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13268018 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100124014 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146297561 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070579625 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074198105 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089845011 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268219175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084422086 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08470341 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118701039 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150002968 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132017582 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13962856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112842581 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123546731 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156840534 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070177875 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115939634 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149407817 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121901512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10572556 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090917905 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100281221 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143524638 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109528115 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183910641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115505358 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12826809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154637053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100708896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085913874 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10405462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137094619 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105355847 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145576859 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100352469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088863335 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111389204 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074585496 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1010462 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128769062 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12146806 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137444603 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115840828 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134663087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077967848 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118338871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12199645 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124454684 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064627552 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121421714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162882295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094732842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119717427 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154634712 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07962582 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124690567 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324048124 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148587088 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086358282 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109966063 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119954946 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129606496 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121413209 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142048475 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110294087 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136319632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110184662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086145322 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088300355 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098782082 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106540555 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095625012 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108227224 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116671175 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095242776 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133540028 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104692014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109800485 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118702095 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097134577 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08996055 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096952503 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175533812 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121392699 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172850944 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099849736 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147370106 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165497911 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075266312 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080006394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079041438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141530173 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085101916 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132522013 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098460737 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10696014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125618493 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143939486 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096367121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069352932 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109547168 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13647922 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113813244 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099461564 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108224884 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164217395 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101278319 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079762662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114505794 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105715516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10334324 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173197732 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06131472 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242790489 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077355545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082464126 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129516896 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154995051 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081947018 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10318613 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121582193 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111736606 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129256284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102561394 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100508663 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115870019 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15211592 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130915951 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091329075 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113688933 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13145138 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15927453 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106690203 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09676458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17385065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153974087 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162097889 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089583784 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132919748 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115355525 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109532898 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14033914 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0842646 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165712444 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083085786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138184869 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105543901 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091788353 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13159902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100028651 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089428426 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1499329 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119226678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084161946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078881409 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119244712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121766075 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108348591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07572218 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140298913 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073312558 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133431651 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170442133 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082046869 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10463295 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096439308 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22462508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110218308 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105667511 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090745473 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099096928 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175554135 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089411409 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152275617 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143565022 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114905995 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139841588 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101092277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636908547 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078809808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153288745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11764437 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176088881 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097956485 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119462788 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110476736 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125890803 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146801389 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106369041 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179339461 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132917358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117623643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080531204 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10310144 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103757618 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08972976 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106242304 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114943043 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117569152 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094886529 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117560264 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124943231 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082811445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096270935 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15832873 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118477034 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146185479 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141871922 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085481588 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119124187 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139746775 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080250927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123481355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153700214 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107400083 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098477877 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08085558 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247375954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173270361 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074701726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164452253 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121307024 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111155865 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114818549 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116017858 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133436108 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108962632 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122708393 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094200093 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111870302 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114518446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082876272 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078305557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105138562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113754474 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098495046 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099704195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098866169 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153018088 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071755415 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096771783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104325929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147312459 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175957312 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089388094 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083489881 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12022684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114223752 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11497621 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121586336 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079798543 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08288278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083053898 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077969591 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109378597 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113379865 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105397197 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112550164 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165749873 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083354923 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226878161 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096581355 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105796398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070364421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079587536 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096646964 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098671919 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109313813 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101800566 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172818454 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094919949 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089922289 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093003839 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072932134 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083224954 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128229212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257149254 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12128165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098960409 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063450783 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110372364 seconds)
  done (took 59.513538546 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109753139 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083352273 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097655877 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150618658 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124274246 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213758941 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158733488 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200736538 seconds)
  done (took 2.788874376 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068789158 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094621182 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100044862 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082879831 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067479567 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069106171 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228399321 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081271568 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067023357 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089280921 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080469046 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070181364 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435866169 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069024053 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071281075 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065774389 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068149616 seconds)
  done (took 3.451352765 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367650158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36361689 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375798508 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074179972 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.831089165 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090346822 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.084965165 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.098447482 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073469229 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.269912445 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708936286 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.096175945 seconds)
  done (took 14.083596592 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077312963 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071316568 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084324532 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084498142 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073288691 seconds)
  done (took 2.039187085 seconds)
done (took 104.143408982 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081689075 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395741502 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05417383 seconds)
  done (took 2.127466376 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083679919 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085300654 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085120251 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083894848 seconds)
  done (took 1.992304964 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075234888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077289376 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085633743 seconds)
  done (took 1.8860895 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226714986 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141071533 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087658115 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083635392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079377612 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079086161 seconds)
  done (took 1.894979944 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073439364 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075277763 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07292067 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076864926 seconds)
  done (took 1.946724562 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076779531 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053229267 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055742812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056179295 seconds)
  done (took 1.89147497 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086960824 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079415642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079393706 seconds)
  done (took 1.895278521 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107994302 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086025011 seconds)
  done (took 1.843036764 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082094731 seconds)
  done (took 1.733077971 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099344128 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114202488 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132801897 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11187438 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137911312 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110481277 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086939195 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087686063 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078128307 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088409116 seconds)
  done (took 2.69817037 seconds)
done (took 22.090929228 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080029508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368278768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360905427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091777648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669224546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357009932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990522588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093077393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115702866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068757936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084509338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650625612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.019733406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324352719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006908389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319414599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650817996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06882469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068356025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068530331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975709191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068436907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068660381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069219864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648624465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371461128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068657652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323785611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068228192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070536587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354929093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069040807 seconds)
  done (took 16.251824041 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071164122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118916961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074258348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084955311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071369152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07032491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072213694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069686603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120777884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069610166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085619444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068253239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072954791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06913175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087989215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069093613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06950795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069209983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069602837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069206644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087962296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068604999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069132823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068966295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068870826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080411264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068782811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068715746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069000714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070594115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071593324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069646855 seconds)
  done (took 4.081138793 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115774875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12634811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074724963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103811676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113276174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070778035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144800959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093987179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128746543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068659842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085476017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0686781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102101417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069419582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08893603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069503331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070108346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069790541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069608235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069849314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088358126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068919833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069237364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070081604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069349222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08276939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069526279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069849837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069968227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070693666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072332957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06962468 seconds)
  done (took 4.341069024 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073233656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075707489 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083455243 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084399079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070358797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072519101 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073551605 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070204228 seconds)
  done (took 2.272482787 seconds)
done (took 28.599020453 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079797014 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069745236 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073217493 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081820237 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074494621 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079883093 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067807704 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075412702 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072740943 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074009958 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075443345 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068283373 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071742226 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067740358 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074426472 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06877905 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080052826 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072520372 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079977262 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080100454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070621389 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073643646 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07499765 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080086794 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079998738 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079834126 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078282728 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073590859 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070077517 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071203285 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077537939 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085100562 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069210417 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079826849 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068602237 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068563333 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072544978 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068901547 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080823808 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077727853 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070435974 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077282332 seconds)
  done (took 4.787323055 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088596111 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092018137 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085163478 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062445075 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067124805 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066080316 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089556992 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060662113 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060073535 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088833987 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056575309 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059843632 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062969859 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054477794 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059843908 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057767495 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062014715 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056351012 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05972493 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059958657 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058700596 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054771287 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060837767 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066086068 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057556606 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062471728 seconds)
  done (took 3.387333074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075420433 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084509011 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08921266 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127241777 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1042205 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077516746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07901772 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093737854 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086191286 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067633318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071912972 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095308612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089519889 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074512012 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068139219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085842619 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083128128 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070157341 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074272683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091809353 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085205808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085020102 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093868819 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082027885 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068269424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070334448 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072212661 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082554984 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073404488 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077108219 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072551657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072009025 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07031813 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079760346 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072432697 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069527372 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091400372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077736341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078857494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069121667 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071729536 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068901704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090311355 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123370002 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06780865 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074367588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075759233 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077562265 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068298619 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086948226 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080234372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068120811 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070987702 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067502087 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068387404 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081202405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070142427 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070250568 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077353823 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071379152 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086254517 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072296842 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083259308 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067769355 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075730582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067439709 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069470346 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067019614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093814821 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069936613 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109568891 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069073211 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069034382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077167809 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076058319 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074151393 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068275977 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083054571 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078068759 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07192868 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076806681 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071221074 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071395505 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088736603 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070914217 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069677042 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068978137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074376122 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070882693 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069664684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080914179 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068524022 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071317779 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084740206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067881685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069368459 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074475601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073346179 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067484373 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07910878 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073083958 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069050187 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077097397 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068361237 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071581416 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078699502 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074621907 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067250585 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073283235 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074386821 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.080251363 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069712978 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071016867 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070010449 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076864907 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074517876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072795466 seconds)
  done (took 10.684239878 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164950243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154968955 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071822914 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146043508 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077452528 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080165458 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149330163 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095106391 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068931806 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06930153 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069854669 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111021283 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106557328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11663312 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07938514 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068888961 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084144015 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114712196 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150377102 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144563847 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084570305 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077368269 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070749312 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069882849 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071110943 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079120498 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085898053 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077887321 seconds)
  done (took 4.453281556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081951754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101699163 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074850247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090643816 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09253461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06852922 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070966787 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070548415 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081570994 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080171651 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068280681 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074772762 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076177467 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072370776 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069730875 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076008027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076008646 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070324775 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071974932 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073975917 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07874137 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08195044 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072615116 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06816015 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074960144 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068460383 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065652143 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086269926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06887392 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091726116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066892098 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075592852 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082401447 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06926357 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06826956 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068458901 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068188065 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068084146 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070168926 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067277963 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066992 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058448076 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068005319 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080720181 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075029436 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057397823 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073169969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073521773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073467445 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066258614 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071332713 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07122208 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071623733 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075681081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07357584 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073428994 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069588853 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066668447 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076674117 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068593628 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065583619 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066681476 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072815894 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067147635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076226202 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072757534 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066699544 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068234589 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070406922 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074410597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068362833 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071680216 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065933535 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070272105 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073005831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069948083 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069229334 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066525556 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06787611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068738012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056192596 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0683542 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054085982 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071668625 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066359253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066827237 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068121368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073076113 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080642054 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069330194 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073870273 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068838439 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06720337 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071369272 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061336138 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070921194 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08380923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083646149 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068208972 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066329424 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082902132 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072832139 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067206781 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057172134 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075737878 seconds)
  done (took 9.260443537 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09485594 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088992586 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070515674 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084961795 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092827014 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086876377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075237543 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077442458 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070092623 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.083026077 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074049988 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077386154 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068819234 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077502763 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094401695 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07746396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070789513 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077442452 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073090726 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102004839 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084282354 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082670754 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075570145 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068930795 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076731618 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080724208 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090040018 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08095913 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079444708 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076288141 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081231981 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090746108 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.075628964 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072486533 seconds)
  done (took 4.452307901 seconds)
done (took 38.687565461 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74433769 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921055475 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746884261 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086434028 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.061450344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.768667831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.876206031 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743029541 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.865878285 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788200469 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.965100999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78051524 seconds)
done (took 65.035290214 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.796055176 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.884461875 seconds)
    (2/2) benchmarking "String"...
    done (took 2.018140475 seconds)
  done (took 5.587390176 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.061723649 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.274961365 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.988997952 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.742431134 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.749403948 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.052211462 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550159913 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265833558 seconds)
  done (took 30.308598055 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.965640982 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.948426284 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.425279007 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.462212357 seconds)
  done (took 15.534810943 seconds)
done (took 63.059697005 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.755744183 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.787532847 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.753510277 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727045799 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.800541906 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.763412507 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.866740859 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.933268303 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.74644043 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735499796 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.746392715 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.175826407 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746214024 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.906182589 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.747264167 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753386397 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.769210518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.163489278 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.9000362 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.752285201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.757691757 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.763443041 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745653552 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.754267096 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.798601336 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.747881165 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.180834392 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744637889 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.373934049 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.748678181 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77190932 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.041290607 seconds)
  done (took 203.643295422 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744626556 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.86258357 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.890993507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.786490204 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.347740333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.943915626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.882479313 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.363630701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.746994915 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.753819227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.042598827 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744517978 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.055755147 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.697222686 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.751773703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.747937322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.006354242 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.044550497 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.746417718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.021073871 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761446655 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.875646162 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.834988708 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.998915814 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.768363941 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.762111486 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.897555589 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.754631152 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.93805038 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.984643741 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.762953486 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754579765 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.968739507 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.617918774 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766439793 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767508491 seconds)
  done (took 170.084627544 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.893905755 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.132277664 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.745506682 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.745288271 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745930549 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.751130044 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.745504077 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876950688 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873688757 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.204830143 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.245628509 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.798207372 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.743836288 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569061766 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742585125 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811472296 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.757241204 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.748779077 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.759352491 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770307702 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746762702 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743897747 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870979076 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758330202 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.802543043 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751889855 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.744026961 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749518324 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112522283 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742867705 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748597948 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.113771364 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011221457 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745882644 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.736574582 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63488927 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820485458 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741407092 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739648127 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.734414794 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.953967506 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735372744 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.73624973 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.738971689 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908682176 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.732691262 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858238784 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733041341 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227541841 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.732148082 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731223285 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.618703812 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.402329081 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.731769846 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.731541757 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733481156 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.732034882 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731499178 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.738715135 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.731130161 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.589531903 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.805490961 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733301405 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.735295361 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737492299 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732271055 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.9786193 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735472252 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.334025703 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.791860637 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.855401597 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854091003 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.73538379 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801256108 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82554744 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.732911957 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.731554812 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.732049096 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.733419516 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.813954611 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.732914943 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.851702085 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739907916 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.734043938 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78197786 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.802160719 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.732868024 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625950361 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.735121817 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.731564882 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03626472 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799321358 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.731806789 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.732585067 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73189887 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.731364495 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.852916814 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853471969 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503174808 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.733258604 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.512878117 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.732556274 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873180238 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729221499 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.902169054 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728830912 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81191335 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734220304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.730483995 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.729062366 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759801471 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.730140925 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.787457303 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.732604994 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.729103984 seconds)
  done (took 399.143472454 seconds)
done (took 776.50640037 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.408433327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.372422895 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49130447 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.399224078 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.376022593 seconds)
  done (took 13.717749762 seconds)
done (took 15.388513517 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817170913 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.822110294 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.755524187 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.820730894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750539217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.819785555 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.802723694 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.756208318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.785657947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.75544697 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.788683863 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756286301 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743777054 seconds)
  done (took 24.844306362 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959757635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971460605 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801507407 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966966017 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777523569 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956208994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892267008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880730298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882526107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745385018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742357926 seconds)
  done (took 22.248910778 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966221358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969221588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804627432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976257605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.779533496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.988444597 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.895253479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882613137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.88106477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744685388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743814449 seconds)
  done (took 22.304720508 seconds)
done (took 71.068995947 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.736361981 seconds)
  done (took 3.407017883 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.761392285 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.901648701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.746092094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.741640268 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.737432487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.737785639 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.741533032 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.740593946 seconds)
  done (took 15.780118641 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.733252241 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.733961354 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.735714812 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.737590381 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.735289036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.735654864 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.73541728 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.735849494 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.732893211 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.733489064 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733496558 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.730774261 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.730264742 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.734244638 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.731959394 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.731895703 seconds)
  done (took 29.412824601 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.733090783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.730335651 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.730433202 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.730600815 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.731309801 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.729841763 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.731472996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.729870825 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.729910866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.729490059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.732182898 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.729244448 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.729998362 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.72937166 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.729385025 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.731241644 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.727959988 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.728311875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.732003548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727601398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.728849882 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.727381068 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.728113997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.728258343 seconds)
  done (took 43.187082158 seconds)
done (took 93.457745751 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.452175565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.200137575 seconds)
  done (took 8.317017864 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.731590972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.731454699 seconds)
  done (took 5.168408903 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.730066809 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.729609746 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.729973912 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.730238899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.729724987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.731287251 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.729248366 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.729052151 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.72913758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.730261258 seconds)
  done (took 18.964167402 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.730406249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.730653211 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.727482061 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.73019433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.729954553 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.728360989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.730208158 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.729961551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.730047392 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.727310434 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.729873793 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.728154292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.729272272 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.727479775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.730761364 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.727102952 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.727549949 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728937384 seconds)
  done (took 32.787882514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.729222396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.730145297 seconds)
  done (took 5.123571736 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.727207804 seconds)
    (2/7) benchmarking "second"...
    done (took 1.728188425 seconds)
    (3/7) benchmarking "month"...
    done (took 1.7271173 seconds)
    (4/7) benchmarking "year"...
    done (took 1.726849971 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.726806442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.727373338 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.727869856 seconds)
  done (took 13.756533535 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.730918093 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.885587427 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.956363496 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.415108847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73355059 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.734124734 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.685556873 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.73459315 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.736322497 seconds)
  done (took 19.277678202 seconds)
done (took 105.059813158 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.551657145 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.726614918 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.080338848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.847068695 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.743361744 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.022215476 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.767900563 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.950945972 seconds)
done (took 42.35655359 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.796365232 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.17700759 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.2042291 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.180531589 seconds)
  done (took 12.226079182 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.711251044 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26644059 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.77330165 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.40216795 seconds)
  done (took 20.015907077 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.096264759 seconds)
    (2/2) benchmarking "read"...
    done (took 2.093825471 seconds)
  done (took 5.86097947 seconds)
done (took 46.564577951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731459882 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.731895303 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.731787173 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.728969442 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.732669746 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.728534586 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.729099123 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.728555769 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.732140026 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.73192213 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.731550059 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.731593099 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.731735062 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730932806 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72975375 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7288809 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.729716798 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731287015 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.728406152 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728365885 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728633225 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73124039 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.730273735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.728570374 seconds)
  done (took 43.195273808 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.731304684 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.729861607 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.731543581 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.732412871 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.727979418 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.731029542 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.730745927 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.728256819 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732512546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.73160881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728114951 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.727957998 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.732129659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.729690903 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732401189 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729254673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.731554746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728981967 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732192761 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728941699 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.73156175 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727954333 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.728372565 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731557544 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.727878918 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727669509 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.73217356 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.72964157 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730859232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.728352681 seconds)
  done (took 53.571496455 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73631573 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.73935019 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730852691 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.731126156 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.731056193 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730561601 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.732911879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.732231466 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731512419 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.731257614 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732558766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.732475341 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.73130978 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.73118522 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.732087801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731106968 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.731641116 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731249737 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.733897196 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.731309161 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.732602943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.732061615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.731906799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.731552864 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.734700979 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.73085346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.733666749 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.73162676 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.730649317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.732263377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.731563292 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.731055107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.731639491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.73211838 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.732727961 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.732132474 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.735900544 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.737780535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.730452986 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.731468804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.732289173 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.732998786 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.731897596 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.732669802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.7305771 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.731688209 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.731733404 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.732749025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.731029102 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.732348218 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.731085195 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.731648299 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.732654648 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.731081622 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.731121367 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732500319 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.731978477 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.731843702 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.731665122 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.732071622 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.731969684 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.73173062 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.732355634 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.732047235 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.734222392 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.733888777 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.732163995 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734287577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.732086682 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.733647906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733756963 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.733327943 seconds)
  done (took 126.396975467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734212233 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730681233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.730247373 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.731483013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730412449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733399769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731290899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733245856 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731275376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.73358067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732807432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731161904 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7306322 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733999526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735487289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.731012047 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733489388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731142333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.733792582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734479157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734621911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731740493 seconds)
  done (took 39.783103639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734301056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.733944788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.731025453 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734445835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731263401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733813339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.733785755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.734115165 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735205843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731884025 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732015463 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735653347 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.731870449 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732452914 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733274933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73227187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734834368 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.732235679 seconds)
  done (took 32.868311184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.732507172 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.732941913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.734476941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.732096026 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.733715944 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.735441736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733235723 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.736374707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.734613142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.733838732 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.734955769 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734736466 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.73577128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733179447 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734880919 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732583509 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.735349098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732520542 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736779463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734004574 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.733166972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73620343 seconds)
  done (took 39.822799049 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735913773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.73654597 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734003881 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.7337904 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.732906471 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.735508561 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.736266021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.734303192 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.737140786 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.736789844 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733325421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.735251226 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.733688808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.734250782 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.734170194 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733295417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.736355207 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.734817578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738479108 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.733891075 seconds)
  done (took 36.371615176 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.737833503 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738237033 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73764974 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.737530634 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738529202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7385442 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737985997 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.738313348 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737375987 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739356269 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.737613924 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.738441722 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.738887012 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738145204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737952791 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738949638 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738594887 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738151497 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738226627 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740463534 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.739468764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740413515 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738971703 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.739144767 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.738732714 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738566976 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740627607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.738435701 seconds)
  done (took 50.353435295 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738300771 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739073278 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.735181274 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73634305 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.737090454 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.735943175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.736535272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.736178844 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738796227 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736759975 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.739414789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738580111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.738581297 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.73868432 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.738026571 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.740047977 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738648558 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.736041655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736209559 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737333711 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.740530942 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739447051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.739270307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736675374 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737365738 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.739738257 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736819456 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737047662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739703185 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736337704 seconds)
  done (took 53.808852069 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.759641022 seconds)
    (2/2) benchmarking "in"...
    done (took 1.758924005 seconds)
  done (took 5.193084155 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.736567954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74034996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.739869224 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.73735961 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738805908 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74013687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740579023 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73695686 seconds)
  done (took 15.58563837 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.742866312 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.740901916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740335992 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.74134381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.741712454 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.743148593 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750741175 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.740179665 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.745376486 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.743083898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.74789928 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.748973144 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.749140857 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743341368 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.74221723 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744887391 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.741277702 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.741895632 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.743930274 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.742152144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742347365 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743858959 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745583208 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.740033508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.745183518 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.755531551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.749346833 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.741614979 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743447771 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751130618 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.743543053 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.738770843 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.743503074 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.742338902 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.741986568 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.744083811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754363571 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744324709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.751971622 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742928894 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741824521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.740650596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.744394082 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.747396143 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746090411 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.742271678 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.742746744 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.739883379 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.743055188 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.746458809 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.746286337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743433341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740219961 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75409881 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.745616796 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751765474 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.743833881 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.746419566 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.752208602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.755893077 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.759244764 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.750630663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745979638 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745667676 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753488958 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.766231624 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754094411 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.74058493 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.741374284 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.744437143 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.754546776 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760159042 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.752876155 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.743661319 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74607167 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.745769528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746746653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744399203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75513602 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.749217614 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.744918289 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745784008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753561607 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764953716 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745186808 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.74483668 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.74563522 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.744989811 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.747440158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757463103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.745441642 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.744611843 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.746827708 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.746314881 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.750146234 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.745914861 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.746466402 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74886631 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743590716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.746708727 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745812254 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749257831 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.75369452 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746537255 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745863929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.7570022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.744511999 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746147432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.758914929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.746438938 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746644337 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.747006943 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.75594896 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.743781028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749599499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.755699231 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.746716884 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749266431 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.746942344 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.747354603 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756297528 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.770847746 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.74752244 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.746660904 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.75180178 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.756960995 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748498392 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752107654 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.747088132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743966027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744560973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750455802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747187329 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.751017163 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7490355 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752732183 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745655325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.748321031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.748227483 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750185871 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751773225 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.749646614 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751121068 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.754510074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.74776707 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.750716889 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.759222083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.749751796 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751529291 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.751603875 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745225372 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74844282 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.751103566 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.748651576 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.750400689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751252507 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.74889571 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.748497951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748413595 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.749036773 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748529176 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.751635639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752822882 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.750092286 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.755170622 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749296145 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.74789927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.748921759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.748608524 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.750664462 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.749007751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.748508965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754709428 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.755124347 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.749689257 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.750448104 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.755202739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749986581 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750459181 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750054971 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.753641545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.757725896 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.750198164 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760433605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.749950146 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749969972 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749429471 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.751051607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.750830816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750776499 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.752640241 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.755227793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76508603 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759075959 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.75252118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.752619735 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.751840073 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.753509919 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757521246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752273511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.750311836 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752526595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751873964 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751766875 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.754976776 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.751681342 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.752629273 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.751119943 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.750418682 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.751698465 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750301151 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.753821082 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.757602273 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.748315148 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751909278 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752169619 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.752478027 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749588373 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.752816394 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753286381 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.752375433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.752029446 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.763424687 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.748909651 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754201893 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754538001 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.753796488 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.751427054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.752366494 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757143279 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.754208167 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763555408 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.755485012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.754832409 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761236892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.755008249 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.753950912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756514029 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.753121844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750434922 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.755822852 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.758746851 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.752853205 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.753353555 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.753243672 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755107011 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753863561 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.762985701 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751759921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.752798834 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.754282412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.75907854 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.750418491 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.755853336 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756000634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.755559565 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757912627 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753853117 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.753914032 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758775102 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.754337748 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.754209701 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.753427198 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757123097 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.759587288 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.762900078 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.756732733 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.759189425 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.755104215 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.757347709 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.756481035 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.755179497 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.755658945 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769872641 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.76214755 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765954175 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.758823782 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.755009195 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764532183 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.756038693 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.761394601 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756676591 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757601473 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756166986 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755901511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751817128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.758785679 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.754781 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758448525 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.757455338 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.758792574 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.756090833 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.757697268 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.756558822 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.756873074 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.755547674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.757427681 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.757144945 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.762395086 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759536387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.757230847 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.758480701 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765562659 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75937916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.759791903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.75750371 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.758341083 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.757160674 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.758382758 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.757600916 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.761718416 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.763051758 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.760020566 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.766445467 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.760670507 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768351707 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.758098283 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.760445801 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.763877975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.754134113 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.757799517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.758524655 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.757472023 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768273241 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.757244321 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.75857021 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.761276607 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757310987 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.758463526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.757427065 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.758165576 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757644327 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.757508526 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770367912 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.760354179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.761750148 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761017801 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.75609888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.758243003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.757940404 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.757908699 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766130246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.759080186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.760513821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.759550633 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.761423926 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.75812164 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.758813185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.758168774 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.755475705 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.75894189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768993229 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.75929709 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763180133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.759137088 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.772131255 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759786545 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769006491 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.759959168 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.76142719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.760347507 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.758881896 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763807985 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.760384044 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.762335021 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.760300145 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762284724 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.762265497 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.76025005 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.765013075 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.761101672 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.760777607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761219413 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76944961 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779467068 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.760979321 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762781423 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.758207463 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.762360472 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.764153191 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.760626172 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.760168246 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763124095 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769981477 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765277893 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762506599 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.760427979 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762955327 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761742645 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.759620417 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.76033451 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.760855864 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.760647683 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.765095147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.762156264 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768966037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.760296085 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.76275465 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765860858 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.762387841 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.774366346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.761107725 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764028954 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762435657 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.761038072 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.764385898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.762577204 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.763036547 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765334528 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762272658 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764060789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769126713 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.768355744 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.766046795 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.763058975 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.763422481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.764400712 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.765843439 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763039313 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.762619691 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762395037 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.764019055 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.763178157 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.766647205 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.76280398 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.761384121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.764741897 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761994799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765831175 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.768451147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764714505 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759714678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.762247641 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762540341 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.763024887 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.76499784 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.777142315 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.765857761 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.771687368 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.770476647 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.767434181 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.766079002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766500359 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.772357203 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.763372248 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.766548719 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.76465618 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.767593267 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.765151649 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.768375875 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764915962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.774708762 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.764959614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765640168 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775499646 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.76615704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76444084 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.765707796 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.768967634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.76638922 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.761233071 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.764488264 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.766077351 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775223776 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767687013 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765481579 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768204767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.764043747 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.767235548 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767679881 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763591213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.765717016 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.762070731 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.766652052 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765970158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764115829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.762355893 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766772857 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.766833398 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.769373523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.772391638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.761821634 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768554465 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.767249852 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.767212735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766204634 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765573799 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.763256464 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.762773608 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767593815 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765868152 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.768240594 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.770321071 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.766709849 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.767735057 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.765811265 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766801292 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768657376 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.77499493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.770575054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.763308617 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.76656412 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768880669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.770455593 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766717073 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.766431734 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768549166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771485627 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.766765725 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.767093469 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.76629351 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.770488687 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.78508681 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.765895807 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768537844 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.769050858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775421754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.767354793 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764553912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.766809689 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.773279236 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.77044666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.774076609 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.768284242 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776913858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769507178 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770456876 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.770391463 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.770538417 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.776245792 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771595457 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768673338 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.769349489 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.773402578 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.785280339 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768133079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777139739 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796796875 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.769486633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.770757625 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76910953 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768542046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.767531497 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.773037888 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.769400463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.768634183 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767775205 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.769152742 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.769905808 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775902124 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772206769 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.767289013 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.768580447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.770800474 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.774814494 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.766164437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.769406082 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.768796537 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.76977196 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.770131738 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.768726766 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771972451 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784919724 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.7813536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.76941867 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.770209563 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.76522194 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.775338073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.773332288 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778426921 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.7754835 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.770597491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.770586036 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.772862399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771205498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.768390698 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.773265664 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.772067165 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771251551 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.766999211 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.786890713 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77742687 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.779228312 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.772964109 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772330273 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.769836187 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77614932 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771202428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772020448 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.775329612 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772314996 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774969553 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.771007703 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.770161077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.77376074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.775542208 seconds)
  done (took 1049.84211628 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769303632 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767682503 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767823247 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768240461 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767683459 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76880808 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768201396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.76869387 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768608624 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769216488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768777823 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769877438 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769136152 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769011286 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769027393 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768895721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768564532 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769374243 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769109654 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769232567 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769697728 seconds)
  done (took 38.84975175 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772530977 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.769271101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768344842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772218938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769215436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771451197 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.769322649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771725666 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77216298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769819369 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773278952 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772138225 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770652341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.769015229 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770132283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772073476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772215023 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770772667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.772421403 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769857847 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772833006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770859924 seconds)
  done (took 40.669212853 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.773776463 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775177263 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.774666495 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771714494 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.773410709 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.771118022 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.774894094 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774417028 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.774103503 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777156691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.774785314 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776192896 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.77999334 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.777248147 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.778671356 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.772898334 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.917832153 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775289041 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775590702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.774564665 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.77192277 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.784809543 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.770795857 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.771653656 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.774873426 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.774929186 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.774711286 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.773780397 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.775035355 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776668919 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.777844314 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.774511816 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.775991407 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.778118025 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776186129 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.776807206 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.778462139 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.77575166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.77237968 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.774820606 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.78549413 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.790852731 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.775666506 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.784762168 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.775301334 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.774929797 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.779288167 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.781918536 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.772858349 seconds)
  done (took 88.883883557 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.774998053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.77716856 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.773230839 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.775794576 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.776825008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.777201912 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.775418424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776521654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.773056021 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.773377455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777042393 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.773556763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773327956 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.777434514 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.776760331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77374622 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774029405 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.773541741 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774198275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.773331746 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774051356 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.776533561 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.776432414 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.774582045 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776747938 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.774098937 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773953474 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.775436217 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.77470039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.774348598 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.776639819 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776890293 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.77703625 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.775126875 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.775701461 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.77641894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777242987 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.773952094 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.77737029 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.774455653 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.777072347 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.7773972 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.777318988 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.777195499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774571568 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.774674445 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775068025 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775282699 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.775523124 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.777676333 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.778027421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.775887606 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.777963387 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775542409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779034196 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.778126235 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776474838 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.775621936 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.778945303 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.776119259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.775709924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.778299654 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.77593607 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778578266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.778759685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.77684789 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.775498735 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.778429345 seconds)
  done (took 122.47613126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779045357 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.779173826 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780312695 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780305767 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781056484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.779796825 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780189466 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.779846832 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.779570185 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780522108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779916623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.779871012 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.780938884 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.779562365 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.780388137 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.779708724 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.780284064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780860733 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78092057 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780804119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.780998197 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.780420075 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781767893 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.780178818 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781404514 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780539278 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781162864 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780825183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781407506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781412391 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781043789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.782046128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.781256631 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781625491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.782330937 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.780673379 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782004316 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780781995 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.780845165 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782778179 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781115383 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781383042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782363823 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.7820542 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781570766 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78297992 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782460407 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.782302221 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781254167 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781441846 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.78242982 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781817895 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783374811 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782500149 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782317974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.78162341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78233929 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783205398 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782257199 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783690559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782857856 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.782787531 seconds)
  done (took 112.154173104 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782008531 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78236551 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.779806463 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.779922693 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783508104 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779987919 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781714851 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.782689669 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782912525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.782220713 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783204273 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779627938 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779990444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783234948 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779967938 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780069115 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779910492 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779916588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782462371 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78061825 seconds)
  done (took 37.342850476 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.781238093 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782702172 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.78014621 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.780962061 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.783343462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.781054537 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.783579277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783158485 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780038299 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784483244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784478202 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784026598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781774068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78191495 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.78382256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.781682173 seconds)
  done (took 30.236050513 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782162082 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.783704896 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.784589815 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.785359801 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.782001816 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.781767529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.784830486 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.782344178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.782387595 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.785869414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.784609995 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.785651639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.784233898 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.785814737 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.782450505 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.784182495 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.782417337 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.782642824 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785614557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.785642704 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.783005769 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.782387071 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.784888601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.785390392 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.782971396 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784968147 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.78582855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.786431305 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.785069139 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.785708836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.783013951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.783917921 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.78301605 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.783239288 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.787182055 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.782968218 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.786292637 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.785323669 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.785739027 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.785801001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.785839037 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.783891962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.786713575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.78619779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.7840659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.786159969 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.783590892 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.785165887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.784624899 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.783745652 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.787009206 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.789241945 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.786504336 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.787094886 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.786226082 seconds)
  done (took 99.876959487 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786929036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786617417 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784297076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786898341 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.787401192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.785866378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788204595 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784185186 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785050443 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787398407 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785287308 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788676567 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784668056 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788019454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786238574 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787911287 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784131989 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.784992121 seconds)
  done (took 33.87327593 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785098501 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785239954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.787802464 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.785163199 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.785225013 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788646584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785244091 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787463187 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788367547 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785668656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785834006 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.787682309 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788256632 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.788637745 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786320919 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786852664 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.789017959 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789190062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786392091 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785644098 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788990923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78819193 seconds)
  done (took 41.036155332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.789926099 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.789725327 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.806387028 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.82919183 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.816581742 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.78852679 seconds)
  done (took 12.543121062 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786660667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788879848 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787196977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789744769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789350185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786499424 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787156224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788013304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789277166 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788484619 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787460642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789410595 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790049675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788465495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790047825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79073154 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786670678 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786891879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788536921 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789709091 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787769612 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790467984 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788446194 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788232074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7879332 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787823316 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790044771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788902804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788178731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790110399 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790775246 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787888005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789991765 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788071417 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79147297 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790586948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788375239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791409766 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79060277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788610004 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790692299 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791850027 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790787558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788956811 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791664059 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787921514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789352031 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789277846 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788024159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792023182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791387126 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788681379 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79236731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792196971 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791332245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792730374 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789399612 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788474096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791770174 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790186524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789501754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792191909 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789520468 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791100733 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79265962 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790518993 seconds)
  done (took 119.833723684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789658616 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790091452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789927967 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791423561 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79026529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790133017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790004652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790786889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790521349 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790788761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792793297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78996729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79040983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791231549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790098476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790299503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790576964 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790341661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790839798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793620214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791581674 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79194008 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791169481 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791160004 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791473975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79346509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791319239 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790831866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791539909 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790800042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791463056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791198151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791561242 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791465787 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791263822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791250366 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791589955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791014379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791648223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793909444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792285842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793664704 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791801647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79227991 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792006825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791663812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792772145 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79157263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791899517 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792115208 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794046083 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793428692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79396737 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792285867 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792952453 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792519867 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792688276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793438062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792661768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79562576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793350378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792896299 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795718694 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793058493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793096209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79340004 seconds)
  done (took 119.992032657 seconds)
done (took 2446.225616791 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.848800585 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.867832505 seconds)
  done (took 15.445729243 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.958944784 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.910387532 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.79769213 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.796709569 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.797743513 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.821428924 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.812302616 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.797498704 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.797771283 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796922916 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.797657094 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.985068725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.792616781 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.798284851 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.799391658 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889376213 seconds)
  done (took 51.083336411 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.801213147 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.801810248 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.812398968 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.804247593 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.80162075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.813535225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.834408059 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.804489766 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.83492736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.813671885 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.868332539 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.810461706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.801703822 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.8486034 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.814198869 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.815657018 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.88795509 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.8732453 seconds)
  done (took 34.574129994 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.878273341 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.807800619 seconds)
  done (took 10.424192054 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.800157298 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.801727122 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.796763108 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.820236486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.803856367 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.80723012 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.814921366 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.80482223 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.816488827 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.830917092 seconds)
  done (took 69.834000026 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.807509826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.802770398 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801661552 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.800259507 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794302879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.797918481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.800564099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.79214796 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.474591291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.83428184 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.805662041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.805875932 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.800165887 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.802603187 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.797843883 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.823902534 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.917315246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.797242793 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.797166498 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.805980218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.801546244 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.892019529 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.814676856 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.799657698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.830122966 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47513004 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811396861 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.80765579 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.936597759 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.79936762 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.800568268 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.80122421 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.802939565 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.190590792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.090763117 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.799662809 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.809546488 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.809813473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.798854749 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97669723 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.802302921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.807090202 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.782953474 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.069703787 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.883006158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.843695399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.158308875 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.805649714 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804303712 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83264769 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805241903 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.805127965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.816047618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.311637087 seconds)
  done (took 128.973670475 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.797319344 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.374499407 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.962666883 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797489989 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079883528 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039410463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.798873851 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.847468822 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.800098496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.046360013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.975619944 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.916416947 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799308793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.798664904 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800252733 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.797033126 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.951363108 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.867279492 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799580256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.797100288 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834407327 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062765744 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924393118 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800865114 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.8233739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026256096 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.923493132 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.91445115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.294617897 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.797104504 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865673677 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798843659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.798126989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797988928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.964071422 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.905666564 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895001482 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.799439582 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7982301 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.799812575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.461255004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022778402 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.907973871 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935916234 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046577168 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028043732 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447884826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.798561753 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.438193292 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996242495 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008590732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.052743193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.927627079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.802764376 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.044472206 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800959187 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799068957 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061232993 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026215491 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914982274 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801436512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802312282 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799605236 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114993 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801921817 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.909416622 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80323669 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802201931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912519381 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.916240915 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.029487438 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04242876 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830611232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.710842549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.308671441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083417556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87198567 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063630185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801866256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.800867674 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895843237 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.554575726 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97469535 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116325072 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06571936 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843173401 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.403928794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.801307097 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.048596816 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.051722194 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.030352769 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046628957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.967326001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.10905347 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80105179 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.8018141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.002569593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.934421389 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.803895573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167072089 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050961165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.532645146 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.833139069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108343673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938357827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804628768 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.428306735 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8013317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004309531 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.84464133 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.80358994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805889623 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.049240597 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.673257178 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802478656 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.579157071 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.872100276 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.806137735 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067091974 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.806428946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045827356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805671508 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113913979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.478592522 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846948694 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.995617012 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046149876 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.607111515 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073525878 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116818226 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926654938 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.061155565 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.620382527 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.803154919 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086491127 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805902049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.803731283 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97218475 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807084433 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957768875 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809208337 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063120158 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828727581 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975913171 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807265408 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07787686 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849485819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855943358 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807786297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923130988 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806938956 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.852332101 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98893903 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805347163 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803301207 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.374013126 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805894089 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953992221 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.103879257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829393793 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.874456767 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330974619 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804375366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899745158 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833329771 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.404660114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.805559575 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.97603931 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.808272671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.762926599 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803820303 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.11715818 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.028772192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808984799 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.806698472 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.603155584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.51379767 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805480829 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.982419026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.06008622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.459517467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026093606 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808174056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938344932 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.807603553 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.885956125 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159184357 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805758818 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806428999 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.806972577 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.806270889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806173433 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035024532 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834307621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.489780635 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.944279399 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051291101 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.119833666 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.06893876 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854767457 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810496885 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073847534 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.80796177 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.873848476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.8084605 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83264832 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053439841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809965383 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036913637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09360023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.852690398 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861942866 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.810102359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807914054 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.807579527 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952228264 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908734908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81020321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.809400045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.925486221 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935315865 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996996716 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.407563337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.983358934 seconds)
  done (took 889.293442004 seconds)
done (took 1201.358713394 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811768131 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.81249004 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.801315873 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813709528 seconds)
  done (took 28.986520871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.818814851 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816521683 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816880476 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816475737 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818493039 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815902284 seconds)
  done (took 12.650734912 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.859057994 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.810934848 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813555607 seconds)
  done (took 21.232188138 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.884600308 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.214657278 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.920027529 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.250080258 seconds)
  done (took 10.017921938 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819768491 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.817903204 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.818059677 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.82063167 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.821082132 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.820495967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.819691517 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.820565387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82198742 seconds)
  done (took 18.129241424 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.983071152 seconds)
done (took 96.747875785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.890880344 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.179937855 seconds)
    (3/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.815289826 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.689437053 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.821895179 seconds)
    (6/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.740520687 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.907953413 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.245600387 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.813938092 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.948506213 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.169374206 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865364104 seconds)
    (13/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.33780827 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.860718034 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.318669702 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.846050061 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.955666419 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.756181723 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.800848412 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.398605633 seconds)
    (21/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.217149422 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989346311 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.908985345 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.057891865 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.049851325 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.20195944 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.930723392 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188714916 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.06328047 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.111829896 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.905414196 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.747340415 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.108575794 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.843420992 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139812495 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.242449112 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.922652696 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.817825504 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.456990057 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.821208785 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.035310602 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.615361 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.356307245 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.905741374 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.817996065 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.406457914 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.19083279 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326205069 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163155772 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.620565278 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.952579056 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.800428544 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.945254904 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072043666 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 5.635785956 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.8004178 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.822148987 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.806043395 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.930326105 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.024328453 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.178038842 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.221317828 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.824699732 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.92141778 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.159449891 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.725777413 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850990926 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.325872319 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.921322604 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.896298294 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.901795342 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.824912882 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.051481707 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.807598567 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.952075831 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 6.819333651 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.181840544 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.923441671 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.842653048 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.497268911 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.190406693 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.440909507 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.226396726 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.115402918 seconds)
    (85/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.982894067 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.521615101 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805986891 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.835449037 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.024692728 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.105349729 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.127512853 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.825850984 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897116939 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.821013901 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.945284882 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.881911507 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.213434859 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.810949619 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.970053877 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.821658582 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.725707232 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.927416636 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.470013745 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166462639 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.043501443 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.904170208 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.820903063 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.476556947 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.088474704 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.020907857 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.057462298 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.824453249 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.825003976 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.689133098 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883070329 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.271446908 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.844336555 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.953098113 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.154707614 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.807581773 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.134803518 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.076793851 seconds)
    (123/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.961349117 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.358748552 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.020645661 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.035395706 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 5.592178299 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.084494428 seconds)
    (129/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.904548328 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.805735896 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.925804495 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.045496546 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.733297349 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.020908344 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.218627964 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.046071559 seconds)
    (137/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.543828592 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.608622938 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.934784052 seconds)
    (140/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.023093372 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.927949288 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.87614616 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.924773672 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.040484773 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.854725422 seconds)
    (146/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.021985583 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.128500355 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.010033355 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958135772 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.103264994 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.849320696 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.808921196 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.980360592 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.810636719 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.843670217 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.483548739 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.337066176 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.154914836 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.010098932 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.828056402 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220623551 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.953622568 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728687068 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.853157262 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.097155875 seconds)
    (166/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.204970883 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.426691411 seconds)
    (168/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.907824385 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.200945733 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831882471 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.195470933 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.82719276 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.956316176 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.126168968 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.815908323 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.33299789 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.828336776 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515274325 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.863682327 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.843070733 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.110953146 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.057651358 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.816595189 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.877528393 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.208039306 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.847228584 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.981280991 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.920377213 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.829216948 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.111569358 seconds)
    (191/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.018103859 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.861053024 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.850271493 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.882486604 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.911655054 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.832877979 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.958201931 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.881561169 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.610764164 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.959959516 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.147609974 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.833633341 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.832565348 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.88894387 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.921834203 seconds)
    (206/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.99792964 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83492231 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.842039157 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.990205972 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.833069788 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.922219458 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.522251883 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.04457159 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.082217966 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.421910804 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.234873407 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.019982774 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.978587982 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994725037 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.17968823 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.016695446 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.435031325 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.832026314 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.068680318 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.899672651 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.741001503 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169669168 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.832987016 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.852734915 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.365389108 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.0094096 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.125408812 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.939275607 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.998675526 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.834095387 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.873106357 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.204908225 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.906125699 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.906674445 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.617743696 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.732887013 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.070275797 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.982544066 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.850563317 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.904163328 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.137640976 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.718352979 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.859264923 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.813381974 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.747142249 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.434008808 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.832244064 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.895518544 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.270330637 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960413897 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.927030536 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.024927522 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.837118594 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.864058879 seconds)
    (260/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.213748981 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.803480349 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.735989418 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.950451008 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.21874162 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 4.780636255 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.957726732 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.921493318 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.134106055 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.941264484 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.16360867 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.863861396 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.830818859 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.124461205 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.199704413 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.133080172 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.816311393 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.911878137 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.858370649 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.393177087 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.866456509 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.912981633 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.91248575 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.953306771 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.986493294 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.861068045 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947221221 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.857967086 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.999096933 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.990014942 seconds)
    (290/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.439855742 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.198433379 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983123095 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.005041165 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.122683296 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.832937168 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.919601753 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.873476189 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.976230152 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.621505083 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.226978985 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056281642 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.819302733 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.859045705 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.272207377 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.847533661 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.129283248 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.986163914 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.210583234 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.821364267 seconds)
  done (took 1006.186106225 seconds)
done (took 1007.954865703 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.989701579 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860876551 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.842887017 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.866783838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.955127247 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.87754916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.85289661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.846789505 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.89173268 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.893685222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.844683641 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.878698508 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.845423612 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.845230479 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.844271059 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858179886 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146947404 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867174061 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.861500617 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.855698462 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.862112594 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.842776524 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.894040543 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877625425 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851219326 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.84892389 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.850098474 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.86461368 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.957554888 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850908988 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.848480519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.857057164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.146511719 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86460788 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84048382 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.867117062 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.858682048 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.856170931 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.847387353 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.876389709 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.280304762 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.850769181 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.848828447 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.847603623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.847129635 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.850703246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.848749866 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.853251043 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858024302 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860506171 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278411489 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.867461865 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849036971 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.848782574 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856095146 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.846567802 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.850597655 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862355611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.86687584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862164463 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.139423582 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873899992 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.848913098 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.864170475 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.854480929 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316014324 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.847577062 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.851080681 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284094453 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.857622653 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.314519315 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.860733724 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848616629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.862761622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.879790688 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.149561591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864175865 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.844608173 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.855842219 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.847094638 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.857565199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86167859 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.853298781 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.847929092 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861448607 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.881531245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.85900176 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.849003836 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.856608775 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.867789372 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.855885859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.861418899 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.85123654 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.844840451 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.859216895 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852456483 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.852873595 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.852989516 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.854210999 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.861188371 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.281217745 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871440046 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.846086526 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.845651389 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.847859112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.863918179 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.279201276 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.855461775 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.87240796 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.896347649 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.852349607 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.141383565 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874799494 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867760871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.859179212 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852821911 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.846500189 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.141817052 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.302028905 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869584969 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.851738024 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.849801926 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866223943 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.852475761 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.84582219 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153459672 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.87303458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863326918 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972151606 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859581474 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.882138872 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.849428766 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.854237705 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.87895235 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867340314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.881165856 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.855078881 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868123355 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.8685839 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84590095 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.861931962 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.861392663 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.852956677 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85813442 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.846451531 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.879411877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863979425 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864328878 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.872011586 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.973321987 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.850718031 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141784288 seconds)
done (took 291.979942393 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.919428585 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.839780068 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.951498221 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.847855708 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.933865284 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.935888286 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.845713703 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.845445024 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.844696443 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.260369835 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.845141015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.847145127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.84531502 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.845585635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.931828421 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.847927028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.846348293 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191740223 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.850961891 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.920835116 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846291079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.846493007 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.850703596 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234849049 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.848062465 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.848678431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.920305045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.848302703 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.229892783 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.842741993 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.844989911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.198605236 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.939988046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.868240808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.859607344 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.856524997 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.936297174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.853571794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.9314319 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.932772568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.952096584 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.892046124 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.847730407 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.845278219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.852385534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.852940755 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.847124717 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.877757913 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.846742301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.848171075 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.219031029 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.860326551 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.849020223 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.847797369 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.847674006 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.881630818 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847913069 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.853126707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.940590294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.851735289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.915661807 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268560715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229537043 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.850798893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8512352 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.848292138 seconds)
  done (took 183.14086182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.91794624 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925652837 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918561454 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.855586297 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.90358832 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.925482738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.854458632 seconds)
  done (took 15.083099151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.85899362 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850756188 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901768214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.902562834 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851635657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.003477422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.852628979 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.863644943 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.849751191 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905623081 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853763491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852391798 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.8599065 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848529875 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902482513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.864235796 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.967178162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.853440825 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852778574 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.009267474 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849244555 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.859452305 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.909741991 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.865460753 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.855219827 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858894682 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.436547578 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853187289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850330741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.853277245 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850211954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.896652202 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.852471744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.8515486 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850846175 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.970334984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.854036767 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849777636 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.852704409 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.849242538 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.853387289 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.854112056 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.854223648 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.851024405 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.852243066 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877876631 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.852045852 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.853323238 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853358801 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854067859 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.905756773 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.854742712 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.85107722 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.851202009 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.910629749 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860334146 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.854434219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.85161281 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.854743016 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851698937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.011652171 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.903785099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.854139633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.903388371 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854562649 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.853506833 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.853684246 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.854409107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910725803 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.854301981 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904081777 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.852187083 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.014795621 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.879648222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855756456 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.8584108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.858949156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855386607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.85652319 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.861823443 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.851654034 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.857520334 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.862934407 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852798374 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.266714913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968931614 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964040834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.853822801 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867725443 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.864623122 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.853460956 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.910098208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.85553229 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.852875801 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909128049 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.972196212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.913290188 seconds)
  done (took 204.689696085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.86302532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.865686456 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.857607504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.873077793 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.856938351 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.85759346 seconds)
  done (took 12.959864777 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.858873229 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.857612102 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.856421129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.856430253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.857137919 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.858555825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.858632075 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858324222 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.860182146 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.856979238 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.857860874 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.858266745 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.859344227 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.85688258 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.858063668 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.856620222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.858930811 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.854396455 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.857741226 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858956379 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.011583564 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.857657313 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859079241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.859051633 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.862447813 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85797463 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866792447 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.857392918 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.857695596 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.866413296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.861276613 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859331448 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.861161366 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.864246809 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.861586107 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.860859578 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861572368 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.85973778 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856411965 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.860170245 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.860673742 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859275617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.858791836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.861834725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.861437538 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.864563316 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.864567029 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868123828 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.859867621 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.861142939 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.861389483 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.860327371 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.861318116 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.861401441 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.863876434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864818659 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.86524452 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860730615 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859977047 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.861169762 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.859305919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.861071565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860680271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.863728208 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.858143402 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.861940701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.862038255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863529143 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860219232 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.859855802 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.860685734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.857061422 seconds)
  done (took 136.877172333 seconds)
done (took 554.540402101 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.132851648 seconds)
  done (took 8.922685649 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.941179422 seconds)
  done (took 8.834228933 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.271083817 seconds)
  done (took 10.061386086 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.8563088 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.91907719 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857975813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.858909428 seconds)
  done (took 29.291694166 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.865664076 seconds)
  done (took 8.657218984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.865251755 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.852098794 seconds)
  done (took 15.543846181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864698869 seconds)
  done (took 8.65413395 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.874949401 seconds)
  done (took 8.66456893 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86032462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878662664 seconds)
  done (took 15.536117486 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.828980122 seconds)
  done (took 8.609612245 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.575561407 seconds)
  done (took 11.363469378 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844604013 seconds)
  done (took 8.631939907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.862668861 seconds)
  done (took 8.637245559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.847382995 seconds)
  done (took 9.620090635 seconds)
done (took 162.819095487 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.83747516 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.836945559 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.834581925 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.834621349 seconds)
  done (took 29.114480174 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.870917872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.870730979 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.87192587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.881774755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.873812898 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.869989174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862239872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.861113655 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881498185 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.87355421 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.871672849 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.87157463 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.869321387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.861692919 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.871927773 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.871626066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.880963445 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.871321284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.862980012 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.872237565 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.838259536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.881920617 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.87357262 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.837582817 seconds)
  done (took 46.622417178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.036397397 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.910591479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.992328659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.891512031 seconds)
  done (took 9.600404448 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.888721251 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89104974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.902228433 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.948386917 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.968131246 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.900027458 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.864923194 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.859806513 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.844553598 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.890545386 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.96674187 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.906968208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.979190482 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.838778091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.032286811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.838144495 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.837523466 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.889315815 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.939930346 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.955502486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.83708114 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.889495785 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.890750044 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.905279718 seconds)
  done (took 47.43549359 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.835033051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.842297348 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.840826932 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.835451418 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.835347121 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.83567633 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.842384735 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.836785289 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.857327693 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.836522775 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.833930676 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.83440331 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.834023692 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.835120607 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.834886188 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.848015784 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.849436085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836395333 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.83819112 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.841633171 seconds)
  done (took 38.552152089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.829871824 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.685002523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.183040951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.087522563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.832684666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.834650961 seconds)
  done (took 31.220781315 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.849676086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898439347 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.843769421 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.892603354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.97472916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.847002895 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.838850953 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.903428117 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943196852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909366482 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.85258863 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.861841896 seconds)
  done (took 24.38436988 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.841989273 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.835670531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.835803906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.850308153 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.848768895 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.845399556 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.845698071 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.831976672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.851876936 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.855009841 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.845881887 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.849312287 seconds)
  done (took 43.909107559 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919056176 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.879568754 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.86769766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522325315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211644328 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043786754 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434997342 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162632661 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.837509049 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105918856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921525147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964524033 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115866049 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224636517 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888817162 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.34848401 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160368418 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070478295 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892713457 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575194627 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927802284 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.915787873 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.632262723 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91833902 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071223563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993186997 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.121458008 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86105797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999527394 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899463761 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871285259 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860264701 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136151103 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245017071 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966696582 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871438572 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476010646 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.582535869 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.849422384 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.692771995 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634582568 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.9955465 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871576983 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861840817 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7962026 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886647173 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240112744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.867807291 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.573356609 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861411584 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87370705 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956192964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.864668407 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.677363647 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773288191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.865653425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859775256 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870035206 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434250182 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024343258 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.928503982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.834314597 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.955715229 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612603804 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272118789 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.014206644 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.866620744 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866680824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797459356 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.644516925 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921431377 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192771475 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.883323216 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512914963 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192584181 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040102318 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806657187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132762796 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274229904 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832637715 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09295875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862720105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797944763 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.806353623 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793969928 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138088228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898954602 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.641164307 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90302739 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191283827 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867314219 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875479218 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880664458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080413141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.742112485 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85583099 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.740018651 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00817764 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887352281 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197577692 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794990394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.863846985 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118004523 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.073022498 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812230432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370975213 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017269808 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.287595346 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.903014968 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.891384188 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896600057 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.121138122 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910435067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010035064 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918583985 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865648895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15992161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3227813 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.998152456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.953204934 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987424659 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191971683 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886334887 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939219265 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866873115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853068338 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677506074 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417900596 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.863003897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.86556834 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.813909662 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904155402 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.861264335 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805324831 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.473871549 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958351457 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.871751241 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075442888 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.297978353 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158590652 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784700897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198769009 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93657288 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.070677827 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503972893 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936897004 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107335528 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812708469 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.827685144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887421447 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864047641 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939034713 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864427106 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.869608419 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130159174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.844352958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.84434421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.666891498 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895655011 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863566772 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.858242276 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60463771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124491969 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879236002 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858928888 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.742424314 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.866570058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917915706 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859458146 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863527504 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390685419 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567763136 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.859243892 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.431902118 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079119022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864426466 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.6406375 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971766474 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.939311907 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140991441 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92063963 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.792040471 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.568982621 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.552393828 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855217111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790123338 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854815817 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862815023 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864604968 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.051625734 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125121525 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901871557 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.596198629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901860985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867584239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.861733689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857062915 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363643779 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.037708424 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926157655 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901137179 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003439098 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.872875025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792452789 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.862756629 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863668856 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859921725 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.858707569 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890003104 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.589954482 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234767347 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11937443 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466947748 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869026448 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.638746155 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913982674 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.85581282 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606088213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060802442 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.974108068 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881666505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.880950392 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.686203953 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.577120504 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44014935 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176732057 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186360529 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305113994 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.967450454 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897319623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215784797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804394733 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427682711 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928574407 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214803666 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816381191 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955414534 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.524877666 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224673804 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888233547 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098457687 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253705605 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.673571654 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026671931 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0828651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90743119 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.903305938 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829288903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.395831575 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013591807 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.632316664 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0890639 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202774378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631660513 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009671074 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871396291 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.553245143 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958792397 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.580105639 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038568015 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.936439385 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.916390738 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343132278 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873465736 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088363687 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207710613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910906362 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.980963299 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798134794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87367708 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873237752 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862900554 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.85848006 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.741722755 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.115389334 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872766754 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797360555 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.857489701 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14721272 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.767160588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.868519586 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86360944 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174460118 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280726962 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028000096 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.842698272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.370882342 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872460595 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793706292 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795855375 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.55110445 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864244302 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832903935 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078654119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.961123388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768388488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818064098 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100725065 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114758623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.869705718 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138286556 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134456168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.555110729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881383187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.960324578 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59389186 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977969378 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856650153 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095153167 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611234621 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082317924 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.891772353 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817500885 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859995773 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069945513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853125497 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873943874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094497498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.578707914 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.854818732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312530526 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948624215 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.851892196 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932692645 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.967062046 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884692146 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953759992 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885571554 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.886136714 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885851098 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92322971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868325987 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.01066541 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88912775 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968875734 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050198343 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392921827 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.882350246 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160111865 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2483856 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199686557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936595899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878199701 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8802324 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805184527 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019911815 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.099300092 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143966687 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001350098 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.986744426 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893125814 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622929701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.968470839 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107995704 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144585572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763409136 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2485391 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904864316 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.869235443 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879903668 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.080199445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093658502 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188860191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008713137 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829745618 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227679033 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143991594 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869151425 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872978034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460956284 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.868099291 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681031691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.921097259 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897185198 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162651061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887964354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267091645 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900566937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.033670193 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.651283828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719331501 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16722454 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.870806309 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94415214 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151377573 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271004715 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192355102 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946054116 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890037189 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.991236515 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026430531 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.754929394 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879582512 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880801678 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928908406 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.590323896 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888877787 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154421148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190139107 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.877404833 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.755594883 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903764317 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.889824963 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103451891 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148316681 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134266979 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891114107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885734117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695946223 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15250493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938749018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81440972 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.885778319 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982297575 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129145106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900677587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.334270144 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.592524867 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152240318 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.88537082 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903902189 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.916969419 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239007994 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204240539 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413564103 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09368066 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469345041 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330380264 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177941046 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.88464004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.917427012 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181710144 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.885697098 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.8448201 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915322177 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150244846 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197689995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.893401713 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75476353 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.853952736 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222697623 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439383929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818790666 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891579453 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942274818 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881965634 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010860976 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893171747 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.761023624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916808448 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.660074243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155374382 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.887302775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.874745963 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.676812256 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058401018 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912147611 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02543613 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883096083 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.557229657 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.233290106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138916947 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.847179942 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.886666006 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.886977396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883859356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868872243 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078522201 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.081411486 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176844294 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.874332063 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.915986981 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887600113 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.098519029 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09519324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.859989142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033316887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843249718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919275023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.789429523 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386370513 seconds)
  done (took 1671.105908593 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90663247 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.906888972 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.885859056 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.899054383 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897683878 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946329261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.905095242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.887715666 seconds)
  done (took 57.055890087 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.880161155 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.101867646 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.89005227 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.882734766 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.889450448 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.88258665 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.046462482 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891307057 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.89145853 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.892184353 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883811754 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.880224491 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.18387492 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903082405 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.882231654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.868768186 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.890253331 seconds)
  done (took 74.559509914 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.880220825 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.069752905 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.915603865 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.904514002 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.87638792 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.885415745 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.658967043 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.888423997 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883777379 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.985983732 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.518092352 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.899463757 seconds)
  done (took 87.183701892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.890527137 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889104518 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.890298008 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889142246 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.890746142 seconds)
  done (took 11.268795961 seconds)
done (took 2173.810077818 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.135084073 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101338931 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.107184847 seconds)
  done (took 6.025271463 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.036801122 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.082872087 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202128669 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.209178517 seconds)
  done (took 10.353792145 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.172458258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.273325108 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.105636398 seconds)
  done (took 8.373667179 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.279339274 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.89822726 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.996271645 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.889197055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.88974665 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.890921427 seconds)
  done (took 22.493508057 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889733338 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.893906353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.88925158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893572681 seconds)
  done (took 9.38598971 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.875443293 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.700361473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.874122734 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.885636267 seconds)
  done (took 21.158023309 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.63806492 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.640186005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.628937093 seconds)
  done (took 9.725585041 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.5775342 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.812416326 seconds)
  done (took 9.202215701 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.147807447 seconds)
  done (took 3.959408244 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.011287504 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.144317502 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.344478363 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.388271946 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.470280373 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.719056436 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.175367743 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.112835577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281192869 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308539256 seconds)
  done (took 24.768520038 seconds)
done (took 140.572442962 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.247942516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.107790177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.068880404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.20418625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.093477576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.068622758 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.084868486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.18699166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710880745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.710993383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.206550526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.092284075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.247495815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.106340573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.246200675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.104547068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.093594972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.260498646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900782194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.136753903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.085242837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.841799296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.048907464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852690998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.090921473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012203899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.433656157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.101035831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.049020857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.436814442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.009571234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.280300356 seconds)
  done (took 172.932769548 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.765626165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863705958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863436215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.863189442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.185487986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864559802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862453181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863283834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.012792954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.998330989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.86282707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.180037055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.866350886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.864929007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864827574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862990992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.132686092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.785504748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.860373319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.855931603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.855474533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.08476628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.854567646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.115335494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.128734886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863822335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.856869939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873720043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.860750394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88025471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.883580032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.854563441 seconds)
  done (took 207.189840386 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.855462914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853520869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862831646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.85403317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.863381593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893162524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854054099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.850186734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.612961604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.581565547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.851704712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.870440659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.865171338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.854353115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.865560355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.853987655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.871637812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872140493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.868883312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.867678847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877864185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.576331652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.8629744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.559334924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.858937487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.861290262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.856300586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863994511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.866794355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.866384537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868741575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857173057 seconds)
  done (took 220.318346694 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.050290897 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.861100138 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.861675115 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.796424349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.862512713 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.862431089 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.860128481 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.051692711 seconds)
  done (took 19.010467395 seconds)
done (took 621.269272108 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.265477044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.105724167 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.030848216 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.883397343 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108887407 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.914396481 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.884567092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.944064759 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.597881922 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.944667188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.564847119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.895424582 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.657685991 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.896969129 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.004662584 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.939354898 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.4136107 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.510925552 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.051791205 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.927467846 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.045353253 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.835546351 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.94833571 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.644060842 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676350738 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.872459003 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.048154583 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42454043 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.887032345 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.040763854 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.584163695 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.240297038 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.890457334 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.879380938 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.930397641 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.91612691 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.215666984 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.889046745 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005599727 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648191543 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.931270963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.489853003 seconds)
  done (took 102.376375263 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.856183445 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.852035997 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.854178024 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.851261649 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.856026959 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.853283765 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.853727931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.853862083 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.851990654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.850673937 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.852007471 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.854472299 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.853223271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.85472044 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.854065136 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.853311389 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852281419 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.855465192 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.850885321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.852042495 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852186571 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.852338086 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.854565483 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.854694949 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.854663492 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.854878994 seconds)
  done (took 49.989089998 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.865896623 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.002836473 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.084953684 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.882805216 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.864734928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.870545517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.886493849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.869355766 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.868468738 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870465977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.96421249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.870056138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882478547 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.085141858 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.8762615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.862981278 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.865910096 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.866337244 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.008200655 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88136504 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.883569904 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.867674416 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885296772 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87850179 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.870061697 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.866426922 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871201265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.300262098 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.872886083 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.961008193 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.90771261 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.885712102 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.2592219 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.094934097 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.91578081 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.870855688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.866040497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.967702656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.869668805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.865123296 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.884127288 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.870849008 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.087264773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.358110582 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.877259364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.865936366 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.30907381 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96851326 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.906277626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880353194 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.091646639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.87991776 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.866576862 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.867956908 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.90233469 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.878110296 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.868373004 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.172155385 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.878548543 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.884393446 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.870800478 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.86688804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015121915 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.874600261 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.006811642 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.875258209 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.878306245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871836316 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.088005084 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.881484681 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.362842203 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.878436995 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.867832461 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.962279614 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.012221734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33628663 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.880995074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02345036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.268877295 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.891309751 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.875607116 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.298326281 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.894062927 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.876504658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.869021677 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.868246189 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.868383796 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.910133525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.88485803 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304142558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.36664414 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.18653962 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.892532697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.885707265 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.869063804 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.180403043 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.876969215 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.870479133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.08486172 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.376785198 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.878119586 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.877448067 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.353426592 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.880757764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.887200617 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.879409042 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.093074702 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878752258 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.91068807 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.8715733 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.886965179 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.873431216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.889297935 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.877416733 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.868591565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.338839456 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.979835446 seconds)
  done (took 231.262829961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.864829205 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.86463613 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.865810313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.876284295 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.862015707 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.871626228 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.866429351 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.863792555 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.870716731 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.86375349 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.865021566 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.865543449 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.864458722 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.866707196 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.404782716 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.876783601 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.480457839 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.871435094 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.86904209 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.884719407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.548483556 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.879753165 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.870663108 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.871563359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.873548255 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.872477957 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.87943833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.918438921 seconds)
  done (took 168.033771511 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.876989755 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.058732215 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.894013517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.915344876 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.88684508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.874245955 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.901627238 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.897131655 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.887361073 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.875505044 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.873137336 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.939392175 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893449847 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.010204481 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.91023434 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.912575859 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.984514422 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.8835079 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.876681688 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.874801197 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.907056568 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.871926387 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.940920713 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.00907651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.896336539 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.994119705 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.885101359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.877660563 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.875885781 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.994927973 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.892684732 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.939739605 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.908571452 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.897077361 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002679287 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.996642611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985921147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.90609277 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.882280929 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.876237539 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.8748089 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86795034 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992488159 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.895142027 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.878233277 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.985389927 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.896471631 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.879372081 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.885590567 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.876321378 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.89467065 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.899921875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951820479 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.011776256 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.911189149 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.902590193 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.903296988 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.161526763 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.887173989 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.980653476 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.872051781 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996004698 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.898447472 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.86605774 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.877490189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.883762781 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908191852 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.911382993 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983456639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.889928388 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.983218584 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.91503902 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.88488577 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.878901035 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.880384072 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.999183812 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003389049 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.915276993 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916614978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.912380474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.876435906 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.879523223 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.867658981 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.898370226 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.883989898 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996269554 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.001465896 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.887698828 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.882858947 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.880844157 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881862876 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.907386648 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.004819066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.918093314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98159755 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.949165442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.95763335 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.896016073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.891330953 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.885583371 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.943662132 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.895774461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.892239662 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.210111266 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95389079 seconds)
  done (took 203.713909496 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.973412282 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.348057164 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.936776182 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.939553238 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.170792588 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.306044848 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.666814471 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934998934 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934568388 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.960473243 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.095615179 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.988134209 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.940937808 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.917102402 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.343790363 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.9224371 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.931148116 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.95732774 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.937987355 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.510443042 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233932425 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.051642827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.924905762 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.027381346 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.912279312 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219486357 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.248657191 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.315133389 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.965775911 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.271615365 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.270444687 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.614358368 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.135468697 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.177377566 seconds)
  done (took 74.89900651 seconds)
done (took 832.066427402 seconds)
SAVING RESULT...
DONE!
