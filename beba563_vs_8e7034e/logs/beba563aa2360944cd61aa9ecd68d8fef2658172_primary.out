cset: moving following pidspec: 8703
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.594123991 seconds)
loading group "string"... done (took 0.586577889 seconds)
loading group "linalg"... done (took 11.451692345 seconds)
loading group "parallel"... done (took 0.196374006 seconds)
loading group "find"... done (took 6.074576202 seconds)
loading group "tuple"... done (took 2.401974576 seconds)
loading group "dates"... done (took 1.54151391 seconds)
loading group "micro"... done (took 0.218798717 seconds)
loading group "io"... done (took 0.613867465 seconds)
loading group "scalar"... done (took 65.91388164 seconds)
loading group "sparse"... done (took 15.232142813 seconds)
loading group "broadcast"... done (took 1.444615997 seconds)
loading group "union"... done (took 11.921110224 seconds)
loading group "simd"... done (took 4.044865815 seconds)
loading group "random"... done (took 15.243064338 seconds)
loading group "problem"... done (took 2.584769081 seconds)
loading group "array"... done (took 27.384018184 seconds)
loading group "misc"... done (took 1.361383044 seconds)
loading group "sort"... done (took 3.975151267 seconds)
loading group "collection"... done (took 25.087689116 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.84138799 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.169942643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.245093983 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.372128849 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.281026331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.185238158 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.188843091 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.374503877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.584434241 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.240264085 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.18200686 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531304448 seconds)
done (took 6.938409696 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.291907378 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.387845465 seconds)
    (2/2) benchmarking "String"...
    done (took 0.189859225 seconds)
  done (took 1.254498532 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094575629 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.220016127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.118658723 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13408604 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.135251504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.133512943 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.120275699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.133385935 seconds)
  done (took 1.674720011 seconds)
done (took 3.997771533 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.587270339 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.906012045 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531855003 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189665313 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.380624512 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.44649147 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330772898 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.248412289 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122952332 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.126092899 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.200714241 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.462534883 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.505783288 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.091517936 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108403855 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126276476 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158082387 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.822336784 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.097124211 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131702041 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.612838479 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222122589 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.130942368 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.128606471 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.202760715 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.154632176 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.195142161 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.121909816 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677073965 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.153513502 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210866408 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100333399 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.189681075 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.226804326 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.25202151 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.125661888 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.701318769 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.21763553 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116630286 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.122869296 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.699838242 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.236852212 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.232803893 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.127405083 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.122881077 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.198785619 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120019674 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.110574446 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.127495739 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.109285849 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.178536767 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474668766 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110045929 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.223191315 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110830079 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.708572569 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113950587 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.297533524 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.15391349 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.127016178 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094418986 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.123856913 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171925372 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116046624 seconds)
  done (took 22.262189005 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.202335953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.205798442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096122474 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.177378367 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.169246614 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100788913 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.118406284 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097175255 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.15129887 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227259581 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.170998148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.209050942 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.109062439 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107875375 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.175146871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.277000296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.133823095 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.144940245 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.124586638 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11190197 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.159653007 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.121259425 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.127840811 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.129482939 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.195598633 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219657543 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.12484361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.140805387 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.120975289 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119123134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.161002925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.180016965 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094045958 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.121638939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.220603271 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.138446133 seconds)
  done (took 6.187018782 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.274083833 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.140209433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.287293798 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.255801457 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.186668765 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.234606991 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.204522119 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314928783 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.641085713 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.223048587 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.203862026 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102891519 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147145182 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.131945317 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097731669 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.113870278 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096678431 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.944160839 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.198164125 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209480535 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.202267547 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138658792 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.11312783 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3744205 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117427275 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.123383121 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123483557 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089424803 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.252353182 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138866644 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.398815813 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102012736 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146101101 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150963923 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.226783425 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.149479385 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.166257543 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139215538 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.110031214 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.285563737 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.147848303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094841712 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.15782793 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149329815 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133774431 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.13463121 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157534443 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.27384478 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.108376519 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162128774 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.887167898 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.219979714 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.168536471 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108056911 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.375948071 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.150661663 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.131836908 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.135237698 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 3.337504237 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143806575 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.116586844 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097478379 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138673677 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.114110172 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.465979069 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158945982 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.174291265 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.101052253 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203501205 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13844775 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145952202 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121593668 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104484537 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149285079 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.109594851 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.112622795 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126011438 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096199445 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.128182361 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131865301 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118625214 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097210306 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179181787 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.133090807 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.131532751 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144106356 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.127075183 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.108560187 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14644099 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112714014 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.109999561 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.194698101 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143720329 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.148931688 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138584753 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157238347 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109331065 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119968553 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.872459514 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.101185653 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.121915112 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.149174976 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.118746338 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143244369 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.142013382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098632421 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11944313 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.112530695 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099571321 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.178866791 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.107938015 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.11567585 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.111856564 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.132235239 seconds)
  done (took 34.660204106 seconds)
done (took 63.784856869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.553770425 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115939173 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09702881 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115177102 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116291054 seconds)
  done (took 1.76060988 seconds)
done (took 2.489501597 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.399331675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.215158292 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.144801839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.216866659 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106955855 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.217537805 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.203305425 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.136744144 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.239453099 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.118767678 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.208825236 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101795051 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.123474981 seconds)
  done (took 3.196937824 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12160127 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.147013857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122007026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.137030163 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100645778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.136415327 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118676753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147134471 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119648393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.12831607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100184515 seconds)
  done (took 2.110807289 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120988349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141252872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114122373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.134050817 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100557378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133656805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116450626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144940728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118284613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.127907951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100612452 seconds)
  done (took 2.085139492 seconds)
done (took 8.116184979 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.435987214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.101125598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.17303194 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.26130352 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.41838531 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302409329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.809186999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201330425 seconds)
  done (took 20.614429763 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.211319796 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108416341 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.128093817 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111129176 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.129180954 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107060172 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.126590826 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107924576 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.123420723 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11075665 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.123481412 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110623892 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.127033983 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111316786 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.124155417 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110758153 seconds)
  done (took 2.772095441 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.166920277 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.162664586 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.133985298 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.119385991 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.132021431 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116355351 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.137516519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.133473442 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112761733 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.128238975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.122524721 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.134295722 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.117164641 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.248683913 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117307738 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.152993694 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.127876149 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117981467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.150950713 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117189434 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.134419843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.118029766 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.132851242 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.133111881 seconds)
  done (took 4.099833736 seconds)
done (took 28.217543463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196597178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104743821 seconds)
  done (took 1.039837687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171015475 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184226385 seconds)
  done (took 1.098285979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.135523472 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.120767307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162403771 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123357963 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.124165111 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107331605 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.155416611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.123303841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107665961 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.123683041 seconds)
  done (took 2.029494211 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.113883825 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.127317033 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125772058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.17901397 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.134888291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109966088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.128628478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110347054 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.128818879 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.106846979 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.128413471 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.146819472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.112861519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.147826881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.12961929 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112772645 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.135795977 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.112340929 seconds)
  done (took 3.037057277 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.10802163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.108453988 seconds)
  done (took 0.961070085 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.113430716 seconds)
    (2/7) benchmarking "second"...
    done (took 0.120635933 seconds)
    (3/7) benchmarking "month"...
    done (took 0.109459496 seconds)
    (4/7) benchmarking "year"...
    done (took 0.126635755 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.107200107 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.122021507 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10628506 seconds)
  done (took 1.548934272 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.721432665 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.352032156 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.527354377 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.133444925 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.167854958 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.519251195 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.171890829 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.143906068 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.14210767 seconds)
  done (took 3.663712861 seconds)
done (took 14.118057638 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.109218855 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.276525025 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.724591926 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130807342 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.122396199 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159221303 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.38817397 seconds)
done (took 2.660361527 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371093417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.175240365 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072852768 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.120864403 seconds)
  done (took 1.484564805 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.098992919 seconds)
    (2/2) benchmarking "read"...
    done (took 0.131675405 seconds)
  done (took 0.979162832 seconds)
done (took 3.222355522 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106235632 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.15458994 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102344221 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120199711 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.103467258 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.120762274 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10266806 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.119709081 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102736717 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102765903 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.117858394 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.103470065 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.118488387 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104082349 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118688422 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103032078 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118890291 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104478775 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118711694 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103376655 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117715112 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102677421 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.117502716 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.102863443 seconds)
  done (took 3.477823762 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.124674843 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.121651252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109286365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.126525235 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.110139882 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.125048749 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.124797235 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.106014098 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.124586983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106703063 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124725806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109602126 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.122231885 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.110144017 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120479864 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109798564 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.124037055 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122190472 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105874075 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.12664447 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.109166237 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122933115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.109480336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125010383 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109423482 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125419392 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.106942949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.121728411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125876777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.109976855 seconds)
  done (took 4.27664086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.114539194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.117625387 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.10519939 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.129273814 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.102192697 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104365105 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.120549564 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.102377625 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.121705493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.104667162 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.121693789 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.103911991 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.117800591 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10511524 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.120549847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.109053834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.131877093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102670065 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.119828258 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.105366963 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.123862775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102305838 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.120836131 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.103410894 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.122276916 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.101445709 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.120809975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10388708 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.120628477 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.10424642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.124698612 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108228197 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.119687124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11666246 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.124163225 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.104808014 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.128593899 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102732917 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.122059316 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.102100077 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101987819 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.120207333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.103739036 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.128159259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104448248 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.121285131 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.102761001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.122185302 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104803278 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.123741184 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102723219 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.119173989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.108433509 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.121292277 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107716818 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.118434878 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.104970334 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.119522926 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104535725 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.121038212 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102091403 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.120408646 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110117906 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.122382519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124179871 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.128392446 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.102472177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.12346428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106303872 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.132303189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.106859795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.133530895 seconds)
  done (took 8.969336176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123194512 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131314211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10639933 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.123071583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105620392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122281347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110773581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122177485 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108873939 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129147482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10472998 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122820331 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108144376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123516125 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106011285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.122477677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113144121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121178858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.106025514 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123718499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105608679 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129512829 seconds)
  done (took 3.335910661 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.306864118 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112676625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.182732146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.138659384 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.130318495 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.13552804 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126593733 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111969905 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126741878 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118105449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134516962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127466357 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.128618578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133745436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117188586 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.134380291 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127858523 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118591724 seconds)
  done (took 3.278768486 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.126358801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.126108685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129349002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.12385374 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.107974529 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.125161939 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1149041 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143943142 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.124557589 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.110125374 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.1326471 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108607861 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.124382336 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107528054 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123433441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109333233 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.123757568 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108920142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132582027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132247783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115599386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133065102 seconds)
  done (took 3.453796411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.125695248 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124449284 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129230778 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.127715048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106465232 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.123201185 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113084997 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.124141303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.132046163 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107570343 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.122820143 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105858918 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.139354254 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108718268 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.131398229 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106824916 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123816188 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107192074 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123257711 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107290155 seconds)
  done (took 3.159735522 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.218185584 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12584063 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.141407619 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151344268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124957982 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.140842678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134407865 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.141108203 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140245167 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140567438 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141558225 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.140402112 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135084852 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.148103746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142403149 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136628575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152955308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.152866015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127198999 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141399907 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157253573 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126552598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.152051925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.143936125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126869517 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143145759 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125803166 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.150051387 seconds)
  done (took 4.777215676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109552028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108350121 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.122110343 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105126046 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.123293985 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105148196 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.121836479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105679936 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122120197 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106442132 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.121092461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.105969681 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121738126 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.105158073 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123227032 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.106613419 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121807029 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105632752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106601996 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121043867 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.106295467 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122383996 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.105098179 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123091557 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107039635 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.122421899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106610346 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122926818 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107144633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122111025 seconds)
  done (took 4.188592734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.127779817 seconds)
    (2/2) benchmarking "in"...
    done (took 0.141134627 seconds)
  done (took 1.043524953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.1187806 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141410504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.106999515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.12367431 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115774925 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.12366877 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116825938 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131798408 seconds)
  done (took 1.751910963 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.171890304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186757129 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.129710598 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.138804474 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170663803 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.177004251 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172028954 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.131445919 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106347968 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.117726737 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181151817 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09923593 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.128675217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106908316 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.126747306 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118060748 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.124916681 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118634954 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.132393171 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.110214087 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129842389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.132329627 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11555727 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.137744304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103096752 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.129783514 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114639292 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.1397864 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106467986 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.127225833 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.1073814 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.123731808 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112193097 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.127765083 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.108697759 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.185800588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.136822062 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.123467851 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110400238 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129997009 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143493899 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.123846381 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112967906 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.124681251 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11235864 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.129192156 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113107356 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.124809195 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100956112 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.121934978 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108389099 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120979386 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108245464 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127710443 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.127517375 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117167912 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.127161757 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105623603 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.122620662 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104483886 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.126031863 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10457361 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1293574 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110561734 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.128223912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.1116022 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.125156357 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10964958 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.126285564 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109412824 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.124190723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144491973 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110645372 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.130842598 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112741972 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.125437568 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106892873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.131189853 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108629033 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.127537718 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112790692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.155374569 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.129161306 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105416394 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.122432881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116059098 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.128064656 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110557426 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.119782795 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121547654 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.127573971 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108915764 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.11934858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108083913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.12219471 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111408154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.119077581 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111579761 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.123661634 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.114446921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.13072461 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108852854 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.130565167 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113833286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.131619084 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.125486693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.162442545 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123799635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105077268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.128685951 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114707813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.120424802 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109568256 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.123424393 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107996139 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.12173603 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.130623789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110834306 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.127225504 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113539926 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130011076 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11280132 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.127269712 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.1076691 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.123804019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112591589 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134312222 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111532294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.12785525 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107876808 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.12634903 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110309077 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.128875706 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110251275 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.132118377 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124350868 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.108623385 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109808284 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.132137042 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.129055757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104630802 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.126883017 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112797677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.127053935 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11121586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.131333484 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10446562 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.118366403 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111426305 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.123015337 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.109535268 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.136078926 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106796367 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.127713819 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104988607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.135675147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.124369404 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113087788 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.128898067 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.1161483 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.141366897 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101376664 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124458673 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110939632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.130954971 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106547937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.126956936 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10820626 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.133457221 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102026917 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.131415869 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101077674 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.125200985 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115570851 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.13020879 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.111360753 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.122418269 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152334294 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.139288403 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115820968 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.127205352 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.127809451 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116290311 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.127603501 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112228079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.132264889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114572901 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.135410641 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10717777 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.132851211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105625186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.128475969 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109193238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129878742 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101908158 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.126993066 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10255426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.130349877 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114486028 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.132315895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11481931 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.128528637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110020353 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134923575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.123811455 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113184011 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.118571791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114389051 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.136689395 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116249901 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131762158 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112231474 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.126055006 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.109841054 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.136005085 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110638621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.127678843 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110692329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.122098333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103300278 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.132238427 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112073954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.124421947 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.108326238 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13080258 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114597326 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.125908969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102784265 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.132535359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132394109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105263397 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.129000901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105938855 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.126136951 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120453393 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.120683347 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106419905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.131287094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.114051514 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.125729269 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112913806 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.130182184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114836958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.130002974 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.111285588 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126023576 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119399837 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.126446516 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.108437053 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.124302446 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.11279479 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.12266973 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111690554 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.131045477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108474885 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.123629749 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134897377 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115798147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.13316512 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110141254 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.132305028 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117053308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.133650319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109618123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.134124932 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105895973 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.12095448 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106932021 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.1213078 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.110545481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.125518574 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114954186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.127861761 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110317827 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.131739457 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116408061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.126254569 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115538939 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14421727 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.12212478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102900964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126611514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111141889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.125817267 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108347852 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.129191959 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113174645 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.13101512 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11491439 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.124940909 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10976365 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.134036538 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107346155 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.134239721 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.134294194 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11594624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.124857968 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113936604 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.124802466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116435935 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.122057807 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109971892 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.127962137 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111120935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.126423811 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10997259 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.124521273 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102615115 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.126918469 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115958529 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.127513486 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114658189 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.128003559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.126942168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10768969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124870407 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116593305 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.127764479 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117111534 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.128545669 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103378765 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.121135878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116155497 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129834969 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.116250526 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.124535918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112843539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134045903 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113367004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.128875601 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119378304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140179209 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116272868 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136846926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103701561 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.127247887 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117055899 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.127498066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112300264 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.1304789 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104555145 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132970134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.116973587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.130417062 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.127862767 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105081772 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.130502174 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11681567 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.130594534 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114540375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112095513 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.130432872 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.124257263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113592932 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.135350038 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111673656 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.133867052 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110581258 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.13032771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107209857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.133118388 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11054264 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.121755047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103017526 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.125751679 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11650541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.122753025 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.112872887 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.131551471 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107717097 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.127330075 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113361028 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.124837603 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114569948 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.133274123 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109154696 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137943241 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111712697 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.12653066 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.113999426 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.132588937 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104166513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.129235611 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110778765 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.133882646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.128074664 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115275395 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.130158099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114766768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.130894246 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114246046 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.133837988 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114991056 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.122255635 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116430645 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.13510285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.111903396 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.127006979 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109808948 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.123979323 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110317141 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.137022381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108472033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.139999173 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116673373 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.12813358 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108171468 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.134355188 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110393805 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.13574778 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107386148 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.132276501 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.122614753 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113956515 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.129445079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117621728 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.124611992 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106437907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133431463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115315697 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.132188082 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114524522 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.13630908 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104665199 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.123261021 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113977409 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.128080098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121926837 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133292882 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110315014 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.128947072 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113055537 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.1303005 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117072744 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.122774757 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108719097 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.131505616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133363829 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10983259 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.124614103 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114184841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.128479007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114837697 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.129602257 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105521552 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.128704393 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117432901 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.128643804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106374156 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.126220151 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118342874 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.128632649 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1079304 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.12377955 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119311935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.13438406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13622683 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10892528 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.130784654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108393507 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.13168328 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118850556 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.128858488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112806224 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.128725881 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119829367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137948058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103510249 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.127488002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122532295 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.133690608 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114414701 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.131686036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.12948891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119394743 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.136676612 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.113454602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.1229351 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106178669 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.128372359 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105961638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.130272735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118874515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.129424701 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109791426 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133163662 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115461946 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.130758447 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.113577503 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.124993352 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118956063 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.127624888 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116535611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.123953079 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104884011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.13322919 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116119966 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.129436507 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113086665 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.131702814 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.114096553 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.126164564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110304362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.135969043 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115090744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.135163136 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112154713 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.129317146 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113020018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140979717 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.110961136 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.130022558 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140315066 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118133872 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.131075842 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111287684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.135288066 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117485224 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.132007048 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118259432 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.127729835 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112524621 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.136367024 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118644902 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142218192 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.12927198 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10616446 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.133734558 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110407513 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.123240676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118268345 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.138782461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119061921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.130478994 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108686782 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.14053518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119881275 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131733991 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110248602 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.128818869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116235399 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.127708511 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115557853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.127985134 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.118061203 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.136697319 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117213412 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.139679035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106570302 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138091991 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.134478678 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12100833 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.130513893 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106132203 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.125013909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11346848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.135708897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.116779692 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.132357472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116188671 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.133608117 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113345382 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.130608603 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110253548 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.137475488 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.116366299 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.131673273 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11502315 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.131005003 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114489183 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.131457197 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118472202 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.137121452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113734957 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.141558863 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120995112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.128914758 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109582132 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13422973 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.112983778 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.132032848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115809051 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.128004968 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107015142 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135187966 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119829568 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131110116 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137723816 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120340338 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.130056196 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115035079 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.139656469 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11707772 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.131831348 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114390669 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.133824773 seconds)
  done (took 73.550435499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196323616 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120905218 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132795754 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114487803 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.159086695 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116361357 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132136175 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115205242 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.134611901 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125973352 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.132359026 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115052436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.153080292 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165502069 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156203073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126651624 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132490548 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115303111 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132197135 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117149481 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.15095904 seconds)
  done (took 3.671149476 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.138574453 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.150881611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.147247311 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131717518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142665335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127777577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.146319939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.385860416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.151318523 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124591727 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.151507521 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.147265641 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124080649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.14475241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123584657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142772107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151086386 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122476198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.147193327 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.147580135 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126231456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.148289209 seconds)
  done (took 4.150979998 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.147264197 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.134385356 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111878672 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.131905268 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.117570229 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.113551531 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.136119214 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.113683857 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.142299314 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111088327 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.123805984 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107923743 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.129739752 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114675096 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.126183444 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.113788376 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.142402697 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.116713948 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.137031696 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.113849809 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122885219 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.114413816 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.132522776 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104998627 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.137543231 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.118072536 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.136117001 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.116340081 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.123439951 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116976966 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.131403188 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107268595 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.122923043 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104822185 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.124075621 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.116795724 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.135194376 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.112812588 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.132538035 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104288627 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.132375382 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.117875448 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123424736 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.114051952 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.131774335 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108866845 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.135019078 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.113420005 seconds)
  done (took 6.705719945 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.151014353 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.18627806 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.140533763 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.177151135 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13079255 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.148371771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.139161517 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156516179 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.137963121 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117219319 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.152667891 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.154964295 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119819722 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.140640916 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.137154042 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118734468 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.139908227 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.117824258 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.142714041 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118552581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.143667846 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.140306915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.129852461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.151557107 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.140439148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11904616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.136337408 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122013997 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.150049581 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.144150044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122906237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.142885007 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133463593 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.140409834 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.136512609 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119200393 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.153553491 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120719105 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139085538 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.117504209 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.138738818 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142274211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.121849092 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.154094274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120762529 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.140738962 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.137781646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.117579951 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.150776304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11994669 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.145759397 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.154144723 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120957307 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.138562835 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122612867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.150899844 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.139447933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118022232 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.139836318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130608715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.138332535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.13990237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133357919 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.139083525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125623505 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.152415541 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.1426631 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121138178 seconds)
  done (took 10.30106205 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157151509 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.144275409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.154481506 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135135167 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144017193 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12455139 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.142042618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.142677816 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12396808 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.15199312 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123803552 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.273362477 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120306264 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.150069881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12399641 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.143518289 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.14378743 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123912718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.144551457 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124062456 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.142590431 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.154998677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.125902378 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.155391761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.160531814 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120505043 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.143835817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125136485 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.152854628 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.144020019 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15782521 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123876473 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142490758 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134227685 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.157977816 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.145587054 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118586558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144122007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.12499077 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.143328561 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.139354545 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133931697 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.144580567 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120977201 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.144582441 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.144406512 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136237549 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.159012595 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.151232352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12966574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.142520379 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.15360953 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123985487 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.142629778 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.155283747 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143398681 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152733956 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155093423 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14248214 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134001278 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.153739036 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.162411678 seconds)
  done (took 9.720132142 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117795935 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115544001 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.131980701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115386534 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.133105234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114312464 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133349655 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115680073 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.132908765 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114602235 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133061095 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115180147 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134249876 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114426216 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.13302799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114383826 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132604448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115995536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115619022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.13294823 seconds)
  done (took 3.308883904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.129808273 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156463357 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117900397 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.145580399 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.118039167 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.144620653 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.117288552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136532603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118780944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136888266 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.149155713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12854435 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137766799 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124623599 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.147089394 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.145421026 seconds)
  done (took 2.999270263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.142877296 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.159270909 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.21648456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.120393526 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.137841957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.146228624 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11896367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.139420962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.116738598 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.143698058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.122852825 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.14185747 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.119130282 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.136858903 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118415999 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.139955371 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.117314928 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.141215495 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.118340207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.212033205 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.143184455 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.121004675 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.13815697 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.121056068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.140327531 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.142697051 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12600904 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.136833047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.120510814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.13657974 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119720158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.144552452 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11732279 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.142227617 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.118511595 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.138952374 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.118742903 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.137793546 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121557903 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.137335899 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.119662694 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.139830618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118402051 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.139893794 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.116525201 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.138040525 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.115404356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.143225919 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.13751784 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121155604 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.136969718 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126340238 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.143103696 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.127701693 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.145630922 seconds)
  done (took 8.250349219 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13166785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.139336337 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131543361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.135456774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118118616 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.140591031 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118979732 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.139799803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119610311 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.134644807 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120649348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.140054494 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120715796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138906217 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119775412 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140427109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11542855 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.138330821 seconds)
  done (took 3.190730944 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126676996 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137282369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.122419186 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.137948756 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.118860481 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137896231 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115714906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.134802917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116265649 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.138828247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117725241 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.136505369 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115472892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.136980236 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11860878 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.136517572 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117362786 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1351692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.118597079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.135951265 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118688138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11712792 seconds)
  done (took 3.642238243 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.137524483 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213603331 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.148728659 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.226195025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11290305 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.134058129 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125271031 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.132809918 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.158865795 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112735997 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.132364691 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.11258861 seconds)
  done (took 2.603283776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153284264 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181037148 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119400422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138078082 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150201858 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124248719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144668844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124779347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153499984 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160686391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124662614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152093899 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153999513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.155716584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129608074 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149518251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125228223 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143621818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119612219 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163365037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145310521 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153499656 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124068324 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14303544 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124519103 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153247994 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154823182 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159572369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125200941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154513028 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130117019 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144669542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154406249 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161563089 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119007716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154432797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12456775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162911154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151105656 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155858464 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120024327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150627799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134030849 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151317116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155246806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124820179 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150946476 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145861915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126567826 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174526292 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151306114 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136032474 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149743998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154623391 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15541363 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154747242 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160777326 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.155235984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149895446 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141291023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.154794889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151419235 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15585766 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14117071 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150397077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15511007 seconds)
  done (took 10.478681701 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170319274 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139873811 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126512597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161709673 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159497974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145277528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125853601 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144961062 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12607599 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141888365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199522546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125745477 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155967572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15605481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125535454 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144921868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144763482 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136213109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141290109 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17616878 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12539489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155425248 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156110424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155532319 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140933813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152274913 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145989063 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126078936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147191965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126892721 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.15301721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145821726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136306573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.141158067 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154827354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124959827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145454679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132176986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146755139 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151645591 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135294253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165508854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145681176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126680385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163072614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147784269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125867022 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140843831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126949101 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14135212 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163479804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142160302 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161381418 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157215082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145516254 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125556092 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146462407 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125861386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146607055 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13099711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157033107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146402719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177799566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126823409 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145980701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.157282745 seconds)
  done (took 10.452768507 seconds)
done (took 195.488134448 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177410094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.211236925 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.191067645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.195610164 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110043053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.165791755 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146318862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.190987373 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.13089261 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108906353 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12932306 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114083804 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.199191462 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109179026 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.129836165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11335008 seconds)
  done (took 3.283895899 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.226160053 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.36390874 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128551144 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.135941233 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115536017 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.135930052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113141907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.136446201 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.133660474 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125429171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.134210248 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109678329 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.144283269 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110956083 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.133620946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.114158927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.144550629 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.114603729 seconds)
  done (took 3.491544245 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.150276122 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.176761741 seconds)
  done (took 1.193696401 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.152783326 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.244829908 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.351223851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.194463101 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136008616 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.161669573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.198231312 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127528048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.223681676 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.154210988 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.155479983 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112994269 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.165287922 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.144719597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135207001 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132535866 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147644216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.151313668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.150091521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120026497 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.164285729 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117851331 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.144503044 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132005553 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.215266161 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.154733819 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.139355028 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117364598 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.139576218 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.130159965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.145668646 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.160137395 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.153907071 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.217596968 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119397619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.231650554 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122502987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.13722011 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.130917364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.136312238 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.141738164 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121822471 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.153455128 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113855452 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.138444983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12245492 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.138444309 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11802025 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.147008299 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.144121152 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127500942 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.144938821 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.210480863 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.144079427 seconds)
  done (took 9.20441968 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.050368637 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.186776512 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136797359 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.249240446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144906009 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153635123 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.057862896 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167847903 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310402784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.073332482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159871924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129345229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.323431781 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.358175784 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.599613079 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.471373274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.877406149 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.154158516 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152259216 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.189582491 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148502002 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166281488 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142635058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.576113582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.139247622 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115099148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.148482378 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148413153 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.212020881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.117807572 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.141197599 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.236968011 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.372733023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25797645 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138964104 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114989711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136326223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.223003672 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.36246608 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.293546347 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.22120452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112725109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.135900555 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.147162533 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14011245 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.133866871 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.216187598 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.229733153 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.248553725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121999255 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.150747796 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14999521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1260979 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.232361498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11436683 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.469284951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.470460944 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.137345518 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128746749 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152820402 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.354604036 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117934205 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.316848754 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.170062022 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.288235376 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.136419752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.060463774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.244136366 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115145142 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.144910105 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126875955 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.14512445 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145295624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.21584215 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.550272274 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13133617 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.142942198 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116025697 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.301008842 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.116469758 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136789185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.217022087 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139852705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128243587 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.153833114 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149360586 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.226359388 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33041201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.15099011 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.148748346 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123302303 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15388425 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120575139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.307491575 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.309795585 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.21140928 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.28275168 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148369792 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.217916391 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.225130738 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143689625 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.226761951 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.146650826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153599788 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127010772 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.305249352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.180720624 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.139508035 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123260111 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.149327878 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.189622745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124169653 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.149304806 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.226597294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.65360244 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.221721813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.135743919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122016088 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149700391 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.216683526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146162275 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333725166 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150348963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.222734661 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.146413431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113811439 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.149352285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.219785311 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.149973791 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150621281 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125831956 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.149421168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.33978616 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.297152306 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.151410579 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.304971898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.224708311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.145418184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231283807 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150289874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.226003184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.150352497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126198821 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139998712 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.060145965 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155726999 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126953341 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147454253 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.238873145 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116589159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.138612893 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116089441 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133517103 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.057585372 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.142158383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115140956 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.14020161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144335389 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127253388 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149220303 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12334656 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.236649973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.327001901 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129549871 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.145769955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.137518101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.214912922 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120463159 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.137217855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11689298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.138124857 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129729019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.145431666 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.141558425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.229013703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.21429899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.311397296 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.723770727 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.137908127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.117306035 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.325120591 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137907435 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.429144471 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129242639 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.317003285 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240780259 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.113113041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.469797429 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24281983 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.235658333 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12056429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.230609141 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.134994537 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128628506 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.236078958 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116750845 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.146778712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.212652517 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.155241692 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130871262 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.595912135 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.13845691 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.303166775 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.135256716 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.226712699 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141296937 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125230257 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.430832746 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.13897563 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136391213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.236154023 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122043061 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.138892619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.963049307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.139038504 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133016583 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.147087288 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.314263614 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.241652129 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128232237 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152225717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130884006 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.235866746 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.284998084 seconds)
  done (took 58.206386462 seconds)
done (took 76.242280867 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322792679 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229747934 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375047219 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203002083 seconds)
  done (took 2.113212643 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.301437645 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.181737622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.250592235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113400529 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259198333 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.133907073 seconds)
  done (took 2.134199937 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23602853 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193275571 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171978851 seconds)
  done (took 1.496120106 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244108872 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246131224 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.362538861 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306080868 seconds)
  done (took 2.156023965 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.301636685 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.156561593 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.141294789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.228734495 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251181081 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.263701381 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.164080718 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1989099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.146588223 seconds)
  done (took 2.800017129 seconds)
done (took 11.596267489 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.18294637 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.155097324 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.45614975 seconds)
    (4/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.329590179 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.214425013 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.330288889 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.372346622 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.185860385 seconds)
    (9/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.23052888 seconds)
    (10/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.152465341 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133669661 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.272430047 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.160870825 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.126937037 seconds)
    (15/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.337330379 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108544934 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.300010404 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191624159 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.393727622 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091177749 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.165553324 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.1897569 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.120555822 seconds)
    (24/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.233397661 seconds)
    (25/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.237999268 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.196571635 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.290815002 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.238205486 seconds)
    (29/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.286803445 seconds)
    (30/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.139065256 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.31652389 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160097363 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.086695759 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.169195534 seconds)
    (35/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.164929478 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.233997091 seconds)
    (37/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.225500643 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125789537 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.140624827 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116216777 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.123743912 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.234934174 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128435856 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.238728732 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.315676612 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214977726 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131716962 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.141499376 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.086686768 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.167303018 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.127227121 seconds)
    (52/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.214258853 seconds)
    (53/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.163590752 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137994495 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.104638068 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083980922 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19528004 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116598505 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.165706137 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.140134227 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134350682 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.260347351 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114705817 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198186388 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083699307 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139920611 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.292531586 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096864665 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.150348256 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092465678 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091172617 seconds)
    (72/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.164626414 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134809375 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.189688685 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118044238 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.157495073 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.284423209 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113395773 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.258833441 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09222113 seconds)
    (81/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.107148602 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119941886 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.237227219 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116678131 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.210652102 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.147463024 seconds)
    (87/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.167165499 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.189741654 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113951417 seconds)
    (90/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.193324594 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.129635574 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217011786 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092214707 seconds)
    (94/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.084557733 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.164132554 seconds)
    (96/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093109502 seconds)
    (97/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.185819297 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.129948606 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.114179286 seconds)
    (100/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.139436521 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.087563755 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.195458064 seconds)
    (103/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.17026656 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129521996 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093368611 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149217783 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.085198658 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100169949 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.11587882 seconds)
    (110/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093347029 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138650338 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.09506527 seconds)
    (113/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.132260592 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.142360475 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117780178 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.150580486 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117548205 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.114271302 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12982019 seconds)
    (120/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.136404419 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.088168826 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139009689 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.157730537 seconds)
    (124/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.192751634 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.138404997 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.159752172 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093789696 seconds)
    (128/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085795117 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.097432479 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.137230364 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.146511024 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.109425376 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.127746808 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167004247 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.161564901 seconds)
    (136/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.142616223 seconds)
    (137/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085871831 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1290304 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.110251132 seconds)
    (140/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.085177442 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.087785463 seconds)
    (142/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.155617124 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161997932 seconds)
    (144/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.14211061 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118260404 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.141742752 seconds)
    (147/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.09610535 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.086048532 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.136994815 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12854502 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.109963801 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.187759534 seconds)
    (153/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.150215965 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088465409 seconds)
    (155/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.086498695 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.116336439 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.129792762 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107348257 seconds)
    (159/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.140617782 seconds)
    (160/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086096546 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159525404 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118429829 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.107244135 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094645938 seconds)
    (165/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128177458 seconds)
    (166/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.110550826 seconds)
    (167/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098337353 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.087547409 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.152935717 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085842693 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141654878 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.093994145 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.128217157 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.140328587 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.085967418 seconds)
    (176/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.085859954 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.114710181 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114658412 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.160203469 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088746598 seconds)
    (181/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08615366 seconds)
    (182/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.150264724 seconds)
    (183/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.095132287 seconds)
    (184/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.137723832 seconds)
    (185/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089183941 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115512567 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140638362 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086698904 seconds)
    (189/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107229561 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086981472 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119618385 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.107049647 seconds)
  done (took 30.223547985 seconds)
done (took 31.126544205 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.263417242 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110577225 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.150265755 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127447212 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.226071405 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.157731612 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.143472208 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1525992 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.136767386 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.14967634 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116416158 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.160742747 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127415949 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.226195497 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.153552486 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.14109665 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118589643 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.160594139 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.139619106 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.163988607 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.228272565 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120265523 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.160389982 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118397454 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225678799 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.141217724 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126842477 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.153361062 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137822872 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.151562519 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127746817 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.138809761 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.161962535 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.140223581 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138687948 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126861377 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138433994 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093545407 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.127367906 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.15118871 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.161253267 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.128339837 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.151690057 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11891343 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.151374274 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126350548 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138689355 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132552263 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.138297075 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128633065 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.142345202 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141517027 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.148918082 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.115365764 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.138957249 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11931086 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.158625322 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11675712 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.161047943 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117107181 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.141412992 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117528842 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.152483143 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13905442 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.127072804 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.140428286 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13083637 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.152788232 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126518685 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.14331501 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11643288 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.148152152 seconds)
done (took 11.34063818 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.125778478 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189600072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.229292217 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237467176 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.175079332 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13779626 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.156342818 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143934261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.153091706 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.158651716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161004492 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.177473805 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.232328715 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.158670267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136588637 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.154286258 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128727514 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.150084155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.234995092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143561262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167570881 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.160582086 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147994504 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.158583538 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120815743 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.179397168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.151510278 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.129894351 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.144348996 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131241266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.166764124 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.143719466 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127186073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.164711297 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.141150869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.155067927 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137452404 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.152177361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122112191 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.145707594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.156023278 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13821081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.145204152 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137508842 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.152520456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140350538 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.152369791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.156757142 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123631963 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.151318832 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123848929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.175115064 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.137379423 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.163051446 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.159549832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.135656395 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.158473341 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.13504007 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.151608751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.134754571 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.145496798 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121509928 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.146588533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.169630793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127993047 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.159279547 seconds)
  done (took 11.064837765 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.152209221 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.181133933 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.156513128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134288714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.154007599 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115493073 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.138321984 seconds)
  done (took 1.971493613 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.123297922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.237950049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237402863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.237042282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.235140644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.250102314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.167998448 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.11793827 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.180159431 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.154067526 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.238696854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270258432 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.151324939 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.134792939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242080832 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.140998577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.244679459 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117137769 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.156920889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.23869853 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.15876288 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151209162 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.156874763 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117735695 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.228969361 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.143801285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.298795721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.163787425 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126931744 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.157308746 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134273716 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.229471496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.231346223 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.156991441 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.149275015 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.235778146 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.229827053 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133588848 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.249135851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.149550797 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.231379792 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.13475664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.160267485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.158333436 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.134584732 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.22012761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.162946958 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.134907397 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.156082893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.240416125 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130733869 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.23410096 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.154627391 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133591562 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.154550165 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.157652932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.142770977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.159602389 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.240149983 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137270785 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.237001338 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.236249874 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.231775309 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.238639784 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.170124705 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.237618751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.230229873 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.154934287 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128792443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.159956199 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.240150449 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.134281428 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.156305377 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.225716769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182592754 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.235994829 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.237165436 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132418749 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.156283263 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123573332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.155395895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118415355 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.232873206 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.15889306 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133808113 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164752261 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132738548 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.158818146 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.147588255 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145449651 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.158982723 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133748278 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.164285094 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.134516072 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.162027411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.243848098 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.156354611 seconds)
  done (took 18.358626593 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.125167196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.14179674 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12861244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.143514037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120862273 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.142814413 seconds)
  done (took 1.761095237 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.16860582 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.159346586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1453886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.159310754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.210872023 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.243392218 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.247014732 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.155397515 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154555764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.171306611 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.243715943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.266559236 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.243082163 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.163726594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.246621752 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138931657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.248111139 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.15805614 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144951203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.155152794 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.159511988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.139681512 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.154724953 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.236434671 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.136388162 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.162657891 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129193311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.169249002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.168240812 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131561347 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.16359398 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137867987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.151744186 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.154873601 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.249825302 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129098488 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.155296907 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139020534 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.163002561 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.136284712 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.269468779 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132099048 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.167420686 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.137982243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.157030463 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130160703 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.162106656 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.153081914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.252596586 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.137860912 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.163052808 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.136117286 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.161465173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.162378409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128120417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.155393045 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.139069791 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.246947003 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.163473893 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.152700751 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135869989 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.159563088 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131640283 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.162471904 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.159076411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.139507266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.151986642 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137838066 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.155808656 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136095359 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.163958736 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.136783079 seconds)
  done (took 13.031975819 seconds)
done (took 47.121631827 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.621137828 seconds)
  done (took 10.581328385 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.001805093 seconds)
  done (took 1.963003499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.795411685 seconds)
  done (took 18.790199842 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53159353 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.573073499 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.369388836 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.193259587 seconds)
  done (took 3.628469378 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88946675 seconds)
  done (took 1.8706271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.352212223 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285577396 seconds)
  done (took 1.605241959 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724116665 seconds)
  done (took 1.697452672 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.296573704 seconds)
  done (took 4.265217084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368950554 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.280416831 seconds)
  done (took 1.631299051 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.697714731 seconds)
  done (took 1.675541001 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 52.733335189 seconds)
  done (took 53.713924435 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.282657874 seconds)
  done (took 1.272791958 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.345211243 seconds)
  done (took 1.333176147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.625083399 seconds)
  done (took 4.604792065 seconds)
done (took 109.602598592 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.13702591 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.156923962 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.136105959 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.156395896 seconds)
  done (took 1.563355362 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.152579892 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.162451266 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144590091 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.159136371 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.14924234 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.163451427 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.135642835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.167284684 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.13684975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.16263872 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.162992836 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.137990855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.165434102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.134398135 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.159771172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.141713716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.165393305 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.138829944 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.162189811 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.163284826 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.137328384 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.162450708 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.142498556 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.163682312 seconds)
  done (took 4.656291105 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.133820315 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.147633824 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127616069 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.146971081 seconds)
  done (took 1.543075153 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.152950656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.179435946 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1529959 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.170597941 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.156022891 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.179246557 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.158479956 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.13133583 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.158163143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.14801465 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.188762741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.183453317 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.155474302 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.164126502 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.149922725 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.151633345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.140672836 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.179200293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.147290283 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.170830383 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.159818412 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.147193118 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.156697163 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151774353 seconds)
  done (took 4.819009514 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.245801024 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.173578612 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.196122403 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.223886918 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171798666 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.157121175 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.162069194 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.163637047 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.168142244 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147734478 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.165422572 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.231324331 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137866986 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.162362216 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.137114726 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.168192298 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.177393595 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13925201 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.212216499 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.166442942 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.137930904 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.173052105 seconds)
  done (took 4.812325758 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.139542076 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.14743361 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.119905013 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.150403494 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132962447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.150626725 seconds)
  done (took 1.829527429 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.128421196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118224742 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.141390559 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119364519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.146858246 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118620024 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.140436534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118335505 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.142930413 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118092502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.142354791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117525916 seconds)
  done (took 2.540320448 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.383767136 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.14783885 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.152932313 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.126395216 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.153275632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124072204 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.158485417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.14873196 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.311316151 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.120932409 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146803723 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.258131426 seconds)
  done (took 3.231169704 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266855005 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136159268 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346495163 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38826465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208291017 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211504042 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306043184 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191026609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.26121715 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155503936 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242458054 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201291478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201146197 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234881765 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183239488 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1767858 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215587088 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263796583 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185145798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273098151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205021365 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225368364 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245591981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195569913 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180717931 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193785552 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.1601813 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170196521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218949329 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190727141 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251363085 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170422756 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18715135 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250352224 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.336769295 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230149565 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29393916 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180657636 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203055859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.245081842 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299100733 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18642421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251519523 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194286041 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15272655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236324312 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202003952 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.241488239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.174572553 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187379489 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244548253 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225415119 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.237554333 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186740446 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325881664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154499284 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.186683775 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21342321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24635731 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261390445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228507344 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.163197859 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223340487 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244975766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266032404 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.187128634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.218290851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143551426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216344916 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267742338 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25882164 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205051512 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.314363369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158999053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225046986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218984013 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209110951 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255757135 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218571417 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.160921335 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177857857 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177923817 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169137265 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214359458 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163213757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284104695 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171906247 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.387985957 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233833539 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206909526 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211855657 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209851798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21314311 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193683272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112679166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187771309 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184961522 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204212573 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170750796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204256827 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155091748 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.168279561 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200337644 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.135699852 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21611374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.172087793 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214047558 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221168932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15196172 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229742227 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195979736 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.214320205 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222672428 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25325266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150326418 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176612291 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281484735 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214855601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.177707979 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22840785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263970815 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.198139339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153918989 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216761962 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248583531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187623769 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260968146 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19258446 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182588548 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155539289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221680322 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211494518 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.199664857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169655594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196486326 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270399273 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.143967155 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183227175 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236153965 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14458408 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166547295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179483649 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156659831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.192101882 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.193671435 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154380777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202748506 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214503674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211503773 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209251781 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164774221 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280568253 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149242673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.216431469 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197681294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.134612123 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.23574931 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285295536 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147330471 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232218517 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.217302911 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232995896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224556128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16917401 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236446784 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151224798 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.163354093 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210106091 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227975007 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188498827 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.278619934 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226738356 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.220187726 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.221631209 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170486203 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223074435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.239014754 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209712804 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.193173933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22982688 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223359778 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.137298611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.167394416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146871345 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17751419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175954646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154984977 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236370136 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217322865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229358633 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220159136 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179826963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250116902 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.168555608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186201836 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.232059723 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17958074 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.255912558 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248684276 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230515886 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189468212 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217566623 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.137198546 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167970725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.180616215 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191140949 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181012576 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184232607 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165503159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275101565 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227609617 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170405254 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272318803 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190962284 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.289187103 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.140771984 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.210192359 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220681712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216683253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205480469 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171359814 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.212355611 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251918737 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172598541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278088621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194972168 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238492606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286294981 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.18837158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176559731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203009241 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209108242 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157784906 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214694103 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194841913 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184362561 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173550669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.183668478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189866772 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246328279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189702851 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239386547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.204662927 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230248679 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139405175 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190771358 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224739365 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194423719 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113014161 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22596394 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25118906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198443451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207019214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225346255 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148670333 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.368402092 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244665267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234715171 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187598962 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160209229 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224869281 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209593454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215675521 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239315048 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192291706 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263199555 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219479064 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.190591368 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157915975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196839246 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201627837 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157439176 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.202560663 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.215016154 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.194722749 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249154171 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182070773 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191872818 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233985745 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.191734392 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.19429008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155880317 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321854363 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22041063 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226810388 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.184306094 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.217702946 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236122542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166429626 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14160348 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1715415 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238877197 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143179044 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227598662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215979723 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233743272 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222004828 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210256406 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186619844 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.14206906 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220773978 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197557147 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237600217 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191981127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.183556747 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248069964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140891972 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176212653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211204336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313585372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168490077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225347932 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.140921457 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288778183 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166855049 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178981688 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186340423 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223415701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.181143313 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.230432375 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228218529 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15993245 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21300535 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182027839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231150982 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236547383 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221531056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230153614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.166744458 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214756007 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213338144 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230935757 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193095875 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.19772861 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185447432 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255314707 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.239557158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.177987223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225021376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225606086 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225849984 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236967217 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157709227 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234782967 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172756057 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217426448 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159069696 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169091499 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213093861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214858974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148088682 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229024758 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21974721 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171446968 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144568135 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205685794 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218217649 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198668306 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.148149299 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245522076 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.169827194 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232666083 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260962415 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174524479 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211829354 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168487536 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177722195 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185856092 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16372241 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184340635 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.19003037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233447717 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.176346666 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229322844 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218270473 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215393113 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209050195 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164416196 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.620429622 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.171037899 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247552553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170481136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286175637 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169500615 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232050417 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224791814 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198851626 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216815162 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168957783 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.273842394 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216336202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.224158512 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177654631 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162302744 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184607254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.180803643 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.675814931 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221534916 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194076918 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.181444533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.22029309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162699814 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.193151621 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188445721 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260570949 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170407689 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274079234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240129172 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163404765 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232994645 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237927932 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171181544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.219353371 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224174663 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160880444 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210603757 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.178704799 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156071967 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28807406 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.140473853 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21093738 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225923148 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226396199 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199434152 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.184288765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228682431 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189476253 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225512468 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142823625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.206083218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222481798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17928947 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.144097964 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22163231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210418773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.215718034 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161651147 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.216532031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250559937 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.142696565 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180085166 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312803661 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212682441 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251781318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.152875721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181807929 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199917715 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208212048 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18798993 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220530155 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.174655183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145784149 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.196418159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192316115 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.181049308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191155702 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219316915 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211424935 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238838044 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.151009295 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.313351567 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186982492 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221292729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.130598819 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.174839154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182451504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155238337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199194235 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232893134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259798954 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.210879875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.195561262 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148025624 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.169354021 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170402233 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187365213 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200795239 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218255357 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199617965 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110454935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189559883 seconds)
  done (took 102.035205525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181592673 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.165210445 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.18654392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240492243 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215583572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310302179 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.247551195 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263408878 seconds)
  done (took 2.886455448 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.220123722 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.179202677 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.267731938 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.161091368 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.149418697 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.527393837 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.254669031 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.139218392 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.219658969 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.246900113 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.226186118 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.643578907 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.13387492 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.242039582 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.24176387 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.145197651 seconds)
  done (took 5.0656247 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.920707156 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.592311732 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.254277188 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.338940827 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.317742444 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.248926355 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.834623386 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.263732729 seconds)
  done (took 12.844527042 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.178044502 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.192555147 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.493470671 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312052111 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.224854358 seconds)
  done (took 2.484904076 seconds)
done (took 151.288573284 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.143045587 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.168949205 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.138865994 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.172857738 seconds)
  done (took 1.693494401 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197137608 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.125070419 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100322231 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095668804 seconds)
  done (took 1.594507773 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.508788047 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097422402 seconds)
  done (took 1.725141703 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.17496196 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.183160443 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.160573413 seconds)
  done (took 1.610866476 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.160303735 seconds)
  done (took 1.248572808 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.142569714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.157816134 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.262757466 seconds)
  done (took 1.650746459 seconds)
done (took 10.609337647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137944606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.989786107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421066815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.17169536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.758011436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412167813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.450593997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198780201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199368823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.151864816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.170375857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703966787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434096247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.898681888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.408324181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901578469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.736362105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125983195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.159482801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126263999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.419730562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123949666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.153318272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127197673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.73273896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.464092375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123617366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.944910827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122901128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.160694243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.152212328 seconds)
  done (took 21.562798217 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.136584418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220174208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13410568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15443789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129425491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.152239107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136304516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168162556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.230116427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.153359171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143948202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.151181478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131651926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.15249157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145740698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.15089039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128904617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.155495573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132839944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.155371887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143958954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.150524578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127894062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.154388098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124910272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.177935923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.151414848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140090529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.152638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129883678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.158071775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12666975 seconds)
  done (took 5.890260591 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.18020604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.234665213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.162621798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.159257584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.211223229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127284093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.252571674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.202552855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.232033367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126037593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.172287894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.153917451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170967113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.154730869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147359305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.153339165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12898688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.156063756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135042906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.154416399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.170987588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125543696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.153780785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128385348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.152227308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152072413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.152048407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141757922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.152950816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131943444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.158056086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125980612 seconds)
  done (took 6.254863166 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.144624174 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.175909702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.150129398 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.178690345 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135900191 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.171089475 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.147449937 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.163619374 seconds)
  done (took 2.360604961 seconds)
done (took 37.148651282 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.155467668 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.173970393 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1501988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.169411762 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259438237 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.132337562 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.1733919 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.133129762 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139982376 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.175020022 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126433281 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.160478217 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.147746264 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.162649994 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.24347442 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.142615909 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.248689028 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.242129304 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.160350125 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141586245 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.161794992 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.251778423 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138803058 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.161668302 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.239820194 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127653368 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.236835318 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.165629126 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13465325 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.156616465 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.243398856 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.139238757 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.162571071 seconds)
  done (took 6.841393316 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.274747517 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232571469 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.16100912 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.13366401 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.248143481 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.16289113 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.271969265 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.133578211 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.162313162 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.133515892 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.162435775 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.275767811 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.286674892 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.237746703 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.286519343 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.265429071 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.270308461 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.256020584 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.266363607 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.268485884 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.245357135 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.13376207 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.287815571 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.260136304 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.1617158 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132443845 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.285534896 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.283101826 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.282617884 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.244709869 seconds)
  done (took 7.904475104 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.145944781 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.178128153 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.153872415 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.22587854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.191569284 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144335352 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.174235833 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.156362925 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.18702394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128325969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1730403 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.167795985 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.173083722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13927768 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.161183907 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.151727938 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.185400159 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.158628595 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134825244 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.181774724 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.149297585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.178753327 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143877637 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.166458511 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.127545323 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.169302639 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135143781 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.170371413 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137763185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.167877516 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132946846 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.160108883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131601694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.188303994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.159389051 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.145277794 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.189758125 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140007287 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.170123827 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.157492274 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.165704701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.158510978 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.156644574 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.214184933 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.129670719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.173179501 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.141305355 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.169013743 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126262643 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.17938815 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.171884723 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.157532402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.185335886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126798853 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.156123121 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135782395 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.157227843 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131627778 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.168303673 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132238272 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.189649909 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.139539787 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164982823 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.131865703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.166629061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127213842 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.153961738 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.135298961 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.182909299 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134830981 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.190821503 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.129463392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.169488425 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.140454223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.164093964 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141045213 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.15543549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137180855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167245307 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135598119 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.16672228 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132075617 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.160431921 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.150684285 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.183664449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.176196502 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.144940798 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.170630639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.135383831 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.157000713 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145090249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.158070598 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.13348136 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.167325039 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130232961 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.159668989 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.143697223 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.16906318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127733654 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.179295389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133591203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.155838676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.149462521 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.16154809 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134145254 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.170010693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.197864032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128835709 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.169807965 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144706338 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.155180405 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137331039 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.160907024 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129448059 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.178676746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.14347598 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.163334799 seconds)
  done (took 19.449828766 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.380376313 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.377755025 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238147936 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.27408791 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.183578323 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.265965818 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.341546974 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.391740964 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129114007 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.206913987 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.216588582 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314821772 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.160203056 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.16852174 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.377241291 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.443889187 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.196892043 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176489944 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.203996593 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.182838453 seconds)
  done (took 6.346268525 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.15743012 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.207562999 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.192508143 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161172108 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.168461947 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.150097345 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.158024709 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.183803865 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.141134887 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.169065937 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.131417222 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.187303097 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.139364616 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.173185516 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149218139 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.184876235 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.13793683 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.165594649 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15501288 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.165293901 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.113589381 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.187060065 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.171159056 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163199001 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.17665228 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.143708455 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.157310813 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.164769605 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.136374361 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.138387353 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.164387332 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.17982536 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137950522 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.142647504 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.143139579 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.174170217 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.136209791 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.160027513 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135399553 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.161378861 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147383814 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.171774691 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.13726105 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106022435 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.176086552 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117419041 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.174883708 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.143667517 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.146912209 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.150870407 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.171655533 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.146330013 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.167110463 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.15427803 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.164975555 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148280409 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.170975804 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.176559092 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137230555 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.156050613 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127544963 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.160908242 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.136854476 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.173419772 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142210083 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.182249829 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149330654 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.155724396 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.136095117 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.162179489 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133804788 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.173450759 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.184100402 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.138651397 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.164251782 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.148233452 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.164373238 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101116804 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.140326189 seconds)
  done (took 13.432992141 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.165740418 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.166441868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.152358794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.200910962 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.147263141 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.166370247 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.139879744 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.180899401 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.148141031 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.178799585 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.14794605 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.17415022 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.187093724 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.140263743 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.167412695 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148169678 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.175055543 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.17691136 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.180616701 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.195256648 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.147429409 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.164220984 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.145067698 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.172254703 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.167642238 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.173557329 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166416026 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.17373534 seconds)
  done (took 5.784864343 seconds)
done (took 60.847795775 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.341932636 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.460308265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.241835671 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.239787515 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.27209701 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.256792304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.237748806 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.236666776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.627828344 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.201403687 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.242221596 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.250132973 seconds)
done (took 28.73342625 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.573546013 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.800833719 seconds)
    (2/2) benchmarking "String"...
    done (took 1.567874037 seconds)
  done (took 4.488633232 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.229247157 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.231182904 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.500194728 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.229350435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.228425307 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.228173038 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.24579642 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239679505 seconds)
  done (took 16.020366274 seconds)
done (took 26.429834544 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.310051808 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.414285447 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.454724451 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.24745076 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.231653723 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.251636709 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.234291718 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.255469219 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.237751314 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.23429986 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.635725001 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.484748015 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.25621548 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58535782 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.232593736 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.231661882 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.241963773 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.466204023 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.231332334 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.261562149 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200105524 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204115513 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.242815388 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22752001 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.239143486 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.230915641 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.267263938 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231649363 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.419938444 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.236133685 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.264925793 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.232352377 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271488228 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.232946003 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.235962687 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.241681083 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.429264302 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.240517183 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.208581467 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.259372492 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.43629025 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.319668118 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.235636959 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.238846699 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.236811411 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.302373459 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.208709621 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.358752857 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.252585354 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.243605106 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.270522847 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.611188361 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.239517821 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.254650928 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.230532533 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.459865403 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.24658482 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.289137932 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.258020198 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253641109 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.234795604 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.231578222 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.291665935 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.246670496 seconds)
  done (took 145.689529504 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.234647127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.238146229 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.237182539 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.254783256 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.237910376 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.235991357 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.233295926 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.234065284 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.236596307 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.259470661 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.23486728 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.233402681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.238804319 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.24315802 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.246717499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.255843842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.237079354 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.238943067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244865416 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.236748483 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.240640471 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.236558839 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.249728747 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.234359424 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.280844942 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.317063046 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.272006887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.26483633 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.248069755 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.235169881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.278773961 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.256998157 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.846170813 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.108239312 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.246700173 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.254240441 seconds)
  done (took 81.505170883 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.237046241 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.236681549 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238390861 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.270386704 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.238795234 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809764162 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81242492 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197481188 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.145909202 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.241329023 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.580986294 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.237813629 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536282463 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.237394099 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333065075 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.250733998 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235857646 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.253108595 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.280698009 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238015237 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239427175 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810094051 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.251116908 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.385857422 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.40992811 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.250523118 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272367773 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.626259395 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236462525 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272593322 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.571477861 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.284770897 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238488091 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639967217 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.952752296 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351172559 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.238247714 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270589349 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.240077688 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.520589274 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241218583 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.240498274 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.24163408 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927410853 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.240481717 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814433118 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240268921 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180686593 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.237189338 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239600309 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.869373384 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.923299866 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.254807227 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.239210243 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.242882093 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.238904704 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238426273 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.272851414 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.893777112 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.35044772 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.254170121 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.243604592 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272613258 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.240647563 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.476230269 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237613089 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.832439833 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.300365488 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.792838206 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816411268 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241254166 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338750198 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361718104 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.238506464 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.241697834 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242428047 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.239271898 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.350780204 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.238958325 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.510584344 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.414537132 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.254921332 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.598580818 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.33997206 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.240649137 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634525806 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.241350543 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.240236596 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.996104194 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339001644 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.23852818 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.241729326 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241879891 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.512970891 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816873932 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488294978 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.242625357 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.239907545 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.347577366 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.241173022 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241627859 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.870574807 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.800489938 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93967515 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.243187501 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357782946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.415274975 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.257542627 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.241792275 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.60088783 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.243737504 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.302134352 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241476941 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.64790249 seconds)
  done (took 383.722674698 seconds)
done (took 612.03671053 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.161977834 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.108472943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.23160603 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.133019062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.100776519 seconds)
  done (took 11.864651894 seconds)
done (took 12.991760146 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433704924 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430114033 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302843751 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43907802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.278684539 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448632418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417329384 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.271722636 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36488421 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.331139254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353314869 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322267758 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272970751 seconds)
  done (took 18.793297807 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5305071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.256304382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32808161 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517680483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288793178 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521643304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.557030413 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.257378087 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406062712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267460677 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266275883 seconds)
  done (took 18.328313362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520045483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.256398358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.332299437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50707665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293007689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524365601 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5546054 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.259075493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405839508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.267285757 seconds)
  done (took 18.322398951 seconds)
done (took 56.574894395 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.282362025 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.34239683 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.278763182 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.26498558 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.262849249 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.263943437 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.267338982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.263442663 seconds)
  done (took 11.356566469 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.263354537 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.261710209 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.262014486 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.261876478 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.261755587 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.261403832 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.263771437 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.263128273 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.265452281 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.265200593 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.262816816 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.262920684 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.26482683 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.264369628 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.264342895 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.263027962 seconds)
  done (took 21.344207496 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.267095714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.262101666 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.26620852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.264636914 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.261453321 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.264847108 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.266191719 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.266990643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.264714493 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.265979875 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.265629829 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.262802621 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.264118895 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.265851081 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.265246091 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.268190847 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.263961391 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.26558858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.270279538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.263982711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.264987436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.267533006 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.264764774 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.265735621 seconds)
  done (took 31.502880624 seconds)
done (took 65.334854252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.255909635 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.249269522 seconds)
  done (took 5.639021383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.323101676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322933655 seconds)
  done (took 3.781686032 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.265268563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.266931665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.268945549 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.266701527 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.264082378 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.268314901 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.268044463 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268568818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.264893263 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.267238134 seconds)
  done (took 13.803343402 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.267652208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.267942239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.267436697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269400076 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.267676954 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.268656957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.266163213 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.269349588 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.268120285 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.267540748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.267155357 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268977453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.268710156 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.267188856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.266781459 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.268604609 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269276079 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.268272055 seconds)
  done (took 23.961240624 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.283271027 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.286935447 seconds)
  done (took 3.708396692 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.397346549 seconds)
    (2/7) benchmarking "second"...
    done (took 1.310702963 seconds)
    (3/7) benchmarking "month"...
    done (took 1.3753013 seconds)
    (4/7) benchmarking "year"...
    done (took 1.36422461 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.310977822 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.287734564 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.311079166 seconds)
  done (took 10.494994254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.328470722 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.570193862 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.747295107 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.286068797 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.417724143 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.509715812 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.266607706 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.543569303 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.495206976 seconds)
  done (took 16.302898842 seconds)
done (took 78.824367778 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.253991926 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.304602819 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.308383424 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.269653486 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.609445364 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.269620924 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.255902679 seconds)
done (took 16.40933502 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.238520789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.232509475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.22657132 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.265852942 seconds)
  done (took 10.101681106 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253514646 seconds)
    (2/2) benchmarking "read"...
    done (took 1.596187023 seconds)
  done (took 4.984986958 seconds)
done (took 16.227086934 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273599414 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.270998427 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.272278013 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.27216472 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.271211319 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.271144065 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.271980847 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.272595966 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.272656156 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.272039984 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.271419212 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.272238685 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.273443107 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272244339 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272245504 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273103316 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273356602 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.271660452 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272190651 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.276004159 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270042815 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270292703 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.272074739 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.274054487 seconds)
  done (took 31.674747121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.274059402 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.273233847 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.274065962 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.274653828 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.274296507 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.273282088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.273007226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.273147277 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.273400286 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.273671459 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275778007 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.273439822 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270488601 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273762695 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27677093 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.273171757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.273095222 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273481451 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273826088 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.273773417 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.272868703 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273480938 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.273746847 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272555926 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27461195 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27325667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.274102178 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275214995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274256559 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274395058 seconds)
  done (took 39.355146134 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.274518172 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.27619386 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.274796536 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.274536942 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.276307364 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.274820063 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.274168 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.274196474 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.272953249 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.273723133 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.275824469 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.275767577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.275160497 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.275277404 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.273965222 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.274515663 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.273447458 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.276103031 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.274793172 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.276810014 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.276193075 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.275452006 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.276374147 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.278078058 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.275109939 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.275240803 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.274403691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.27725488 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.274206624 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275573846 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.27429647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279060306 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.276206243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.27382126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.276598014 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.277789325 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.277525519 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.276915459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.277556756 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.276631234 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.27859505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.276572586 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.277912165 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.278015889 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.276969204 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.276431951 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.280145488 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.278039602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.276706245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.277690356 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.27988666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.277339928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.277751964 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.278259896 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.278370064 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.27779596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.278859091 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.278110926 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.280749278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.27997692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.279541635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.279198686 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.279741579 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.282224041 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.278951696 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.280421095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.281104544 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280316363 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.279034309 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.276791213 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.278679346 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.27831858 seconds)
  done (took 93.086577281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.279987033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280299547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277201079 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.278017616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279866352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28164662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278845263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281459883 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278334781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280603295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27954592 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281442705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280765904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279465124 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278778082 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280601634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281108301 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279571268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.280546084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279811972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278610188 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278953051 seconds)
  done (took 29.302021772 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279550032 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284004154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.282298144 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283151154 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281455989 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283185776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280542659 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283773926 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282291617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283496507 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28317136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282059956 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284262835 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281446898 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283490454 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281419028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282689287 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284619901 seconds)
  done (took 24.234781305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281884082 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281126021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.28307272 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281494872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.282452748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291503293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282902466 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.282976533 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.280957092 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.284155979 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.284972095 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280322231 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.284992769 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283549762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282917781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282596563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.283125226 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282279066 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283563427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283473753 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282410642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283906206 seconds)
  done (took 29.378563747 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284464672 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281918628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282729204 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28419679 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281974857 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283632316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.282254417 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284130491 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.285328594 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.283995657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283443259 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283427138 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.287330509 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283786555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.28337909 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284668643 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284686831 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286451936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284163465 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284942513 seconds)
  done (took 26.832546903 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287523013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286370504 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287463906 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286987674 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28577345 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285612999 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286084485 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284977031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287634355 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286292805 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287143006 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287334172 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288013563 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288034769 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28765164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287752735 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286584294 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288511236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28900717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288384699 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290011435 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287280451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286372287 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287420468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287982083 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28783363 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28779883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289163947 seconds)
  done (took 37.199459084 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287971867 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283913254 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286155535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285906255 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.28735149 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.284744596 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.28745574 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.284762774 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28680076 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287667076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.289349838 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.287162594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29011629 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.287091718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287251622 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.288843161 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290727597 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.286806567 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288098829 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286934365 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.290512982 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290921875 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.28915752 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290299391 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288519411 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.288764462 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287749998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288964961 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288662029 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288644587 seconds)
  done (took 39.790778856 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.305954791 seconds)
    (2/2) benchmarking "in"...
    done (took 2.291383265 seconds)
  done (took 5.750779617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.289749937 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29159847 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.288916772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287393025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.28981446 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290111079 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28611399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289626815 seconds)
  done (took 11.466686135 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280618595 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.289171564 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.28951513 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.289539202 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.287953788 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.281698978 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289350168 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.309422721 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.283575423 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282327159 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.280356958 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.282498287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.28527387 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283262428 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.28431034 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285947699 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.292336315 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.289526451 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.291743586 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.290866254 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290563927 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284308864 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291503602 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.294331117 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.281608432 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.291924196 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.293627166 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.296279396 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282093637 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.288951972 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.28553134 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.291803148 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.289488459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.290994875 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.290681933 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.288162081 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292612814 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30764296 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.291661875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294462504 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290446283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.290354971 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.283123529 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.286449165 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288628129 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.297437534 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.291959174 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.290298912 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.282635453 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.287284784 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293098123 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281604969 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.292781705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289186726 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293331345 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29596476 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.318286308 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.282801812 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.283942526 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.293313858 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.302048359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291649717 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288182315 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.298292422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285234108 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.290096611 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298657551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.318596494 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.293110169 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.292618208 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.292610152 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301205458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.296824678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.295680183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292821127 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.29203092 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285293269 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297920487 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295167728 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.312880189 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.300246876 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293500791 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287596306 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288991005 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.28817049 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.29603028 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.292079165 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.292818484 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284545408 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294913306 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.320193532 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.294324121 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.287325008 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.288062386 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.289855225 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.294741115 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.285319724 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288778744 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.298735544 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.295610969 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295161612 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288447402 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.294527607 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298272708 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2932403 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.295278893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.300173702 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287150478 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.298268197 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.300266249 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29437892 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.286776336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.289625701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296985214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287574304 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.289599593 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.299186838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.29132568 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.29974856 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.29604641 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292513383 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.297950062 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.301035952 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.296176628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.287707009 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.299256436 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295921786 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.291722637 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.302411767 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.297062734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.297922624 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.292969107 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.30126787 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.288781916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302776676 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289304137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.300052128 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.296992239 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.297038158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.292516645 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.296135675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.293269695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.297654089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.297533434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.303836125 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.295320741 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.304389131 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.297844336 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.298070532 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.29912629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.302002043 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297199796 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.29573558 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.302841439 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29109103 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300837906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.291982109 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.300843831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297669774 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.300327555 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297759238 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.28960512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29353747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.302133808 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.298184672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.300344417 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.301387803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.301939862 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.300481884 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.292357811 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.301147025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.290814588 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.295815113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.304084585 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.298900299 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.301641201 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.300969893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30684544 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301757399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301322393 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.29180466 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.298431524 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.30584099 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.301205287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.308610427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300603528 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.30296911 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.296692705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.294534727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300762289 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.294130389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.306532975 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307074332 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31014648 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.297066127 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.303565893 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.292927025 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.303134333 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.300464053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.3083278 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.301798415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301781237 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295729466 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305191782 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.295416532 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.305600907 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.291553742 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.304507807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.304683157 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.300425177 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303250829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.295810469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299108342 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.306663661 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302486509 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302672329 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.295364671 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.306691013 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.29475887 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.296464996 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.306471305 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.303476915 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.304019991 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.31107655 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301663294 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307622753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.303310997 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.297158888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.304718809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301496437 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.304092111 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309200126 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.321970786 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.299084861 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30926342 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.324151324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.298445736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.303773051 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.310266987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.30398464 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.295913236 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.311092323 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.305397064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.305056891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.304997865 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297662791 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308345031 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.305710168 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.31383809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.298285275 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.30716293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.297914331 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.306537957 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.299038561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.306273142 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.304841377 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.307594057 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311860866 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.307108339 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299089654 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.309302928 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.307530605 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.306513435 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296782982 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.307100978 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.307690152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.306799221 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.303916615 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.299386694 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.310190363 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.301310672 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.309161906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.298770176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314833942 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.321782651 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309546634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.311100158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309535698 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309177152 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.308552628 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.301251205 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301064252 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303763975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.299436485 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.302081339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.31016944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301430022 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.309859008 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305379127 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.308734557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.311655322 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.310297191 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.301001366 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.31014881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.307534372 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.307460541 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.300418681 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.308716428 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.30366629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308713463 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.308572676 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.301867361 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.314597136 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.327496471 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.304569224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.305104271 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.304044007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.302192658 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.305038912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.312427159 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.302187705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.312349498 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.301515545 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.304890373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.302446767 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311411893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.318170415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.300125984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.309969381 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.310228258 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.301113787 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.300332551 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.30955218 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31288726 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.334334216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.301001365 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.31223525 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310435218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.309339369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.309224633 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.312106018 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308453314 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.30937278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315501037 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.328714297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.302190513 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309471518 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.320510812 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.310066822 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.309501458 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.303658937 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309516171 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.318333852 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.304223976 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.30761113 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.307006922 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.310029985 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.309569366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.308411128 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.31371275 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.309575264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313651905 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.329809045 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312259912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.309597665 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.314708981 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321432353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314296849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.339275765 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.305985612 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.316704825 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.312927815 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.307997871 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.306554863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.307401981 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.314958155 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.302797226 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.313784781 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.311930752 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.307591896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.311044514 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.319243473 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.306571684 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.312519272 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317823624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.303351021 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313876964 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.314107188 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.305988476 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.313340604 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.312822907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.303441745 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.307774217 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308503547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31709759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.306799592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.31802608 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309058903 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316700716 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.312224733 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.315464957 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.312905708 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.316413907 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.306043105 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.315331222 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313898366 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.323927675 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.309416402 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314790359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.307847753 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.319873071 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.324525387 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.308912502 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319770911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.315527155 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.306564277 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.311115615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.317710314 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309798487 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321393144 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.308188348 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31365794 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30772779 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.316012578 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318345446 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.317871738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.306002861 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.307836757 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318095435 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.314075827 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315946245 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.310449051 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.323188414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.308980009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.307506169 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.315774017 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.310208221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320576888 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31089041 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.311155913 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313613824 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.321758082 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.318790444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317369293 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.308977826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.312478806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.323917413 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321422041 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.314268266 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.311955818 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.319930092 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.310093715 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31499535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.317233778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.312274511 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31346727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.321972621 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.312608647 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.312135956 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.311082242 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319895156 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.322157431 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.322078442 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.31213959 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325018797 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.343706281 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323827883 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.311579834 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.31358827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.314156373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.320182778 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.319088728 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.31222378 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324450811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.339945674 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323135932 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319800472 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.319807346 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.311711098 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322950077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320382423 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.316160179 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.326069078 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.315799289 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324536102 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319586145 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.320823332 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.313438171 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.314782988 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.312441749 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.315586418 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.322084616 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318409635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.321694704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.317380176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324762075 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320588365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.318957467 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.321530648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.314409825 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322241617 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.314940095 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.32173327 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.324092738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.314091865 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.32166167 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322051462 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.315283567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.316463281 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.323536212 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.321174166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.315809368 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.316729033 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.326553713 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33124296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.324005565 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314331532 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.318273716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.325619039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322742495 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.321908901 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.316413303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330920295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.352422646 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316373955 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.318259196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326825252 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.331311256 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322483964 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324257529 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.318156732 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.320976405 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.326626187 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.320509702 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325142916 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344933007 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.319601963 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.325696196 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.316255232 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.317705928 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.324649218 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332550433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.323549656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.317149605 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.331400416 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333802903 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321444542 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33484508 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.347171529 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.32312001 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.328128351 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313893811 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.326659946 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.318785677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.329180831 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.323152914 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324946271 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.324536444 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.316565666 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32528073 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.33229109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.334183783 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.324596104 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.315324638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.319987623 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.326161552 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.324138454 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.32847605 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.324526173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325126246 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.324937821 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.317289185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33380962 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337694356 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.32948653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.32545489 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.32702913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.324542105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.329952313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321029222 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.328855918 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.325170735 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.327087488 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.322694787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334570161 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.33014849 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.318809287 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.320329737 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323827984 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.330718747 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.331881706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343604077 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.328901474 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.329346082 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328767627 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.326624954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319335945 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330669371 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327771265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.320456868 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.323107166 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331636777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.327572839 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.328009629 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.320613411 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.331821898 seconds)
  done (took 780.736568075 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.32858006 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327871229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328988161 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.325465774 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327883026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327023764 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326211542 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.326047269 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.328308833 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.326362872 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327430242 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326518677 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325165284 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327297341 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327213246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324825197 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329362268 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.32777651 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328878029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327594788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324199348 seconds)
  done (took 29.057044144 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.326944565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.326229992 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326394274 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329202391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326897584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.328912093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.327388961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328540622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329385783 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326514717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330056048 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326876876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.32843534 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.327655019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329062691 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327671634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326555778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327564653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.329021313 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326870175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329665568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.328535887 seconds)
  done (took 30.400014517 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.328760505 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.328217757 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.320600092 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.332401314 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.32782512 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.328156609 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.327400268 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.327364275 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.328310829 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.322444588 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.321844841 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.321540619 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.32617083 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.332576857 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.325446942 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.334194169 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.329517467 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.326737188 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.327961111 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.329214305 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.332738432 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.344160162 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.330531037 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.320381232 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.333913486 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.331904553 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.328995451 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.32888378 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.32028473 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.331861617 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.330827539 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.325164779 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.33094066 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.332437582 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.325712956 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.328594443 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.329667539 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.329324978 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.330140788 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.328598752 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.336417694 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.331956127 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.335424742 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.34078184 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.33186195 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.323345347 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.334379688 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.328379327 seconds)
  done (took 64.992168872 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.332126444 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.329961535 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.328093726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330527893 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.331234815 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.331042007 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.329288889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330057036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.333634186 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.332705283 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.331543354 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.329967911 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331513595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.329903236 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.33133454 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.330556878 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.332074032 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.330737548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.331149578 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.330227233 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.332114687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.331169715 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.332228486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.332037192 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.329724204 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.329813746 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331010379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.330346999 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.331351277 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.333721748 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.329702672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.333070129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.329354267 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.331217148 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.331780039 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.33066953 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.331259944 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.330094366 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.332726015 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.330094431 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.331611478 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330443327 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.331216436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.332580109 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.331645075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.329637936 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333940098 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.330689924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.32808775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.331527338 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.329391016 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.330698267 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332280418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.332444423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331057579 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.329854918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.332896994 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.32957534 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.328919568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.332792421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.330788022 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.331536523 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.331428135 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.330015467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.331241769 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.331510865 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.332508871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.330848145 seconds)
  done (took 91.702370966 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332237472 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.331095344 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330913879 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331617084 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329433202 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.331183659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330532245 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.327366701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.331259197 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.330763344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331286615 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.332732073 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.331594403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329947032 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.330761798 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33117721 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.330823445 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33212059 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.332209254 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329825057 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.332595446 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330269967 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.329716321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.332083872 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332101694 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.332526631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332766473 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.330534669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332759044 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333367715 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329982045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.3322241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.331338334 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328708561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.332653302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.330999456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330109352 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33288156 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.334863814 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.332050625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.331853875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332730777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33072527 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.330368137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333107736 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.3326602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.333494735 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.33115152 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.330129924 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.332809607 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.330154553 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331861339 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333983226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333371328 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.329599972 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.331371198 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334528684 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333576749 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332118331 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33515055 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33427611 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.333838448 seconds)
  done (took 83.758936609 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332877545 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331975856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.33111155 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.332630799 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333675129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333421001 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332985343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.335016073 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335483614 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.334934194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335003718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336845123 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336927506 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332940081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336453866 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334629172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335911705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336149613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336948352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335186627 seconds)
  done (took 27.881651056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.332550751 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.334536272 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.334917823 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335865373 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.334465114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335540987 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.333238717 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335902341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336268165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336306218 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335088276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337106928 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332414957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336438072 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3351877 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335306132 seconds)
  done (took 22.553289948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.334532821 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.337131819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.335495775 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.334098798 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.336173322 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.332825902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.336511003 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.335271644 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.3365729 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.336877575 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.334927587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.337750071 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.336913022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.337308888 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.335353432 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.336608254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.337317245 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.33501644 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.333851459 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.338045759 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.337619748 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.337769523 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336455751 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.334712321 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.336251209 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.333240645 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.337642107 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.334758047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.335374888 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.338073035 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.335824144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.339892952 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.335184004 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.334785981 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.334427696 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.336265603 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.335663483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.336057848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.332827037 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334020797 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.337799079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.339189729 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336598599 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.337789412 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.338180241 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.336521646 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.338801612 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.335431153 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.337752497 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.338125911 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.339075881 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.340520678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.338838171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.340753475 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.33913644 seconds)
  done (took 74.705586572 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339572404 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341484761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.339036865 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339209259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338632693 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.337012949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334538151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.338944609 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337341383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.337011339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.339624119 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.340576999 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339029333 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.340829383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3381573 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339550511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.339733269 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337676236 seconds)
  done (took 25.293739024 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341090379 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.338655572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.342082722 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.338255027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.338940647 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341390117 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33622153 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.340147318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335050058 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.338717814 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337192991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338589603 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337545904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.339473404 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.339483005 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338139863 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.33600638 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338205899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332462097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3352843 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337567865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338262806 seconds)
  done (took 30.632567073 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.326905951 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.324266129 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.326868208 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.34265237 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.333879459 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.329089637 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.328437144 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.327703286 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.340953386 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.367324526 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.364445771 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335318383 seconds)
  done (took 17.238511083 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335981812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33682497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.337635575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337920052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339352316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338900637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337186527 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339971388 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33764782 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335484518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338274985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33680385 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336266579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336533678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338937051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337582368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339040317 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339610187 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336802851 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339642416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338501347 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34003437 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337318237 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335225522 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340402493 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338477988 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338704929 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337390898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33913721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337605836 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341085536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335365465 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337356868 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340565712 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339549892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338408076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33676339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340530251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336470693 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33776564 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.338264092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337297571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336407215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341964282 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341203793 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338355789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340671606 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340300553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336466627 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338465576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342450671 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338411153 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338913704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336688843 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343106633 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343498435 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337046735 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338962888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33967863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341115094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341421308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340168407 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339212117 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339355893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336514919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342109715 seconds)
  done (took 89.55047696 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341281542 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339041521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340446209 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337144077 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341935785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33963627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341854537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341885007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341395409 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340934724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338353452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341934574 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338992432 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343038275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3430159 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337379372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34068201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341761453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349730131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342889785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342457657 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339215458 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340207289 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342090347 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344204253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341975337 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340196011 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341597323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34319533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34190563 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341811221 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341705322 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339859351 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343792092 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343781132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340751283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341698151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341622748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340758264 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339837946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345227262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343008706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343073245 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342214228 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341024197 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339374756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33851317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338822726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342996935 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341397923 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340514511 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342938033 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343392271 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342380027 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344464281 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342103679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338701028 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345551078 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342212444 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340141964 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34345579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341602592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342701401 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343835783 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343188876 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341782709 seconds)
  done (took 89.753877655 seconds)
done (took 1827.468161018 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.500947543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.454416122 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.333447616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.385819495 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.333229992 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.330744829 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.349183917 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.336535144 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.333554365 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.33246992 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.333959106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.528281561 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.331262222 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.333513724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.333550209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.434345883 seconds)
  done (took 27.18333286 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.361415162 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.338027051 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449595791 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.35930123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361074058 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52734328 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396556444 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.340951583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503557756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354624686 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335003305 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.357334213 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341044337 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.331664726 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.357165112 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527180881 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60547257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.345056116 seconds)
  done (took 29.392587166 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.779653101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.349215492 seconds)
  done (took 5.32710716 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.360190305 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.341417699 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.339737083 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.335668892 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.331074345 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.34810428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.340400058 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.335396651 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.349212134 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464201698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.340849946 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.353279402 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35484849 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.338325998 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.350779136 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.387487784 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4867356 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.347076403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.347193228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.341789282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.341090765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.464688346 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.382678176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.351992446 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45992949 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.341428648 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.349707841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.350345931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457667027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.350827226 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.339242309 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.339289119 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.338991715 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.286991662 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.826773466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.366438226 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.363099782 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.346846564 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.347960452 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.485293732 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.342446792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.344928738 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.33243644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.829372701 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457753119 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.484097226 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344918844 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348248264 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.343034062 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.435405309 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.339916868 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.34321477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.397921028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.231694482 seconds)
  done (took 85.864056971 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.397457145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.331707309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569972203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.353261792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335278368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.341235128 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.350485453 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615863562 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.400253768 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33496985 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.710376149 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948000115 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.360718164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.378475631 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.619668595 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.46309724 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334457025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.334140177 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.335206534 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.339343001 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.979372624 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33851338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.33419967 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.510160729 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.381538013 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.903922625 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.333865919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329560844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.332013452 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.334462162 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923911295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.356122307 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.472471709 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334322018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.667361803 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742231095 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702865428 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.340040241 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337578909 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339921941 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.358123356 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897447609 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718107806 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333302268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330984347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898719522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330244359 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.339559328 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.342430044 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.681053364 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.339963162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.332421973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.33382113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.33590345 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.336476448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.479691048 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446774606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.901514144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33208951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.346280599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.365442443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334574573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.338058984 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339870962 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332826665 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.729619663 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.936365225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.34100705 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.72023996 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90880384 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.345586389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050818959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.353044731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.36028128 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.448343937 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333910009 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335033531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900828064 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.362400393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330938988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699063244 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337447986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.701324024 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.34688058 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332773552 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965942382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.355426901 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.412265651 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334938959 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.350485299 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332572698 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340217339 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.682963658 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.39484864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.33384373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.333735462 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.357140882 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329345134 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.353587551 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.336616114 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033461765 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.35105677 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333638376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.35633065 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333904061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.353920539 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.338431442 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.33806695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.693050474 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.340728719 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.34697044 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339236369 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.347032446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.336664287 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.521699017 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.344171249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637107163 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335907193 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335350088 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335907162 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33745966 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.354770634 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336632106 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.339534963 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.336467935 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.700972877 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350243134 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.335135788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33542898 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334263991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335064675 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341370009 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.371176773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.341293389 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147283734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.391644316 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.338149161 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332343816 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344650885 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331866669 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339288545 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336385294 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.692345404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.677302598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.899088627 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336901059 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.348397225 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.151637839 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.377077919 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572502699 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350442388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334729357 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.661136297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.946963604 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334561529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.330352388 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.333007412 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.693005062 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.328036473 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733415613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931478594 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348429672 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.34458176 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.11607761 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195169509 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.338680312 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.338401136 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.685193164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350032963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.336730795 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.334210779 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333492789 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337665994 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338185954 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33571451 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.336508872 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.333803839 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.678762215 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575439648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347845504 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33510528 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898533089 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344575579 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336155005 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355750416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.340663232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334104886 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.471501199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.342915428 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.368389623 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.338149276 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.342327893 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921982551 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332671432 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.338281303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.578930227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100345146 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.350199421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.332879025 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337930971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.628172264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928558309 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.345258371 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629655105 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.348930636 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.379471637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333234937 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.353317668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927610773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341595293 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.352942011 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.090824485 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.353718576 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.063997677 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.334962651 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335265012 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996512502 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.3499441 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.336562363 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336168652 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3405432 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.730220148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.338268365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.397158419 seconds)
  done (took 504.060206441 seconds)
done (took 653.025411817 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336516443 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.339941198 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.344117517 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340983166 seconds)
  done (took 10.564596732 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354626905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34394923 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.358348723 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34284158 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.353434367 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343768468 seconds)
  done (took 9.301155477 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339401351 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34125789 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.342830226 seconds)
  done (took 8.226770093 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.581974758 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35417946 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.666317574 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.360806382 seconds)
  done (took 9.165639994 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.355662855 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.358898718 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.357882407 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.354634999 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.356366716 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355686061 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35463412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.356734024 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356822834 seconds)
  done (took 13.410034757 seconds)
done (took 51.871844572 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406371392 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.355420448 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.525286764 seconds)
    (4/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.417250427 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.412537134 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.310463731 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.322801563 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.58749624 seconds)
    (9/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414534368 seconds)
    (10/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.348455475 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.353114933 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.341093897 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.338244519 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.379299288 seconds)
    (15/192) benchmarking ("map", abs, Bool, false)...
    done (took 2.314948855 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.315799616 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.746275701 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.314563173 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.48662269 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.482948776 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.429367039 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.679079492 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.317444084 seconds)
    (24/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.310991576 seconds)
    (25/192) benchmarking ("map", abs, Float64, false)...
    done (took 2.316866054 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.316455584 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.43151996 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.496970525 seconds)
    (29/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.562683795 seconds)
    (30/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.461430386 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.314384674 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.494574392 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.466312753 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.433309072 seconds)
    (35/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.308197598 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345380207 seconds)
    (37/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.325591261 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.419603912 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.458744857 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.353397032 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 2.324755958 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.497962523 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.366691961 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.315161822 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.646532424 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.312134969 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.468889716 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.463126744 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.42482384 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.338630129 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.363874867 seconds)
    (52/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.317962772 seconds)
    (53/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.325992936 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.582683928 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.438916883 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31358883 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.408944474 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.493734604 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.438081192 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.451520532 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.490201903 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.316639437 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.520135619 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.562969734 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 2.315011649 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.348228406 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.650025556 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.312767451 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.356074038 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.572546951 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.568118174 seconds)
    (72/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423243379 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.435190641 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310170369 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.450638018 seconds)
    (76/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.4342742 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.496140587 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.453357227 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.336660663 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.495494164 seconds)
    (81/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.31669713 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.437821636 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.507063776 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.496647453 seconds)
    (85/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.569697817 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.45575866 seconds)
    (87/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.31997122 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.615907326 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.461275938 seconds)
    (90/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.318103881 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.349582446 seconds)
    (92/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312291074 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.545896951 seconds)
    (94/192) benchmarking ("map", identity, Int8, false)...
    done (took 2.321079654 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.422858334 seconds)
    (96/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.34647942 seconds)
    (97/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.314340029 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.363832953 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.628896836 seconds)
    (100/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.493578695 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.498319804 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.318176187 seconds)
    (103/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.504287181 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.35333154 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.756815625 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.469458172 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.315976681 seconds)
    (108/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.314933156 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.551037524 seconds)
    (110/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.325003693 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.44583045 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.320263325 seconds)
    (113/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.353055673 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.537003367 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.370186763 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.364289976 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.448908979 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.642382777 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.373998787 seconds)
    (120/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.528810365 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.439851526 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.58346593 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 2.318468817 seconds)
    (124/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.343167521 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.484882502 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.440266016 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.55291474 seconds)
    (128/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.345203277 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.332266818 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.45709864 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320376235 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.593940027 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.417660456 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.409542587 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.316798667 seconds)
    (136/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.412663076 seconds)
    (137/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.31980015 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.499966184 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.325550777 seconds)
    (140/192) benchmarking ("map", identity, BigInt, false)...
    done (took 2.318711348 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.439147967 seconds)
    (142/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.350009915 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.324286115 seconds)
    (144/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.361297293 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.463645173 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.489688635 seconds)
    (147/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.316362515 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322273094 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.414312138 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.357773385 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.349296727 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.574163936 seconds)
    (153/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428798165 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.492192502 seconds)
    (155/192) benchmarking ("map", identity, Bool, false)...
    done (took 2.321064688 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.326084548 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.357742504 seconds)
    (158/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.335152644 seconds)
    (159/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.459740228 seconds)
    (160/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317687926 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.577804615 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354296013 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 2.324540692 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.321985694 seconds)
    (165/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.44251128 seconds)
    (166/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.546801729 seconds)
    (167/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.3244504 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.509989291 seconds)
    (169/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.363113917 seconds)
    (170/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.327830039 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.474078985 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.47284615 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.362376266 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.456181505 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 2.317604116 seconds)
    (176/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.323137669 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.64505728 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.467000725 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.551341641 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.578261422 seconds)
    (181/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338340185 seconds)
    (182/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.422798912 seconds)
    (183/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.320268299 seconds)
    (184/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.437572138 seconds)
    (185/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494989368 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.431138751 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.455094007 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.32416958 seconds)
    (189/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.324698235 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.337862665 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349993352 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.334574151 seconds)
  done (took 365.516107306 seconds)
done (took 366.72145523 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380317404 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.450037892 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361596908 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361271961 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363168246 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.354266235 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.381639491 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.363490558 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373464291 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376408961 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359122883 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.365552344 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37911417 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372395822 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393372429 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.36271397 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364908442 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371364483 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37996418 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380767664 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36577105 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36289269 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.392346064 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361077326 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368914828 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372462036 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369768392 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.367100555 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.368038258 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379692146 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.366412618 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368051033 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382157121 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.378095457 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365177436 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374141836 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366813572 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.451845155 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387338229 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376886716 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.373305211 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382327622 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369072906 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37057434 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377620874 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.393791246 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371540189 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380118039 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364660483 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320177905 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382709197 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378491007 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.374220136 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.322633236 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360561238 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380105696 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.375004118 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385852214 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.377181317 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367597925 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399669589 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386635669 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.379034296 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372954717 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374760398 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.380190788 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.37816585 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383560684 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.375120296 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36809114 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366875346 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.375070921 seconds)
done (took 108.18627498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.483137386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356418389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.521415634 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362817104 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.526335011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485363882 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346872194 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353035065 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349788161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.157588122 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358184422 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343302642 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.335039295 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343905003 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.464146312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342198767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347123021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.036628973 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.338232903 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.468191308 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.324191199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339754904 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.335230277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.131464531 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.323327882 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.321951443 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.469034853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336529686 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.038295092 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.321920478 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.324165396 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.03442863 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.469960738 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356204188 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.345360851 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.347570255 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.49929066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354186048 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453622732 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.456639538 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.491163727 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375895296 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.322078679 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.324263013 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339678833 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.33618907 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.337958459 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.368786467 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.324040017 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.336612209 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.03205911 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.34818683 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.347514649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343631645 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339317108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36009831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338202981 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338754115 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.473184184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.340820515 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.458470837 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.13814634 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.136311317 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.340233558 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.324981955 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.339328252 seconds)
  done (took 108.673755907 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.397204227 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411752248 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433183406 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342866023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376445048 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.437243377 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.343145223 seconds)
  done (took 10.935448329 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.338505046 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339514783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376586145 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380831646 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.341354055 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.505186371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337645114 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.342367167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339666204 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.382413746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.338138586 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339219706 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348380728 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.333037757 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377778786 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.344012466 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451608362 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33048474 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337173949 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.485218061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337695377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.351034221 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.380311102 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341051747 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338932248 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337890602 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.114380047 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343301539 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340205285 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.34115211 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340531113 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.397011181 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338893015 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.332727946 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34086024 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447681559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339955486 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339874837 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339347297 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33378067 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.338395858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336694831 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34154775 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342845409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341399362 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.357110805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340923964 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.339881149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.34049209 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339655202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.380276049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341453624 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.340084456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339691463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.386019126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351311495 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344203802 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340145283 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343203621 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340599464 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.49009394 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379825976 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340349367 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379269216 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341240185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341497861 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.342722672 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343766987 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426539025 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339746439 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382302419 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.341972195 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510865184 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355332044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34557678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336758935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.337413822 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339562707 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.329056242 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339687472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.342454171 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335619359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.343810891 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341535991 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343728919 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.495453973 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448261908 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345493349 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.351151166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.347331249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345384295 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387592546 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.341950071 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344145374 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385230592 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455926496 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.388288794 seconds)
  done (took 137.959639398 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350135285 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.346295492 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.337784689 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364910342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337940374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.336956598 seconds)
  done (took 9.271662116 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.335784869 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.338715823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.337132051 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335908472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.337953466 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3378648 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.337961454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32996967 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.337958806 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33620317 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336080755 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335576965 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.338659778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337078435 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.33528711 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335778349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.331341264 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.330500398 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.328654839 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330252372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.31690677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.328852637 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328620288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.319892697 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.329457247 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.331146446 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347289732 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.333188521 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.331400537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.330120374 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.348560043 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332999287 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.323839625 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.327175451 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.336057383 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.321873025 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332390197 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33453532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334486455 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334255458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.332013762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334526435 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.33221431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.335581166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.324546478 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.327116941 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33604089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348644447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.336180273 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.337421512 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.334864783 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333796321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334864583 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335573609 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.327451241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342136406 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339001729 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337055547 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.334336077 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.328344027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.337633992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335303685 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326400424 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.338933949 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336811611 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337414453 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.328228946 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338318228 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335486806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337187566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.336578005 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.335362806 seconds)
  done (took 98.241162558 seconds)
done (took 366.296133127 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.755518285 seconds)
  done (took 11.953873697 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.333396621 seconds)
  done (took 3.534640527 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.141999935 seconds)
  done (took 21.343197366 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.405584062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.393882953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.34473089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.338514228 seconds)
  done (took 10.682156085 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.627382449 seconds)
  done (took 3.82733405 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343327198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.336158127 seconds)
  done (took 5.881113332 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.493922405 seconds)
  done (took 3.693501497 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.342972875 seconds)
  done (took 4.540544569 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.348743548 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.346248038 seconds)
  done (took 5.896821615 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.293072237 seconds)
  done (took 3.490972371 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 51.608400511 seconds)
  done (took 52.806599763 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.341112024 seconds)
  done (took 3.529942829 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.362569602 seconds)
  done (took 3.548555205 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.658650322 seconds)
  done (took 5.833454672 seconds)
done (took 141.760826149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.295106207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.298821943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.298045272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.297114245 seconds)
  done (took 10.36513105 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.409953077 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406462198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.395111667 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.372548195 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.380263605 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406933258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.33849609 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.346886703 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.365563184 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389324306 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396495285 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390631289 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.391104501 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.367272302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.3857805 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.393254806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364569724 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395525189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.338298086 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389958694 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.315029382 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.372849702 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39217914 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.312697128 seconds)
  done (took 34.195263661 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.854610451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.393889564 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.456439311 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.380693168 seconds)
  done (took 7.259208604 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457679791 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.428649348 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444756702 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469342348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520109567 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.44360602 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.339810485 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.33496343 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.319601504 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427004355 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522333041 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.39276574 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.610027437 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313784637 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.629186946 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31531366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.312129483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432097838 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.465963552 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493736806 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314924175 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.458221118 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419206407 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.391894091 seconds)
  done (took 35.430060842 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.325758615 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.332113897 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.316901069 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.335279131 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.318413123 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.31771336 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.318637734 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324576374 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.318346311 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.318438291 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.319163067 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.332107092 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.321740391 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.317324358 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.326952274 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.318629528 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.319428617 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.32713874 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.325038909 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.31875606 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.322650506 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.325663827 seconds)
  done (took 30.280169946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.29937172 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.302079731 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.299888367 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.678315179 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.302601216 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.305187636 seconds)
  done (took 14.36978882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.371452162 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.522506611 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.313390816 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.636174186 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.727422755 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.30966976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309877406 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.540295329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.837710579 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.810715953 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.368762313 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.379763978 seconds)
  done (took 19.309133741 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.311822098 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.306982233 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.309213873 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.32261 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.359116398 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.331844622 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.315665682 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.304814677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.362900205 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378191135 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.330033357 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.361924063 seconds)
  done (took 21.179346049 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396859973 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313969725 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314834432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402290931 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329035353 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316197315 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31822989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991357601 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.341145344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590013099 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314797981 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405822716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563905388 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326508457 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321969839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.210483895 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548346321 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800837765 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317644818 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317560513 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352328682 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316612663 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320830331 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526833186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316771093 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31623132 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.717626283 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316168663 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582650172 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55868723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559036731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316961614 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59261938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934122996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448959837 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507389253 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314142956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323158702 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.298285836 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.321528432 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336965636 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324634772 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557905559 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320039104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318435642 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328198828 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994987763 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.350756692 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.317947549 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319145025 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561207759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40654427 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.325105778 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318493832 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31678486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319668508 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.323971975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440426556 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976010517 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319510607 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332947995 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.319232063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318036231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338521806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008327842 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.343491015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.326339906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325579555 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319941517 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326731212 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346005845 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320204027 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.369184814 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320226664 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104748135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3454844 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325000957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865979727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322091192 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.323522687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547517262 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319154826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320568557 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.321260461 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320979848 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991809628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339220152 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.281845752 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378263902 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015762139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.534147134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364943949 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351265346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543905267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.282993531 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321631712 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.323645483 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345591921 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345369076 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.999724031 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345200642 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.924580353 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571517184 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.200175692 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322312071 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.234367006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756199135 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3411969 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.345124826 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326096011 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.517970287 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.944261285 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589677305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325353606 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365018587 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323739112 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027796904 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325637162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.333850408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336446678 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642524995 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087797794 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32949768 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39310712 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32521251 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327477836 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336023336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332091251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325948957 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.484385827 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348839448 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570346281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.328760183 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324422441 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.329189749 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328697022 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.329589316 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547054622 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335510475 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613322179 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323407827 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323315512 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325741963 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.545240164 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.34125374 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.332855728 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664980298 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324458772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340724231 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572125715 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367315149 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438860995 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357329674 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.325783033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575722635 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.588778936 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331258156 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333080263 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332235269 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331434705 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.332890918 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328025086 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96580528 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34360842 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332235312 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326595495 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.343401108 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397304663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334584531 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519381158 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.334783763 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321092385 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.334879941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.331794709 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554051396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570415792 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328802709 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504516929 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.754973773 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968970209 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360449453 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.327880574 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.328503322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.326118985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328291447 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327391759 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329948294 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519079672 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58037214 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329220287 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948692013 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348735596 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333301688 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.335690167 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570514453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.33906774 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32999904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.33021541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334807915 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336108004 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574471694 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538045588 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.346211334 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32886278 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850448569 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339258986 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328902643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329989688 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352499614 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33481906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136352045 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689532331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333910575 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57664416 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332891006 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.353153375 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.329120828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333236515 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336340134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.338392603 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362740992 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.523006289 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343522168 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335909805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971590744 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110443233 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907092459 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360810019 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.336774874 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334592685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009864245 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351599205 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330560235 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567309236 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013932603 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348895393 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762839838 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.352073314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065473206 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581131796 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559978209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346592956 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.342607811 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580390184 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210925096 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355539567 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340960962 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335375703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.291271441 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841548995 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358572857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516414412 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998421981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351595943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338991841 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.374041785 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340588983 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694347064 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350591298 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333713688 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339165277 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335519173 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140373321 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357624349 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33333104 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026649187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350431508 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.77002708 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353976743 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.528558674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578036058 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.545956721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.335413439 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.350675276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.580730404 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575173846 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340536827 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336713836 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911799331 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.204347113 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.342285139 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33595463 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043941554 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339709037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608596708 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.343104855 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.342931337 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349471193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334787022 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335071489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.334562689 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341152921 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336103018 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82846121 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.332881142 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331835351 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351942459 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340891017 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583298752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.35344086 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954795676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582014717 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333217046 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376762052 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.343239631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341821327 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.304471417 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334354479 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336038382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356169013 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561268788 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33626025 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.298178749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333116888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213675802 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33624302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346328 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547453326 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.33829196 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.351410566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136187468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383473996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346197599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338451108 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329669081 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376372047 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423560126 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533420482 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.584113109 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584483944 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704248245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35676815 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344942691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.353586563 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423934319 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339944327 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353945321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.858490837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964600369 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150860021 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970798672 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602014386 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342262488 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349798927 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33917126 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564927887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340539206 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618198582 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340116611 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.354870992 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360728223 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344600711 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356060141 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339580259 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622909539 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339600242 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340449483 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342023719 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.340532933 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592269068 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.220022943 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839682873 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893593908 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343099595 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351828957 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010571503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635020268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343020694 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344406928 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340946878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.340934799 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360660528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.350299307 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342767313 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555258821 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58633871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962779661 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604719133 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.763942143 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.264580707 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344395125 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591662677 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177175572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536625045 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96906973 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077342887 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596243209 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410008448 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538752276 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.343668578 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56466808 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.352571247 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342038597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345036432 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343844769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.342526735 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586804715 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971350959 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614261161 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.34872519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.352876316 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372254018 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.539681195 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56697386 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01719798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565645042 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594050303 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351356814 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344358092 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97355795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605778097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346359536 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.348063106 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548586348 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345155558 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382816426 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.344169118 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.345331748 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899410281 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347446195 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368230945 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344738853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080423669 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975817192 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.375573056 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832508542 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345579889 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354453746 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620998888 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.351307746 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34575345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634655231 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.346286603 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358462024 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543539074 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.975544099 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109108534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.348430609 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378421386 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.34959045 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346047372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415048728 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365283962 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35818412 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.70443228 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365401811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347134211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360775063 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.34742413 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36230307 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.347714134 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347401897 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.355571579 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.324926289 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.313896135 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369655727 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482436091 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864795897 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37002283 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.947702285 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.688632539 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596544316 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361793336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.308573101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.950454743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348746022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349188405 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348296015 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340332937 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920061779 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.358183466 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.593341379 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35694405 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.350773149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350191374 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349129763 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549434703 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369945039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367618751 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.309675611 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348442632 seconds)
  done (took 969.942864952 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362478407 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.357449659 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.345259001 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.399204862 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345200826 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349862809 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.345147102 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402867672 seconds)
  done (took 20.12419792 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41180332 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.429000874 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.409982827 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.427702736 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.347046041 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.929149442 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410617422 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.428997783 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.446768885 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.375844346 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.411845148 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.051155292 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.447408175 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.411393098 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.383932826 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.350995412 seconds)
  done (took 32.89277242 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.021287128 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.370552955 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.935699005 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.396658289 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.362949113 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.370638992 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.505550779 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.369539222 seconds)
  done (took 25.552751106 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.354902321 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.355843572 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.357090491 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.356101478 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.35585559 seconds)
  done (took 7.997258806 seconds)
done (took 1230.076071141 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36321745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361854234 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361963836 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.362443153 seconds)
  done (took 6.669204387 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.312783415 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.314352209 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.315108801 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.33040011 seconds)
  done (took 9.492143591 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.990494996 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.815610524 seconds)
  done (took 5.026899037 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.88657817 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.885603634 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881445727 seconds)
  done (took 6.872724124 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.640659362 seconds)
  done (took 2.859475843 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344217643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.348111955 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.349628412 seconds)
  done (took 8.262194828 seconds)
done (took 40.39972158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346913707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.116077044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500407551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.351404492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502922306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.500521504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.572515595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349242268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.348730399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348004351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351617178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50439721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.559839929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.116595348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.559633798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.118431484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504200575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358022795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351875184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349556671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.571499305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350178368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.343835343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.348851883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.505481569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.489018097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345775317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.118047502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344959855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.345128879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.48902006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.344555803 seconds)
  done (took 81.529868398 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.345837939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.345756289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.356045799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.346777432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360602973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368544303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.346963451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349115418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346796285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.347426291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.361666914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.374060947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.350144152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.346639609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.364531651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.346603999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.361875087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370476649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.353040129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.346805314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362546286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345588875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348043149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.348787923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.354499185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.34829959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.364553069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.347818297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.347496628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363336287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350726202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.366982805 seconds)
  done (took 76.561019949 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.348199362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.354002271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.348277279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349673855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.349861427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.351139158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.348724778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363490565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36986342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.357863136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.347969256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.34922176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.350027456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362737953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.367531517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.364171995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367964992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347869067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355246256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349753121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366364924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363211821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353065705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.348931907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.35060988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.35219055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348781534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364986216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348917304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364404044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.373333312 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358698832 seconds)
  done (took 76.622622213 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.82692676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365555513 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.369328286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.360426572 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.368276493 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.364118812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.359447229 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.825690444 seconds)
  done (took 15.065516744 seconds)
done (took 250.998813703 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.360559959 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.831049218 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.405643627 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.359717916 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399133509 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.387851012 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.913706922 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.407058183 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.573790216 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.391777671 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376710564 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.359671328 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137103663 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.830563467 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.373792322 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.377197666 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.210353359 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.356910948 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.914712671 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.382920923 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.386437644 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.352315167 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364295472 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.226768554 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.323171986 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455688316 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452630972 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.378500625 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519621496 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.433539402 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.841170601 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.365609091 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.368043498 seconds)
  done (took 66.045405707 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.358149915 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.444308928 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.368554084 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.368848276 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.444503235 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.367634036 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.361410244 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.369256253 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.368014665 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.367902245 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.369637791 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.370882463 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.369104583 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.370417663 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.44756714 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.340215549 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.359156165 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.439258005 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.359205695 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.344997778 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.36850646 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.370031568 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.373327582 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.372990519 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.371303961 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.37085166 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.4425665 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.369358814 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.346176239 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.440145454 seconds)
  done (took 42.643408505 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.370613714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.953063961 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.091832306 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390141646 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360991175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.36611738 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.631886729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.376354939 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366073125 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.36692506 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.832603923 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393058901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39402062 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.126846811 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.385467467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.3723491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.372590623 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.3630937 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956351085 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378461091 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.650229847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377225056 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.634230652 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.376583992 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38379434 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364945084 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.368967556 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.171740751 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.369626488 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.832673361 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.113539772 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.635032009 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.085173222 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.143725168 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113793236 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.379820243 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.3759094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.839777147 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.38732683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365341916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.631386444 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.369126775 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.103666729 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081678223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.385290212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375054883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.192799018 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.844679089 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612855686 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376373017 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15136369 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.387396927 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.376397983 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366546481 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.59125215 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37283912 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.366270001 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195939872 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376971706 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.632451259 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.38247546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.367058215 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958139722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37076976 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.951127079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.372913089 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.37522731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384074633 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.116116578 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.391157062 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083385916 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386790198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.3767825 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.847800973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.973341873 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.241282905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.374684882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967003469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.125670346 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.637804391 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.378454863 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.144471139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.659634752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376660205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.380157651 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379459108 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.378112549 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.443963845 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.632802685 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005428803 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067829443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.22452908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.645116797 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38426043 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371349553 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.204065862 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.3814921 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.379528971 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.09940453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107027582 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.389299209 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.37601935 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.089631054 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.392524503 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.639663475 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.378178606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14515039 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390245023 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.443606145 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.380198862 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376755552 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389788161 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.641300841 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.37732503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.379945862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055794401 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.866997222 seconds)
  done (took 191.886769096 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.364536204 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.364823686 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.365540526 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.363055936 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.364249774 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.371706231 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.364201637 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.36514752 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.368968306 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.364642517 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.364560677 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.373958031 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.370688867 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.363396296 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.366158809 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.365580066 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.365842879 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.390287452 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.364244444 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.365902598 seconds)
  done (took 44.584530064 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38117878 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.907811493 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.890437555 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401634913 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.380964889 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.373699382 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.425305312 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.397489609 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.381482055 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.657540154 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.536521632 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40367794 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383409327 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.381394285 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.871269694 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.353050898 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.658466715 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.912834655 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403844547 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.907960161 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.351581568 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.382454266 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.371977827 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.907461437 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.690518104 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.643740672 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.432809246 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.924732388 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.403682447 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.383853809 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.908769791 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40422081 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.374560459 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.885566383 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.404207722 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.656841124 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.406201772 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428121094 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.447144877 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.679391634 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.919800067 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.671959007 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.702323629 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.34316547 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.402686076 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.346865593 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920319411 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404997518 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34974571 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.38607222 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.390759955 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.885346505 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394890776 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.885424746 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.408850894 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.385521668 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.91118398 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.904046057 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.892680705 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.557944999 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.393934911 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.64190373 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.390080706 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.923322679 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.407996875 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.386541937 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.386152679 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.537237906 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.935294427 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.663957221 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.666870841 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665383146 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.391740511 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.443152328 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.404283882 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.663563738 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.443636571 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.342860013 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.683552142 seconds)
  done (took 126.776570986 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621070601 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.49202657 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.759755872 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.335313271 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.378966444 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.387466236 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470887686 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.011786913 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.381557029 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479101558 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.390797171 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.371460548 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.382374173 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.44070496 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.501830457 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.872502973 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.404566916 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.37244884 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.373371995 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.978002139 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.402017675 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.483533147 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.248656261 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.601471542 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.389782849 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.373734203 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.39355326 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.381288083 seconds)
  done (took 58.923880089 seconds)
done (took 532.088391594 seconds)
SAVING RESULT...
DONE!
