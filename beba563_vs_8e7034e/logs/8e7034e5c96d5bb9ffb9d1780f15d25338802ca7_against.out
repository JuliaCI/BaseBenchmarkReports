cset: moving following pidspec: 13253
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38689096 seconds)
loading group "string"... done (took 0.493395343 seconds)
loading group "linalg"... done (took 9.199931935 seconds)
loading group "parallel"... done (took 0.168701297 seconds)
loading group "find"... done (took 2.970838726 seconds)
loading group "tuple"... done (took 2.211715066 seconds)
loading group "dates"... done (took 1.393940841 seconds)
loading group "micro"... done (took 0.199610742 seconds)
loading group "io"... done (took 0.523512417 seconds)
loading group "scalar"... done (took 58.023145038 seconds)
loading group "sparse"... done (took 13.943081893 seconds)
loading group "broadcast"... done (took 1.329581699 seconds)
loading group "union"... done (took 11.036449157 seconds)
loading group "simd"... done (took 3.779070628 seconds)
loading group "random"... done (took 13.685058559 seconds)
loading group "problem"... done (took 2.17415156 seconds)
loading group "array"... done (took 24.703561626 seconds)
loading group "misc"... done (took 1.132227045 seconds)
loading group "sort"... done (took 3.663214675 seconds)
loading group "collection"... done (took 21.604615265 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591016609 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125575141 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199942554 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.276889962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228031544 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16357496 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140709909 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236593025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.521819999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.198915598 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135119046 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413482622 seconds)
done (took 5.974699757 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.246595637 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.237050785 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161241604 seconds)
  done (took 1.083215965 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075376859 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154611738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105470078 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091192074 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09026431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107163743 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089746277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106295615 seconds)
  done (took 1.432705949 seconds)
done (took 3.526846838 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488637981 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.86572499 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.496152208 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.140231414 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305130835 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.287319972 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264796763 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.194614686 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090609288 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086706978 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170397208 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389495814 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.382339277 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941944391 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.086856501 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092397868 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.127712435 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.751288369 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076702897 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108615132 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501287013 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.186548639 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098418261 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120959641 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183124373 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130279628 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.157553076 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098419967 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66395434 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12829044 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175455664 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095052277 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155187547 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.180276135 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19069202 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109973263 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675935897 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197706047 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094478956 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097743386 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671451392 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117156931 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.179141511 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101121184 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087198883 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.176451219 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098510892 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091730122 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092873852 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083229095 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158887623 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.466595197 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102072521 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.164967947 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091098427 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684840597 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094513958 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270167882 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123486334 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098634714 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088610146 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.084946885 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153328722 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09167835 seconds)
  done (took 19.684282526 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142561429 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161105151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075891502 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153069 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120469429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078720844 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100346916 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077299462 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106171237 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191437729 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136591551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149106748 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072875134 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104885907 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125287595 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245023355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108622685 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119618172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089030358 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089576185 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139387919 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097861924 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091333576 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107722764 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17002122 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200736085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109031209 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122316806 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08939516 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095460945 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140731179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147176683 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091327003 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08622227 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.167122559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120794111 seconds)
  done (took 5.128702181 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1968078 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120035365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.220211697 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19245138 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129438851 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179368546 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147171405 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26681033 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288968482 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17510021 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113053019 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110951075 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077860576 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078560405 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075920349 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.449284571 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146595124 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18487257 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160417516 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093319272 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096005156 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360731704 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100076857 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083939266 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10963659 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064274094 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197567142 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091674724 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.118543225 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080628264 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116783082 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111830688 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207597485 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121228183 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118126909 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108149247 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081821108 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221394569 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.182963751 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097173345 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095476753 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113837433 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131637901 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113236324 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081497927 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107714193 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218814541 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118362137 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082975659 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105453792 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.03755932 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193554258 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124120176 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083858653 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289666554 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124156814 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09612152 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.105335088 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.786385614 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127118297 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082186813 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076994791 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108380839 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07717789 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428095756 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117345106 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.480373329 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079203514 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153768437 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093234291 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113193948 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084801871 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08280924 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098062471 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104312133 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100077007 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078377903 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082976238 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092700654 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086907067 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111764821 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099425514 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078261785 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144914966 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.110574954 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104643444 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120852609 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087491538 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081530715 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126573488 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080257202 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100653838 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.140199119 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111324471 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112021023 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110043468 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140715089 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086424872 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.225951396 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096070869 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123046986 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09504106 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111015501 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081804127 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112229487 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077561443 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098323994 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077916523 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077711818 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156532968 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08663806 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079381205 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101401756 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090961498 seconds)
  done (took 28.300829117 seconds)
done (took 53.801706814 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.424715549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079472396 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078256249 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096433592 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079585612 seconds)
  done (took 1.522472798 seconds)
done (took 2.265082454 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31659031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184474785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099593841 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182148335 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08450429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189063891 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.174492189 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09226096 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19783287 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082454057 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179675733 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081174011 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100915848 seconds)
  done (took 2.731020843 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100591735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106859655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098901456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115788638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082849044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099326193 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114769498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109645206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098782907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108142966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084084186 seconds)
  done (took 1.857231915 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098176676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103769745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096160963 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114382434 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083297739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09516899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113044895 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106240837 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095544332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1101759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083189555 seconds)
  done (took 1.840855461 seconds)
done (took 7.168620056 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.061734084 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.087264691 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.161766064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203487044 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343271361 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.229588714 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.546473742 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150234187 seconds)
  done (took 13.670502207 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.119149669 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092163314 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.149823251 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09051084 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090305329 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107644068 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091601417 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089603176 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106870327 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088332686 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0917704 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104866241 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092730599 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088113777 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090879715 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104456456 seconds)
  done (took 2.402431439 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140595257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137797704 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094292799 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097271778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110270039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096228351 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099509267 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113147592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092201846 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092607426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099970845 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112523465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094925917 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090083405 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110694984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114533721 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090966076 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111583019 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113288101 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095264946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112397548 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094426506 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09331266 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112035367 seconds)
  done (took 3.348075824 seconds)
done (took 20.164240569 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142941534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09773788 seconds)
  done (took 0.989725644 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.135129078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151463216 seconds)
  done (took 1.04107049 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108974517 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.087642698 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131956162 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09937363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08832473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103635244 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.111970736 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.087652325 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.104120052 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088741649 seconds)
  done (took 1.770998961 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091418816 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092111685 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118218263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.131087683 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.094688287 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107057521 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092540741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090732287 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110871598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088525888 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092500325 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120526493 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0923395 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121052771 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092858317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093050023 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112680112 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092411248 seconds)
  done (took 2.594112389 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088452538 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089609196 seconds)
  done (took 0.938370045 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09003447 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08710271 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09010574 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105047548 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087461304 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08728789 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103797581 seconds)
  done (took 1.410339129 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.477177173 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.375343552 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348820533 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105374344 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141399068 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.344113098 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141506947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101716609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09952074 seconds)
  done (took 2.930524164 seconds)
done (took 12.431976759 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088345007 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217241874 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.59541068 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109895626 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.086733432 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155099216 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.27645499 seconds)
done (took 2.294838326 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33468137 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139654226 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080511667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088836783 seconds)
  done (took 1.404129236 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079440172 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096470602 seconds)
  done (took 0.943002054 seconds)
done (took 3.11594393 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086802392 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.117977391 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103798933 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08647673 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085929515 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085225312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.102884875 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085854668 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08532582 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085708997 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104543031 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086097121 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085620394 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.101963307 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086018751 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086382397 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085361346 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101516419 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086326953 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086448026 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100043274 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085985925 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086188872 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084728955 seconds)
  done (took 2.993065199 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105116132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088263472 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105690428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090781688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090518147 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105311303 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090840215 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087511975 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090198191 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104313281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090187474 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089869208 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10378909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09211259 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086926518 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106422023 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090214789 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088175774 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103590001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090682965 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089489649 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104405169 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091290016 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090410378 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106313732 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09091823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089258162 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104347235 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092564617 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092021998 seconds)
  done (took 3.620514666 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093959605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083911088 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086225005 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.110550162 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084028048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087038716 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099579084 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085529107 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089736401 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085110329 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104906093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086378611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084489447 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103500619 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088504851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089493242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094539357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100721825 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085010944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087856684 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107043258 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08399226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086762035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086895681 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103508316 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084656218 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08698118 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102756042 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088049208 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08638497 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08874199 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105856767 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087296747 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097317156 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106191996 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.086608599 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091390566 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099822684 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088278847 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085512406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083441705 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102886996 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08487754 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092636198 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.102924676 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.087550588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085599523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087191524 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104058344 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.089500901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084942772 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083029326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10655105 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088580458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088662277 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09951546 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088125796 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083823166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103599045 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088755812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084209013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083194728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.107843741 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088100869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100776253 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110022308 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085182652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088236371 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103339773 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092597345 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089471502 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095496533 seconds)
  done (took 7.421846771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09924414 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096168681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088397146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104865483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087332289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086983024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108577811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088932588 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088687741 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109676349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088756662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088480574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088363498 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104331388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088425897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088119535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109625126 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088361802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087528329 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105316844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088474778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092373365 seconds)
  done (took 2.850761097 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228572782 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094745092 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133774298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117028995 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107256484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117044507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092804014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092942787 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108342338 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097274398 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09606395 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111766621 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106129484 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095374635 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113363504 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09814694 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106715692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098193945 seconds)
  done (took 2.789440666 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100494712 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089469569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124468042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090543635 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089882856 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091269417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110996326 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108840329 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088446457 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.107060946 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097141177 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089550799 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105316904 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089227048 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089009637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105960422 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092050869 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089053728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111929782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094694093 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094025546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11305631 seconds)
  done (took 2.948794048 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102182815 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089256767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123299672 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093124342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088251889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.087185324 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112646081 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089983856 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093892919 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105838092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090204485 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087895133 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12052779 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090911279 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093820748 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106080183 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089938592 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090567653 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106665034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089107131 seconds)
  done (took 2.727503746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16439803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120582081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105217351 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113660719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121837332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105601306 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111180967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121800872 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106804722 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131517201 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10553156 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104254218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128398849 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111418777 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104297974 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129500889 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112800257 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129548769 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105621224 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104600269 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132545896 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105487871 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128224168 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105920004 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10449978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121473017 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106351972 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110165407 seconds)
  done (took 4.032888229 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088323033 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088941729 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087235441 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104714774 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088945446 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088288468 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.086606968 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104904138 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088425661 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088538392 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104766815 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088234768 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08906725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088354117 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104549049 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089810193 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089493196 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.103336768 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089131073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088535387 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087383396 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105295901 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089038616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087842124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087405021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106190665 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088779081 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0872514 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104998164 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088315286 seconds)
  done (took 3.564519629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100013474 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097914068 seconds)
  done (took 0.980829808 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09549868 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102126451 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087152405 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107721861 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096082014 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08813873 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113912246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094396792 seconds)
  done (took 1.569653949 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.136379435 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156030453 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093217407 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099492807 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.157272817 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.146606156 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129379667 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092545643 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104590485 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082696387 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.129907767 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099567445 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090087976 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085710796 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107946047 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096938448 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.089955094 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11704605 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09555713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090276436 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111458698 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095119008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091820627 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117319058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084014782 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091172248 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109930584 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100851504 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085748927 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108339226 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088997022 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089189075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110521854 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094447756 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089154824 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156239911 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095799341 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084848946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109558581 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093783756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120949373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.108328989 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091820308 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087072143 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110339847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093522449 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09281387 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108058462 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082494729 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084874833 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107532107 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085823379 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09006906 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089922307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107801959 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096524292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090995703 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103898037 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085804609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084059481 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105343422 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086645098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091439453 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.109787343 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090874108 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089328775 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105883602 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090688772 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090834519 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106652878 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090754247 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105033184 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108227207 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094448347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094724294 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109341012 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088570528 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094338849 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086518188 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109098116 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093838519 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116211791 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10947144 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0865345 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084277576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115203134 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092880754 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09261 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100418257 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098962088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091623898 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.107974733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083195401 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088566532 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102424033 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094800487 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082989571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089181864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.107933647 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095296472 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094306271 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105985893 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092018783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093216711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113291949 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088817589 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15035358 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087746171 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085579915 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092093069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113174393 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084822575 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088559368 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106725208 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087856638 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084947984 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111403557 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091184972 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090412013 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.11070586 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092224334 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091554418 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09036727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107705862 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086432951 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092130542 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116284016 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092806881 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092028813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108566054 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090797437 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089385419 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111438077 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087391245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094968437 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104281923 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09098427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093006692 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093532929 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107808449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085719906 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087832351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108590514 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089619001 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092703091 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108508627 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086289311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082096896 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109341982 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086535784 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091677177 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115290589 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087904643 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092930916 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085625858 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116363715 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087555775 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.093274841 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1101999 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095566097 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094039595 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100471734 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087723383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091746935 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110148027 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087719253 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09203589 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106959958 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096801878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083628544 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093725405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10070193 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08731755 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093788361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110150683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094234929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085785485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148801247 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10301395 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095706107 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106343523 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091064281 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094492011 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107293151 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094610281 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095245172 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093809533 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105763974 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088806505 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094344784 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104583828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092544997 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088454179 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10915328 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083881987 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091253527 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100491702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095582355 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092362466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093625472 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11375519 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092838203 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088824577 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116344144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087771267 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093700117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101211284 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095285806 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100319742 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11361812 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097183293 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091042942 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10554561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091729925 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098981334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091384278 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109218898 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091508907 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083302976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102255823 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097315228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09313923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113570421 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09113984 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092166702 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111069718 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089182041 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083611212 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092521856 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113025624 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086933762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091728038 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105878601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089931104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096870982 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102455138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088667432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092497472 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11294448 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092158738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089972751 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.112159737 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097262095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093412301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091601069 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107732121 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09916231 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087637634 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109367457 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087386473 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092918527 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110370595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092650247 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090276909 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.1050677 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087747591 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094077153 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113481395 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096748917 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088246923 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093371701 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115438255 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09614436 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087854077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11413996 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08707122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083284914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105171064 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083778688 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.092217604 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085110511 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113960116 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090322427 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088483088 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112652394 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092644672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08756591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114635695 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100854812 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083759615 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103398764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088998575 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089693028 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105614369 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088640655 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091103945 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109868505 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096188872 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093693433 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106479462 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091990364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095240426 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105016381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09730018 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096877809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095653263 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105348924 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094885411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087455053 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112784024 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086546738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089494001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108058358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092164434 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088607418 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108066915 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088658611 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084367272 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105917142 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097477081 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090200789 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095490766 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108603848 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090793759 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086926171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106148458 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.0987994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089856015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116024697 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091850545 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085132107 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101880916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096768653 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091576228 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094590509 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105935458 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094630242 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096547288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113080616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09167767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099205485 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117707426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096618188 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095489079 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101595071 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0912301 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095423476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109125899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093672133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092567116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085314537 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112348496 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09677283 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092035616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108918901 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085035415 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091856501 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11434762 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096547885 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095825013 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092420823 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110800825 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08668049 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094615647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115263748 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092779198 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097014653 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109816539 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09658104 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087837331 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.114083904 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09320959 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085943079 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08455323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107188525 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096682353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084875723 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.114138009 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095956645 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088312284 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108941979 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096933181 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088443643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112905831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097048098 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089195293 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099702589 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111395144 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089616362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09552645 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115520374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086005268 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089853485 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108719693 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098150825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089554532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.114700207 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09289649 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097458013 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09317866 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116342904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098369216 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095492832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104192248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.097882445 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094343163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112819708 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089818991 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089964395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085922883 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10986046 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098451254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087559704 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120703295 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098587375 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089343337 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109032862 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098268094 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090372901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11661286 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090699987 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093379239 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10399636 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094830373 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091885647 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.116252112 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089828406 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087059728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096340941 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115133958 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096329841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093255706 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117934055 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086390114 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085842219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.112691121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08955606 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100572771 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112238735 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090724724 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090476957 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09273071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111205689 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098551816 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085204662 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108074483 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093773937 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09278291 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109175585 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087710524 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094884378 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108581334 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093850937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090596624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105314248 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091388132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098418687 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089081943 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107834641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089137151 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097625198 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109889331 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089941622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085630668 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116175233 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094549716 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097474364 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107736979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093961969 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089119721 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112271111 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102153552 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09071852 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1105647 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091178944 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097101697 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095666289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105613212 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090807671 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100592181 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115816553 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094053782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094482866 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11103472 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100087644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097775509 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.112686096 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088032145 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087237842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089661099 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105711672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09485646 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097244694 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111165261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091177494 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095409816 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115686647 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095558492 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094586646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086465453 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119981757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090836636 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093753839 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105203343 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086316129 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094616793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117856745 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092643746 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09200213 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.112276943 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09576529 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086884347 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089289992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115984847 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097722821 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097919538 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111607636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092613485 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094126596 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120790683 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094398408 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091234212 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119239006 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099332919 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093866125 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110637612 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097559711 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097710706 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113293819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.099661286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090455589 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091178079 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118821047 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099317097 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100400883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111555958 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087002092 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095675296 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109613013 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087313214 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095110999 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11944539 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09962798 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093375932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108623555 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103430748 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096870587 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111397113 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091496732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090730224 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096300769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110203656 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097085044 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089284997 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119039338 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099277386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097755322 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120985633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089022411 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097222023 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114099082 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101127569 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093791821 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086836905 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107541252 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0972238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09950325 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.117619745 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097868163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096305034 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117486245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09505023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094057825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089360962 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122541436 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098334685 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.093053763 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114057093 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092269919 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093941138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.113674322 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099695318 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098731228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111676672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104092406 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099650293 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109742018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091712828 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093855693 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.094479146 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113972111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099068309 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089457654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106708564 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099419747 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099117939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111704323 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102737954 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099958149 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111107028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097226002 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100786705 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097694102 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.11433263 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094493016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095256607 seconds)
  done (took 59.637850892 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141819954 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101254836 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115358543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095613832 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111659627 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116156449 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097089175 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096983847 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115214498 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105499437 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096495149 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094037966 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129608661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114467159 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132115191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104153903 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113613326 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097079637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096375601 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095259196 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128593974 seconds)
  done (took 3.136525721 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113207936 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108907341 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12582942 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110699754 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100669634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127284233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107329602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125344957 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110317904 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10329399 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129119662 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105363539 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122542527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10401942 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103044883 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1230262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110779089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102149026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127272159 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106860681 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122567457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107258148 seconds)
  done (took 3.329979252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.124811014 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099747065 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091884207 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114270509 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09942962 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095435219 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116914149 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096474057 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103456754 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089709646 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107014388 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091252835 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093217101 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113758856 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090790082 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096042852 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.102533516 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.118510351 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099851041 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.094556395 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105738173 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096712748 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095829722 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104497479 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100973242 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100855624 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095112103 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.118034865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08751687 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09883082 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114834521 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090982893 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087078738 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086102344 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106037116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100719907 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098370084 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.114223577 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097234029 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086950739 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095619241 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.118601295 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088313923 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095893391 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.114067949 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090905176 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099287274 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09566328 seconds)
  done (took 5.663571759 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123994398 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160917821 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099436395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.132985037 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131957405 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104983512 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098170436 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134239802 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097787778 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120611938 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110119368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1089803 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122972653 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10325348 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100238098 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122640212 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102478537 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.334545653 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124278202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10021987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103082022 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121325332 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107730152 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12888068 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102624781 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099401882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119005294 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105012901 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106208309 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124198426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103553725 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103641351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128856796 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101527718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097676527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120004977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111440465 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.098919659 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120040865 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098183787 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09908703 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121870001 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101482567 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128627023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101810632 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101576604 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117711301 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098390212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108746071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118485342 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107879172 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108656129 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121579594 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100955414 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101689667 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127782115 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102220439 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097997996 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12121428 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10726773 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096276473 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120422838 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109697756 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.099208141 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123485794 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108941178 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120915062 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103226268 seconds)
  done (took 8.795441121 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129063517 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102167309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129841247 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111351027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101111711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122656558 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104755569 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103159217 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123429239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107654332 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120841116 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19189416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120603471 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10812636 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101844669 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123697013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103994874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102039131 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122818535 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103772749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102486269 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130809448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102902108 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129283489 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115841103 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10031006 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12324595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104668452 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110882342 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123964512 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114652908 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123254248 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106160296 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110007396 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134795267 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104910339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09749943 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123886856 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106168426 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102378146 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121634002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112132981 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101893443 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12143101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10447044 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101933042 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132171879 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114622039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12719032 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108340814 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103144613 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132639614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103441445 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123558254 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111913971 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.116314268 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13150875 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112154218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12424271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111955561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110681642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138000086 seconds)
  done (took 8.0216482 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096993529 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096541227 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09660441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116956373 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097769816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097057779 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096075657 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116899953 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097710323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096415505 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115727264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097555992 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097029818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096742594 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115873902 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097461462 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096803943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116379116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097849405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097318996 seconds)
  done (took 2.892181852 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10713952 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113989864 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119704717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106051142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099195909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124211775 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100542958 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099233037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098003019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12084186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107792782 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106007727 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121066517 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104613072 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12736981 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105023184 seconds)
  done (took 2.618009578 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118481109 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113751171 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184252489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101319646 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1209999 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106822033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099652893 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100753142 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119911008 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105308384 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103264852 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122370172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100625326 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100377975 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121298168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103209222 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098383034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.122742872 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101392131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.160221885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125432843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100657822 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.098607311 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125086319 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102122284 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102188192 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127260277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099590503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100133947 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120922445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102807424 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104730033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.119940829 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104811243 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099509223 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120685703 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099994925 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099923422 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.101176351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120019739 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101768175 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099427722 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120516856 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102717725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098030388 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121436596 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099583427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105338287 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.120702513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102166263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099574262 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10534914 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126658585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107344523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105084621 seconds)
  done (took 6.956523324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110180473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101120324 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130512853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098931147 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100025976 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099566329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12217225 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101978751 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098920975 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118473162 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101727078 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10135607 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120862712 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101118679 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099850932 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099956538 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119312033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100463462 seconds)
  done (took 2.790513084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104888128 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099868345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102210885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120729177 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099791988 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098009798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119877472 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09989014 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098496477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098163033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120452837 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100790726 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09755918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120718909 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100562903 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099075242 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121872979 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099027314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099162783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097649097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120189037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099686358 seconds)
  done (took 3.184653121 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110392583 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179035527 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104400398 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18800689 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096353405 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094044287 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125447952 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096041301 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10950771 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117099601 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096403254 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.093287176 seconds)
  done (took 2.277340071 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126281754 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134029376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121142007 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100362153 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108292375 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125593703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104455664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102756567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1322625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113622733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124424683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11229121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109877616 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132090048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108050479 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12850632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106227486 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103828762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099540595 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139786689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104450632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13270975 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104182649 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103191601 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124908742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113079199 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13095185 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116236113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104084039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132507352 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109319973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103804712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132693558 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114759327 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121271536 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11206391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10356654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141402551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107846667 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132599725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101857854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108062792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132732745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109473623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109697548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125977302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10867792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124103312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104648493 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12522187 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130297457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1120886 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128865854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11399015 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110373531 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14646359 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115087495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133260229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109423894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135061671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113670292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109050978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133664199 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114746316 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129825568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112509118 seconds)
  done (took 8.649402113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1421146 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100648041 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126591178 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115111855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110940877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128759764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104102801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125997185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105720778 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10137852 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167209773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104868191 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111686081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133253521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104230874 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126426142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105962111 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111029262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124020625 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125291079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104028538 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134555295 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111212988 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134004773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115148546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130614967 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105322291 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10522336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124953215 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105447103 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10995936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127141028 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112527174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101065048 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134476518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105596145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105792222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131730919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10527022 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129575611 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115765949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118515934 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127956312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105512575 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135985826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105603719 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10514106 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122558843 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107007655 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102006071 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138531409 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117309575 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137548636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113616664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105325926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128081543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106572808 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1050899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127192579 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110717514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112332664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126556275 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125825229 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126562594 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10767964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112513485 seconds)
  done (took 8.632823381 seconds)
done (took 162.854405 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.142798817 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.180073895 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141549818 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174382987 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091554456 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125609806 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145634481 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.141940199 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090128038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113713746 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091834537 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09257431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180919647 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092016896 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091115223 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091875995 seconds)
  done (took 2.85523 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190000516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.300682639 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104804622 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117635367 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097260461 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095418447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116368403 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0979231 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095083111 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122656564 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096444727 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091413332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123385637 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09234811 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095359412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095204954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12529658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095836798 seconds)
  done (took 3.034072733 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115734289 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138767835 seconds)
  done (took 1.136990173 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125353575 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.206170831 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276799075 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165861506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115694756 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136291714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14406358 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129214346 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.183244263 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129503525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108898806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093805279 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14321038 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101558663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112337808 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118647384 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123635211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132142741 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111274919 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09812773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139560688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100446154 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100643644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132326651 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.174627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130162035 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.100795738 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09880872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120655205 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110303972 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101873688 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1348762 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109673208 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173978482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099550983 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170813576 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102115308 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118485523 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110651893 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09651982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121248083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09957634 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108721902 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116571688 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100192821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102376188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.121522246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.098663735 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124049664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105265743 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102995258 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123549707 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.145848819 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125543592 seconds)
  done (took 7.659324487 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850737288 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137274371 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097148168 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.992784503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146749475 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11119831 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.844528179 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142339894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250030448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.871887768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11281169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108645877 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250931114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252536498 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.258046617 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372724723 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687280527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133965132 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125441073 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159528543 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105301964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143044511 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116659327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.509792259 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098245144 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09649228 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126914701 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110244232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172267704 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099182781 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123218692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170529598 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286745152 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202371926 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097051298 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118952235 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096920249 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18069817 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263811537 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210261899 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191177167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095194286 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096694369 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127555518 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117616538 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094223718 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175945954 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187169973 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186583962 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103729762 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110086983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130387268 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105723102 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174462765 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094427599 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350226207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376300246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097829244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10445229 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136225491 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260392217 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098570865 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22651315 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146308795 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20767881 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097355955 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823637082 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.178973154 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097614845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12591022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105113781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103492345 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12698737 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163184376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493890806 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108815409 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12450986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09732886 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225347538 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097835003 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11819983 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154209856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120189595 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1069803 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11084125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132994953 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182884106 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24197063 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132224153 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106263783 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125344872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111523151 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09805428 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229239216 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219130495 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171532303 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228820815 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106826107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176477722 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17865194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105984078 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185159075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105284788 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135435171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10638258 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216036055 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152266999 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102986351 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102803649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128629302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132588298 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123946743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108095633 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184030118 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.549166623 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.157832084 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118015164 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103466256 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106370932 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173679841 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104397081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254168121 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131289633 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179485818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106474457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095972434 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128335735 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.154172479 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132095508 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107440278 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127183408 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107422959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273981944 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214928058 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111130305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244730422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197915881 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104692478 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187623535 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105238716 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184088378 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129489792 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10729909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099218561 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81125085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134634461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105890683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102769011 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203153834 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097016192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122858247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099453679 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09528813 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80776791 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123112903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097098112 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100549743 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126279381 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107230526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105754217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125157168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.151562295 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25908653 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112656475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10442658 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121290679 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.171962875 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10115209 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099214523 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098007926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12228319 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107669687 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101215988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123879282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184565291 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149189284 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22147287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.644396097 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121511082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09914188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233006013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120030186 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319410854 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106858781 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225265729 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181369823 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095469755 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350749658 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182172399 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203046378 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10268106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187191447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096023916 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128222189 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.151453931 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121394262 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107320004 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.170023834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113408892 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13273839 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.269502708 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098872845 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24754015 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096279848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.184052277 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099263671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128781342 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320804623 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098087603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136640377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.152074331 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12569526 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100414447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.62691219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09955377 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13033437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107257401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226986702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179180967 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106510321 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129427856 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113294786 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176109101 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223776616 seconds)
  done (took 46.795551885 seconds)
done (took 62.360754537 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258341647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171344604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.274840973 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170532969 seconds)
  done (took 1.847440335 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239091019 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153037221 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.193548861 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117546345 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19930636 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.117718298 seconds)
  done (took 1.924667615 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.169041847 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163341632 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14028169 seconds)
  done (took 1.37484396 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193824157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210752428 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.317876459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.225229442 seconds)
  done (took 1.938008524 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.257007713 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114509057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120580719 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.200393062 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.212582148 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.170997088 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14220029 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166165563 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1279625 seconds)
  done (took 2.46252851 seconds)
done (took 10.452050214 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.290957643 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.382840302 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.353417392 seconds)
    (4/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.228450517 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.143392052 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.13408792 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199298694 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.297148521 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.366974602 seconds)
    (10/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.345946035 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160550835 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106558284 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.176360106 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.130451676 seconds)
    (15/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.171464375 seconds)
    (16/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.196982419 seconds)
    (17/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.217303124 seconds)
    (18/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.16402366 seconds)
    (19/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.270571193 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.272955926 seconds)
    (21/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124166781 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.268984644 seconds)
    (23/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.181578143 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195688623 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.126094023 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111913222 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106754717 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105774957 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.172650475 seconds)
    (30/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.19101535 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102381809 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123351094 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166253647 seconds)
    (34/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.186763265 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097177455 seconds)
    (36/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.247804112 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080881483 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.117516032 seconds)
    (39/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076623139 seconds)
    (40/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.163242194 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151879921 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116304894 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106056461 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.248136438 seconds)
    (45/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.133761412 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126185773 seconds)
    (47/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.082114112 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114619668 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.165448805 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133064892 seconds)
    (51/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.094642968 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.27265185 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.163783627 seconds)
    (54/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.130124239 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099967217 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102165174 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12235335 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1069723 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.17801811 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13857596 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169918288 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147074973 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183475515 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.206504392 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.134894658 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.075149312 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203049183 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082899306 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.075715296 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081335731 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130975917 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083639204 seconds)
    (73/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.135902808 seconds)
    (74/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113037507 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.144635333 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.134710374 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098221173 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196232493 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100403863 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096916064 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.162885392 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103041946 seconds)
    (83/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106217199 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077806788 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.107309024 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100227034 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117407349 seconds)
    (88/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.077647221 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105268863 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.102776588 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118708157 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140194247 seconds)
    (93/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.134009439 seconds)
    (94/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074675595 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.152891042 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076499941 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082305612 seconds)
    (98/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078459173 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099192599 seconds)
    (100/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.131279098 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098204064 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107636546 seconds)
    (103/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194130716 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098496076 seconds)
    (105/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.081131147 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.147949889 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125437475 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.165331505 seconds)
    (109/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.105418949 seconds)
    (110/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082184309 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100461106 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097858395 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122311262 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076266576 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096763505 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132128465 seconds)
    (117/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.168806658 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083182671 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105522546 seconds)
    (120/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192028965 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097883366 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11590363 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131559501 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106533491 seconds)
    (125/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096726865 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131377815 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.122708095 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082362923 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173168592 seconds)
    (130/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.144998009 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100515709 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075932615 seconds)
    (133/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.145508813 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120260432 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118934457 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.147744557 seconds)
    (137/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075985275 seconds)
    (138/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112797642 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075317219 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.103254446 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083161406 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075513162 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082579208 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.132277372 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080432819 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083628457 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081804896 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123318736 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101130757 seconds)
    (150/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078805413 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.127471214 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124446513 seconds)
    (153/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08403416 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082691285 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078153203 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081429733 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10046386 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079996161 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099606778 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082015813 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122169512 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079927022 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07633506 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.126262204 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130693822 seconds)
    (166/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082367495 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099504115 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078104121 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099306716 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122195687 seconds)
    (171/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082691791 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097513257 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123625731 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079420568 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106110841 seconds)
    (176/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078684117 seconds)
    (177/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130343521 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079689009 seconds)
    (179/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.107932256 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.105792016 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.099045255 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120201404 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078732466 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078782204 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12271071 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0837278 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077170024 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076356156 seconds)
    (189/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131103714 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079790486 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076970317 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075914361 seconds)
  done (took 25.886291728 seconds)
done (took 26.798239495 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.199436473 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124078735 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106550506 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105915041 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.194266405 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113592604 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.120730188 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132568438 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118088425 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106170922 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121578275 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119852138 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106997251 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199238322 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109417587 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123361209 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09882399 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116769935 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.145876216 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123600647 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195182966 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100368874 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115466504 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122063936 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.170981701 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123948422 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107500182 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106910548 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119418566 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.133081166 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107872266 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097724984 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147630113 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122178499 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098550925 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131737951 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099292771 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082832716 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.131835591 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11014948 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.11944332 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108198998 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.131460658 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.098961802 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108397602 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.132604386 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098949444 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10998081 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122411046 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108284431 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100586384 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147905186 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107882261 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097556043 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122130528 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101352474 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117492341 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099046612 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146812599 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09921472 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099509105 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123317471 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110061381 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098567944 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132265727 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100766629 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1100821 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133405723 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108075609 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101250077 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098530736 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13207872 seconds)
done (took 9.58423275 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104939688 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142131776 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.195476818 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.203679731 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127123306 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113070157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138934858 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122246831 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110968143 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143006271 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136862063 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15310522 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177295083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140539486 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113284628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.109251085 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133936142 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107662192 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.200306978 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12246413 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.122403791 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.139538181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124569672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138953842 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103790245 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123112906 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128508224 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111573382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102453277 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143121355 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.123999436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.101954849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129055865 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122150073 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119746854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.135958356 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114344954 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111167225 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128493069 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104352903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11046583 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143476717 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103895716 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.112825324 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137010775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119018112 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109462788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.140249152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105222258 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109520483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127889834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128958705 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1146906 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.144036493 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115118754 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114714085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141354041 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117731291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.105683473 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.139923925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105361594 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102816592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128192213 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125762008 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.105910764 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141101553 seconds)
  done (took 9.316289315 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122770792 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.131399699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138673898 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113516948 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107681452 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122036135 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098344789 seconds)
  done (took 1.785556061 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100967733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179355856 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203052314 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.202368152 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.175051788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.21317324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145799519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099885185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133089633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133566723 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180976511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.231203683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109601043 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.139161174 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180889425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124193786 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.182896847 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124488929 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113986693 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204976569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116288582 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128125389 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137182091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10019171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.199930904 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100905917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.254880972 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117453015 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108172714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.13831217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113145969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200113677 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175354181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.138446063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107078994 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.204520025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.173506318 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137632114 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.188454093 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.128814865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.174602005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139028688 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11478561 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112263286 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14060712 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16515549 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.142796724 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115330648 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112028935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208210042 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.107903095 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.202165988 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110527082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138638443 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111051388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114544735 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146407983 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114596954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208376214 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1169402 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.203658103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.178038225 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.202271272 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.203497762 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123424173 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205469964 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.172872173 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.137201251 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109255478 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113446843 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.206131414 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112560185 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.136200177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169081281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141407832 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.181244377 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.207522397 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109958527 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13624167 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104343568 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110956034 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.098934043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.196346382 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111654778 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137707231 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117242441 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110157451 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138665274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.103720719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145142579 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114750399 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.110953128 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.141499845 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114518762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114441158 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.208072127 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10930872 seconds)
  done (took 15.241277731 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102889847 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101433841 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.104595232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126080493 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.1028601 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.100765377 seconds)
  done (took 1.613031719 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137090707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113586877 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.146688338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116577488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156464303 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.208761222 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.212706599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107952106 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154415672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124002178 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.207773485 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.187432759 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.211508874 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11691611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.214535363 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.115934985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.216085585 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112680352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.147683767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112505112 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112641839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.142548978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112634773 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.200723802 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115363548 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11465227 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132938486 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122650425 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.119774843 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.135144874 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.137259711 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.114141095 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132415484 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109539234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216827472 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.106156908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109826286 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144459769 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116441262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.139534298 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.18979774 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135438275 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1218891 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.116569067 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135051183 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107875849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.116411556 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133353709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.189541428 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141459099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119465156 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.113702321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.14116194 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118027184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10604349 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13493648 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118783026 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.216256474 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117974318 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105746826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141115393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115328186 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132976181 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12029452 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115313061 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.140704447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108240094 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115427055 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13681531 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117219459 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11712757 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.139246295 seconds)
  done (took 10.9085716 seconds)
done (took 39.810998605 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.470896532 seconds)
  done (took 2.437660066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.871574552 seconds)
  done (took 1.842220683 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.561929808 seconds)
  done (took 18.563320291 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.415604986 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.458395216 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.111397508 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143397184 seconds)
  done (took 3.10115809 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.814969964 seconds)
  done (took 1.807951023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.275662416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255219102 seconds)
  done (took 1.508299439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.705154755 seconds)
  done (took 1.6903684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.487025151 seconds)
  done (took 2.462405485 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.277895672 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.236662867 seconds)
  done (took 1.505865522 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.596675293 seconds)
  done (took 1.585420765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.563872091 seconds)
  done (took 20.554918517 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251410585 seconds)
  done (took 1.247038755 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.280457311 seconds)
  done (took 1.273400498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.470624766 seconds)
  done (took 4.465148585 seconds)
done (took 65.02050002 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110936047 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.113447427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111413654 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.136043269 seconds)
  done (took 1.454330797 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119737771 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.114635323 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.117165425 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.138931299 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.119669105 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11404668 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.138842815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116378475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113783386 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.141192355 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.114950528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.113370722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.142053154 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114502882 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112080464 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.141097779 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.118667507 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.114143788 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139693236 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116516975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114069502 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13930254 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119280568 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11707333 seconds)
  done (took 3.945803721 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.1111669 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.104819462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106075877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129247119 seconds)
  done (took 1.448908545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.122805287 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126829103 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148380048 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12294759 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125183595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.149200449 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113490746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.110980613 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.139036598 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12313783 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12837467 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151290513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125712682 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115083362 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.150036211 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.10925748 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113755759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.150720788 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.120232907 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121080377 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.140876816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122174442 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117169207 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147256726 seconds)
  done (took 4.091021738 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.186425943 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124327115 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169776448 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157041859 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170803876 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112341497 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.140959814 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14493103 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120502545 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115046024 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142709817 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157344836 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144315745 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11720645 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113508824 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144057571 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125258916 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119102867 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184200307 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117544389 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145368393 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12700697 seconds)
  done (took 4.077287134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11762322 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.105561571 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101820895 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.131097981 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117170837 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.106962497 seconds)
  done (took 1.687465981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104510772 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099810981 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099228129 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.124690959 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.103878025 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099400419 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098066314 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.125724071 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099695804 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099274468 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.124856211 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.099899816 seconds)
  done (took 2.286390433 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.321957172 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105389719 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.130305947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107499993 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.109629266 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.101722302 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141813267 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104326507 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.258151542 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09942598 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.128036364 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.18837903 seconds)
  done (took 2.804501316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194615413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141416249 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247086494 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360008845 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180452487 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155281312 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286635289 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184065999 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.170328399 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158805377 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177051615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182197983 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148320355 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20444369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133948121 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180600653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155684226 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226927263 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137658628 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228297529 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177921752 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167641842 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208680027 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142360695 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160388534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155133464 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140852971 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124845413 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18528041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15669174 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190686011 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144647425 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161337485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207775954 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218366623 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193440384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26473983 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127607735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190961714 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208895535 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246213421 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136984346 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206283688 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147173766 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150098259 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177953352 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172953766 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17651658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154982489 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141189747 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199751734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170594885 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194911119 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130735235 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301554466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155436379 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.136549203 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186531055 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180739993 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21899475 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196598292 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119094063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197032753 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182863319 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231015501 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162351649 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158185489 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145464686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16124311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224445104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172961398 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181579088 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223117922 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126297082 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191868398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162275419 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174350434 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221663835 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163455158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115074581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171295903 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128676243 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14959278 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184958731 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11717024 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235530725 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155874175 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336572523 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177195937 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178349547 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153495846 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18181251 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15590053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169635575 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098682469 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136656371 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183515984 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176240598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124756977 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148467168 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163200963 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121869334 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172519883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119074203 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160657163 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157293988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155746386 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190379647 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126182674 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197747964 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14140029 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183523855 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187630349 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186360051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151568607 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128851107 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23752326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163939868 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157438038 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167871396 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216671159 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14546022 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156826158 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155394914 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214018788 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137028221 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217667714 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159346944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13182333 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131556094 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192588659 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17809142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149504947 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121660913 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185700367 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209396821 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12218972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134147516 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201209959 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128216799 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148400476 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132282027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130333022 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165514408 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143019473 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.160788102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147218766 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186837208 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158891979 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176359047 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128970307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192114416 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12648587 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189206431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144163816 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.114772955 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193621469 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217183231 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125016139 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201584501 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156622307 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207740393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19312359 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125955732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203532991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124803833 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11660067 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181226533 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164743601 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18505435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208101259 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177721726 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186183684 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184258744 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142746773 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188977215 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177160449 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177937112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13960838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194308964 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160649311 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144251607 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119666578 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122313514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159907252 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124858396 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131222109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195340144 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184892676 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200965374 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161194139 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159474187 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184774631 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.11924119 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180808901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195030559 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134115566 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20895211 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182746897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197964053 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135414827 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183280086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116485303 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147818561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130615677 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156117094 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16090771 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130677475 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164106896 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183807446 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192498678 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141381975 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215941187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183802777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22081039 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118567889 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156211611 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190479313 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160505926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205683685 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128605419 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180794479 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18474505 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163620255 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184261631 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188495537 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197002176 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187275313 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.186533956 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126079019 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168416428 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155498474 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131671564 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185683621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141122219 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154313929 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145786703 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160379827 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13569321 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204807357 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136990903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199825686 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151227616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190776468 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120823508 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164241293 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170418641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16741985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102431515 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189990313 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186824396 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170469569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147950052 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193477026 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124694504 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342275022 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177902187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195025311 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130101459 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161308843 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164706923 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182875128 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182470016 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1787667 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161101664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198484112 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190545963 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138415524 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153093428 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144800504 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143932162 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163515582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144999445 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184842414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137438629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203836267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159587436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165049079 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197353942 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141253844 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143586155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162740161 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2446445 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161088904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196022275 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.158533718 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187811027 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175873989 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148116917 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121806073 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126480084 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20643421 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125111007 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197982326 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190108292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205316247 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16958626 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185165842 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135162686 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121468517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189716357 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141552142 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210725889 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157686101 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134722467 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210432723 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124726795 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125753549 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182704838 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290879546 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142787225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191640171 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104571359 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284131241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127076225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127229713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185477606 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163307741 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156035372 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178535943 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195394453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136765183 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156326666 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157850092 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202713687 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181842365 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186190644 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19276631 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14108634 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181990678 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15423638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1949805 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140414233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.168544229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154312514 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213628827 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174807619 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153794567 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162572437 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190739808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165310358 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192624459 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133926254 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205645394 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124073261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185382206 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132628602 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120280894 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183909107 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19011641 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126191367 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196880454 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164146669 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153269192 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124802951 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140804392 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188421646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133686914 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153090085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175658701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152865527 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174353795 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227949686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125494319 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18982995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141119853 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153627202 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135137357 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13682366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155663406 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16968664 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20035944 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127838085 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197586044 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159350411 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184897849 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150003546 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166379516 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.329279587 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122947777 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213951758 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144145607 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218211799 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172679424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169099138 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19139846 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144928389 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184574456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14099813 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.246055404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156705334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.189855286 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126822549 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164352622 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134934538 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128128788 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174731894 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161969963 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164530993 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131956308 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.188154985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140763903 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.167860788 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137317722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218631707 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146691846 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205334273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180002776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161475579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168670741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194924079 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123243283 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187447384 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163685362 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168343282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144295011 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.158071666 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133328044 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233962522 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122140295 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179767842 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168802594 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190592864 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165879149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.158099342 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172261242 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162807838 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170287085 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122373128 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176268633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165951095 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158713894 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122349081 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1923939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151756818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.188367325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136145752 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173107791 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213179464 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119772017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157628856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267602357 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17942657 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215262601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133097368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131005008 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168460866 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151375675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.187342441 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164381984 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.155034361 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125834587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139842128 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180727761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137916044 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19060068 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165566295 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182956411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20543825 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131997351 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249551538 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167739482 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164726973 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140689498 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124703736 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134509885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158009969 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136769384 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206698184 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234454352 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157702863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170102899 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130726031 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121387994 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154089188 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159263447 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173182485 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163032039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169537132 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101357449 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13486639 seconds)
  done (took 83.231283376 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157464804 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148202319 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164343284 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216908273 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189785183 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.283620087 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.223746376 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239314248 seconds)
  done (took 2.713600035 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.115583711 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154222516 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136768067 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140006971 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.105664533 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.4333109 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.12662329 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.142297337 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.15604492 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146721471 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13008461 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.493430487 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.110679279 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144000133 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.141454052 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.105313434 seconds)
  done (took 3.862135331 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.615378175 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535318975 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.924868851 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285434378 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253406464 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195279886 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.733257576 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192529034 seconds)
  done (took 11.828136369 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149474388 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143183146 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.406228394 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.740921534 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199625509 seconds)
  done (took 2.733939249 seconds)
done (took 127.150061646 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120309825 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.117989732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118405428 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.147925192 seconds)
  done (took 1.588166405 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.170735047 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087852464 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.089702569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.114576699 seconds)
  done (took 1.555358666 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41955948 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.087939057 seconds)
  done (took 1.627643111 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14242984 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134679052 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.160273429 seconds)
  done (took 1.542068944 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135341521 seconds)
  done (took 1.228967282 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118050803 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110941576 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.228736596 seconds)
  done (took 1.555931381 seconds)
done (took 10.196873406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115304188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921921573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.427745713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127853396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.705014876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.421520662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418417905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169484596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169068305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132651908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12692232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684436801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.428515627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.866956047 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.384306594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.89614512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689807754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107803777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.139219685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109004967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.392314273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132439188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107239023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107401859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711765754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41665581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104784006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.907285762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106842605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.108920758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.420957143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106850788 seconds)
  done (took 20.750364243 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113255316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160647789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141187643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108159273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109311628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135029787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118783338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11764325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197194392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105338292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154916989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106595237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111633717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133645877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.131798903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105567259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136495561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110200041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.113827881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.133020616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129209452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105699078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10689917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.135915459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.106366499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127359921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134234492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118405488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105224554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137096165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.110923393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105905947 seconds)
  done (took 5.071525212 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154174134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170243611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142742817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143274023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180908488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.108823018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217370858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143978293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198036262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110225965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127848414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132200809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147237101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.106749183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159459494 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106282485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109169369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.135513879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11406334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107757494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.155764565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106304523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107435821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.136874515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107629914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128613158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135224813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118549501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106230713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137879959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111931748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107061556 seconds)
  done (took 5.38404071 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122007995 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.121383833 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.127599066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158391068 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116846951 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119893669 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149057817 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117226241 seconds)
  done (took 2.143330777 seconds)
done (took 34.447388654 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132274125 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.124984438 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126973269 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150812734 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18116316 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144162619 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124356463 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113609685 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148444821 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.127524416 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106682244 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114033854 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155202851 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118445827 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.212085986 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122042315 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.216541061 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184944493 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142609651 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123414877 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116371167 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.217823039 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118660475 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114456043 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.215957818 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110460913 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.207304635 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117904973 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.116674927 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.137607883 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184714836 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148696378 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114562146 seconds)
  done (took 5.888974433 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.200145086 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116527581 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.145362882 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116173268 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116072117 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143044683 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.203234309 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.143718043 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11603848 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.113895763 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.114599911 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.215851827 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121126913 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139310029 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117678424 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106350431 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.231264774 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117386798 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.106372368 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.090240779 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.140772875 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11520072 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.244318615 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111185386 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.113815923 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.143468584 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120466665 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119102375 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117150278 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.146107391 seconds)
  done (took 5.262182802 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12175688 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128195825 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132194573 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209537434 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143286661 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.155479466 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135148862 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129051528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166622894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.109662539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12369715 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.172560952 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12622301 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.118559396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141908353 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.127947035 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130468051 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.13812828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.117864683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126470636 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.157064224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126941132 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13244136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14568417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109132127 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116501876 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.117854017 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154766488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117819438 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123024021 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140979476 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113917459 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.110690334 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.171605546 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111721896 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122268557 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164099995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122647934 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.121980299 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16940208 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114203143 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110181132 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164539227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161977251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10975916 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.151896903 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121945563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122496497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.136349981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128187046 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150486385 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.138495981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130665115 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.107884402 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137046426 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119576681 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11007996 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.140696384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126244774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.111900201 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133083568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.146259916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120744566 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11125742 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.149833794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109653535 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108608434 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.141358471 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137176867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116477183 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.173585034 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111022507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120227251 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.121184627 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.149987005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121191241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10832054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150240387 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120725356 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.114602938 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15094811 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113094614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112178433 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.153915043 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131264528 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123616859 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150317802 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12460764 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112055486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.138897823 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128707439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111267033 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.114095186 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.151643483 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112084037 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113424054 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.151498666 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122778468 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106965218 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163953939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11584425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109045624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.161719255 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114026778 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115640636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119741299 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.180427083 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109822476 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.119263652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152101656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110155368 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117998897 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.142242046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110305768 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.126145254 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.153888056 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118885418 seconds)
  done (took 16.447374247 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.307796341 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.265764032 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208804998 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.237732554 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.121562799 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.232173987 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.291638407 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.297555278 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11024505 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177456039 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162018857 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.266912214 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.109773721 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168937984 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.298369264 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.350884688 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.13724571 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178197336 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.14410731 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155598429 seconds)
  done (took 5.353014016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130519073 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.143667707 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.161654391 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138055186 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120404781 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155617506 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.110272774 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130557905 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152136359 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121083387 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.111966577 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155227699 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123960394 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.125753719 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.154159052 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.142654573 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.116780947 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.143987972 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133623475 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114624881 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128111381 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.135505561 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118881263 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161309539 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129743168 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.120734192 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.13799931 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11632712 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116901812 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.146851878 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116340776 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.127537306 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146829049 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105568227 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122170606 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12431702 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145977552 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113285141 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114853852 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.140815098 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.125953185 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122951763 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.117210931 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124538582 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130205944 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108056545 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124581013 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.151332855 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105637646 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128523205 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.151863722 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125459451 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.116790315 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.160517787 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119187266 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.125771084 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.150829471 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126338182 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115324759 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.136423912 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110172971 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114167112 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118112219 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154524103 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123242643 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.128811972 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.155467486 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.110860415 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.114804397 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.142634903 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115836333 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.123529593 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159996072 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120257098 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.116355759 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.151121709 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119697126 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092137047 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.119384662 seconds)
  done (took 11.349692799 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135478298 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121985753 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.127583017 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.173184617 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123511989 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116267204 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151998613 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.130267032 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124279041 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159589695 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125840502 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.123338672 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16199277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121532883 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120880958 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.155552065 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124472236 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147236991 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158869957 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13715383 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124848446 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146047719 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124585419 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122034152 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168987279 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123751544 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.136421279 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155301567 seconds)
  done (took 4.987049786 seconds)
done (took 50.399614761 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.251982811 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.456714512 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.235351765 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.234325945 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.255642086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25415382 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233677368 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.248317429 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.621382829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.20129945 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.23470342 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.232783037 seconds)
done (took 28.593309264 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.289852128 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.785446165 seconds)
    (2/2) benchmarking "String"...
    done (took 1.523876252 seconds)
  done (took 4.433461075 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.223126765 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.224516223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479378866 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.222798977 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.240104112 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.224236941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.224266019 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.229466627 seconds)
  done (took 15.970214923 seconds)
done (took 26.044836774 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.277257186 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.412140267 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.465813665 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.238342421 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.234583648 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.235418674 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.227163699 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.249232701 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.240458236 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.236129216 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.627159255 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.489050458 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.242751032 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.599302576 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.2364661 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.255769825 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.226058886 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.469859518 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.230194204 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.25376083 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.203608173 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.205073488 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.257652809 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.229079833 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.233697531 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.242156482 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.272820773 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.227886724 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.415198869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.259228826 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259241687 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.229435825 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.267135687 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.232331199 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.237661765 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234652116 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.421102907 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.237211406 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.210572153 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.247190636 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.422817633 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.245774473 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.231532111 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.229122896 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.233011356 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275665909 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.21452125 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.358754855 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.252960139 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.228895665 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.242374305 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.590017127 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.230697306 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.240478947 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.244392142 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.456024511 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.241055278 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.286534267 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.253779816 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.239010439 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.233070054 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.228171483 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.237212529 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.246701696 seconds)
  done (took 145.359861327 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.227897673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.229388745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.229218555 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.248710679 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.234041959 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.229375205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.230162274 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.23052297 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.230068713 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.253284583 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.234349852 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.230760152 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.234489148 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.255276748 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240128751 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.246371588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.234230135 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.236240271 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24099419 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.229620141 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.238789337 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.234603036 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.246042974 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.230900693 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.27328219 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.304160906 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.26208792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.263958924 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.244465192 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.230963887 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.26987724 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.238920765 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838392888 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.109060782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.241179676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.249677747 seconds)
  done (took 81.333360056 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.230722797 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.230587518 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232317074 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.263559578 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.230817516 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797891974 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798229301 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.191206633 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.650892012 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.567730299 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467627383 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.234041038 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320412175 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.242371289 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.233034007 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248030654 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257588823 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.236959622 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.232750564 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79936244 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.247678248 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.466220919 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.411782992 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.247213449 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264248348 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.62233257 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232086826 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264756051 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.562696635 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.282110339 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232529442 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576403473 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.549420033 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346398748 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23584582 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265903224 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234421419 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.514147716 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.23534054 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233360264 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.234324001 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236655736 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872709042 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239033838 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.233230052 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801689985 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176301884 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234438594 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.234378637 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233858787 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.128455737 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.908307335 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.238108338 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.233222077 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235357005 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.233656523 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233920031 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.26680518 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.15794624 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.332057308 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235824863 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.237074375 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268521141 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.235354332 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.460833561 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238350906 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.573756033 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.29970563 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.452977469 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804013048 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239415209 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329719542 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352159189 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.235672735 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.23576614 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.236612865 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235865083 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.237065415 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.347364951 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235284043 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.916173 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.411851504 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.25396694 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.574447928 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.335977472 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.236169652 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572706854 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.241082723 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.236051608 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935556818 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331147493 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.236443849 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.235583409 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235834149 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.92050063 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804067294 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472374801 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.239153468 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.788764514 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.239619687 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.092203858 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.791680317 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88034103 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.239818194 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.237437236 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347573324 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.412916804 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.253087655 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.236862499 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.577962352 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.241499543 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295222428 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.237023596 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.638420393 seconds)
  done (took 377.28509092 seconds)
done (took 605.106384986 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.07386697 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.025451032 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.179310234 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.036871188 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.021613094 seconds)
  done (took 11.472818292 seconds)
done (took 12.611477868 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428512168 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435032049 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302730786 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433302474 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274003414 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447569107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420706264 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25929712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347230844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.321238532 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348137423 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291218695 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272232567 seconds)
  done (took 18.718015545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525617342 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.250374227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305873272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497155911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284837991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513179491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.547496009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249891086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38606604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283973558 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262176975 seconds)
  done (took 18.246058437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515816156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.250795169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307166991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502861745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284974673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517041489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559692646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250278931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403354279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264046557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262949624 seconds)
  done (took 18.258245837 seconds)
done (took 56.360891154 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278834741 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.341375106 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.276197771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.259219958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.258842615 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.257735627 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.259898592 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.257612277 seconds)
  done (took 11.329738052 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.257861427 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256960376 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.255445383 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.255892105 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.256053827 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25584642 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.256990085 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.255983114 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.255689297 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.257007561 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.258371248 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.256900056 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.256876848 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.25798379 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258162085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.258246105 seconds)
  done (took 21.251157057 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.260224586 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.257420072 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.256915757 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.257776064 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.257530073 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.261038871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.257923917 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.257764365 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.257352872 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.257747604 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.257968923 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25782617 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.258874453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.257589876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.258162787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.259613073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256955307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257740233 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.262000282 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.258028878 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.259160432 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.25743051 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.258195049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.258735663 seconds)
  done (took 31.342009535 seconds)
done (took 65.06392685 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.243331076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.258508903 seconds)
  done (took 5.644508207 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.31719094 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.319314929 seconds)
  done (took 3.780216853 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.259661573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.261083976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.260564044 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.259268449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.261351669 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.259616965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.259337054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.259964574 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.2595734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.260527377 seconds)
  done (took 13.743557169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.260833273 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.260720249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.260404149 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.26130368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.259169306 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.260234369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.260532457 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.261715363 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.259780377 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.260739722 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.262126161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.261373816 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.261187634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.260678231 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.260255884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260157845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.260638922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.261955691 seconds)
  done (took 23.835332397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273229 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278776759 seconds)
  done (took 3.69577529 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.389157904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.302423329 seconds)
    (3/7) benchmarking "month"...
    done (took 1.367206872 seconds)
    (4/7) benchmarking "year"...
    done (took 1.359282937 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.302669899 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.282524339 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.303319204 seconds)
  done (took 10.450454779 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.262291897 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.481584829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.607408403 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.870584643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.263347919 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.265872012 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.145143108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.266284633 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.268340411 seconds)
  done (took 14.574374014 seconds)
done (took 76.866246468 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.248755177 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.333722195 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.273717747 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.26770979 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.556203959 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.263692093 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.252295017 seconds)
done (took 16.341863663 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.23153315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.240134807 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.226118883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.262306371 seconds)
  done (took 10.105865924 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25633506 seconds)
    (2/2) benchmarking "read"...
    done (took 1.574406352 seconds)
  done (took 4.977288674 seconds)
done (took 16.230276521 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263336044 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26171402 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.262753995 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.26447269 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.264580616 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.263967852 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.264092289 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.263996393 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.264428737 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.263203787 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.26420045 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.264081616 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.264644848 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.263958059 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264356188 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264136843 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26239382 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262783285 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.262192662 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262215742 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265156463 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261953287 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.265033447 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.264041036 seconds)
  done (took 31.473518384 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.26609191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.264041858 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.265278163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.265884244 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.263671075 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.264302304 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.2644484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.264722154 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.265613509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.264607584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264938717 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.265683802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.264981898 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26465477 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26417437 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.264322202 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.264451958 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264941258 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26508645 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.265198516 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.265489255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264789007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.265296197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264431372 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.265839194 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265147643 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.266410552 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.266216526 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266070824 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.265779297 seconds)
  done (took 39.100349425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.268003294 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.265341714 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.26838061 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.266686475 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.265740649 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.266163994 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265039603 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.265978703 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.265256106 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.268778461 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.266017863 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266405732 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.265954196 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.267196609 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.267880121 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266742102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.268437603 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.266244349 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.267328338 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.268058597 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.267026432 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.265973171 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.26605196 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.266750494 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.268724563 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.268168171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.267347003 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.268628168 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.267816069 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.267501937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268857908 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.269011988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.269265609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.266269665 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.268961536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.268670686 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269903094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.270125455 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.268209334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.269520797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.267078929 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267526842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.270256669 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.26775073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.267958084 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.269284624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.268517967 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.268945086 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.269967661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.268170048 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.269493792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.269566653 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.269416619 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.269493169 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.269278691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.26906612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.269960944 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.269653058 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268910389 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.269335184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2679897 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.269111316 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.268348008 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.268069012 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.271377366 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268319069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.271093301 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.269245783 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.269869779 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.269938344 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.270767528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.27053381 seconds)
  done (took 92.46310568 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.271046192 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270134957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270245776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.271906638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269563332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270513853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268333897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270547394 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269216649 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270403383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271950222 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270211656 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269114985 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270997784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270811747 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269735316 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272505962 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271450786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.271040011 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271452052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269492176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270102691 seconds)
  done (took 29.103071989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271415806 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272844542 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.271564791 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273114398 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276030061 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272049765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271822424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271810124 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272500315 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272280224 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271846644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273051199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273724546 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273804202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271946631 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273586377 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271531217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274290176 seconds)
  done (took 24.062416928 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.272767253 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.273206151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.272376075 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.271547309 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.272063324 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.274027205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272541477 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.273686312 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.273082925 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.272068182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27267727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272412653 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.273012888 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274263372 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273659971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.272788263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.273333392 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273393592 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274143099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274766674 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274050764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27239856 seconds)
  done (took 29.163912741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274337126 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273208303 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274525558 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274381658 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272838544 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274618943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.275663191 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.273233638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.276426392 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.272175177 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27487183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.273589803 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.276037655 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274833453 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.276718236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2748684 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273209502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274652293 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275186241 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273847716 seconds)
  done (took 26.646194918 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27547422 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273949729 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276785178 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275147889 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276394551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273866403 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275628547 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273911223 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280883365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275345883 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275711043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275112238 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277096397 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276482684 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276999818 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277828986 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276120664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277671585 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276285372 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276953105 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276848105 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276220633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276487352 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277394348 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276949343 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276997668 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276981106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277180084 seconds)
  done (took 36.897012618 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27799073 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276988937 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.277099438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.276158463 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.276635522 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.277154004 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.276420714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.277520848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277888666 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2775043 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276249647 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.27804746 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27800616 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.277717788 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277139129 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.277770182 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278100871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.277084028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278041627 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27803132 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.277666724 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277846406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.278855031 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277673939 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278463956 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.277433073 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278205526 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277619637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278703549 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27892708 seconds)
  done (took 39.487285101 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.297399748 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296492683 seconds)
  done (took 3.753481501 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.279284139 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279534059 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.279785835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.277883564 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.277903269 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278107196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278715721 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278739568 seconds)
  done (took 11.389206064 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.269129385 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.280517802 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.278736621 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.27794641 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.279893875 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269479346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279382416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284910356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.272890865 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.271201801 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.273336281 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273930006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.276531002 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275556565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.275147241 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276343165 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.28455865 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.28047937 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.284212352 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282182517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281006482 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276347178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277705472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.283680234 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.273437638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281197737 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280999351 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.285164267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27347925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.281164487 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.279588292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.284360389 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.282685518 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.282889643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.282066803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.28397631 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283746431 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281428245 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.282854285 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288251142 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283184499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.282335253 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.278121343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.279793057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280315679 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.288990608 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.284252862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.282626814 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.27388997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.277481348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.284877427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274830896 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286025821 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27944007 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281294276 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286563591 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291385526 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.276743042 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.277534353 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.283497734 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290559827 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285111942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283892183 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287975119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282161196 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2839823 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289204079 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290841749 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.285104704 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.284927726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284638323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293990976 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.289893248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.289216509 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28557193 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.285915603 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279059896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289132427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285619738 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288644288 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.291300086 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286926323 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283114218 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284220047 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.280142769 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.290024915 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28555625 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.287361694 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278895405 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289102664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294367876 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284905407 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276967557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280611717 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.282763436 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.289545178 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.277745829 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282365488 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288170996 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.286213109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286786278 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279491273 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.285176117 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292054687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289329146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.288169587 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.294217225 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28030097 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.292729879 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.294699957 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28746516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.27975537 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.284625599 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.291408462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281918502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286094952 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.29257314 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.283691467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292852281 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.288570746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284752085 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292062195 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.293432077 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.28898105 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.283228799 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.292874493 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288688489 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.284445393 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.294839814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.289017282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.287411913 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.284766744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292971159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.281167489 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292119182 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283164318 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.293240007 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.288539586 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.289452363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.284917196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.288996929 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.285861126 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.289022735 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.291464463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295916405 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.285458205 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.296247991 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.290105816 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2866613 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.288328059 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.294901817 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289261382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.283702069 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.29350853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.281885154 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291940016 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.284170744 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292400923 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290685016 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.292109352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288707789 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.282263304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287467099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.295303799 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.289904553 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.289707771 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.293626385 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.292296644 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.291633652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.28401573 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.294014223 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.282552107 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.286695682 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.293761375 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.290891254 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.290180474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.290279651 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297074177 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291026063 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292002986 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.283624074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.289713424 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.297376188 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.292907195 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.300931512 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292970389 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.291697682 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.286280504 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.287542433 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295005789 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.285230427 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.297319935 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296038728 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299132603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.287653849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.293449582 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.285403515 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.294418672 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.293186066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.300002528 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.292641469 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292632966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284936308 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295760719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.287461333 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.29630286 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.285025598 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294576942 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.293250887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.29355777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294409653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286078149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291071595 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.296346335 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293046156 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293804548 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.28678144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.295993734 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.28491461 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.289934308 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.296236858 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.294040527 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.29584614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303133302 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291557494 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297053924 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.294701711 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.28942966 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.29507227 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292293244 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.293456142 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298487873 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.297071695 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.289466187 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299342556 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296521001 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.289505993 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29464239 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.303161875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.294451229 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.288393551 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297411237 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.295573803 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.29528364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.296170979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288968668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29780111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.298368857 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.304569258 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.29111045 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.298107519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.290084273 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.299195965 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.29280377 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.296736541 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.296923193 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298439391 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304469353 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.296469765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289958242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.300002634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.296966086 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297593795 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289749988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.299615889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296754708 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.297817353 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.295490764 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.293718041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.299248087 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.289291047 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.298543716 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.290649437 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30563109 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.312439716 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300539497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.300548537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.299197099 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298934025 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.301406043 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.29129578 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292082653 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293755816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.294677998 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.29408765 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.301955311 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292346597 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.302664812 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295698413 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.299624371 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.299035043 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.298084496 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.292906842 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.301615217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.298511443 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.299708917 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.291424159 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.301510927 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.294008916 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300548515 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.300576086 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.295382304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30569074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303237314 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.297834273 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.296410373 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.296075162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.292395646 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.296479761 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.305327826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.294199445 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.30374271 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294251336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.297647295 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.29581793 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303819913 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.309515617 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.293543873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.304946481 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.300438569 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.292582084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.294937149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.302203166 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304025795 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.312618523 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.293935972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303020784 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301821172 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.301957954 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.30203385 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.301229055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301979444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.300359272 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305493817 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.305664218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.296572009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304858251 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.311030492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.302492501 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.302293384 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.293494404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.305530108 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.313062387 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.297547438 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.301068057 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29939456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.303343452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.303814651 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.303571209 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.303215184 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.303318813 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.305598569 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308271934 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305186354 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.30403968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.308387405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314914665 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310104623 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.31473061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.298406201 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.309101834 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.304662174 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.298695811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.300196857 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.299708901 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.309178499 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.297508425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308153282 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.303856354 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.299402109 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.30553132 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.312541541 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.297763233 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302436198 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312643448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.297537096 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30848862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.305891873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298059321 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.307577665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.306237471 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.298898486 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.301649057 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300440111 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308875535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301277395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.309813868 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29912156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310426261 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.306910467 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.305404953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306375316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.306176225 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.30018157 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.309515355 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306411127 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.317303772 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.302037801 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306727398 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.302773623 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.311210498 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.318657968 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.303643008 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.312094743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.307385846 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.300452346 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.305193798 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.311658413 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301961683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310922219 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.300861863 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302060044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30083111 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.308440806 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.312415017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.310586345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.300427284 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.303143613 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310754815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.308415496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309153307 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.303243902 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.314795202 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.301766987 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.30331991 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.310385698 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.302898019 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313819483 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302284835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306041352 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306052381 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.31238833 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.30818144 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31072134 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.300802558 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.304276185 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.31531945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.312818752 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.305879569 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.3037812 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.310518636 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.303957733 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306328815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.307911841 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.303984389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.307043624 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.313717404 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.304242962 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.305951551 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304131753 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311845929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.313856021 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.314680135 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.30323018 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31641356 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.320218899 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.317845155 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.305037174 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.307413475 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308543679 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.313345886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.311513601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.306179157 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319382635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.317170159 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314584959 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312237293 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.313017149 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.304612015 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313673372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313248629 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.3074883 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.317231601 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.307820749 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319796378 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313262382 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.313081285 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.303624648 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.305488445 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307797761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.307884931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.314383319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311088493 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.315919192 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.311204773 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317934917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313798923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.311509881 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.313347311 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.305001157 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314969125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.306648985 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.313643009 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.315588499 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.306650926 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.314985112 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.312857568 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307723338 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.3119809 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.318182749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.313534802 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.307354353 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.311413406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.320389703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325226764 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315343716 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310053425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.312318681 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.318531344 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315496871 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.315539056 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.30922641 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323713941 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.329144141 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310666876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.312730791 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317939212 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.326934754 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.31597827 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.317407182 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.314197603 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.315411655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.318605062 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.31682389 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32010284 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323535407 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311556208 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.319089613 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.31038318 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313198218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.3195718 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327186152 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.317830371 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.312812881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.324601265 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328517901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313138256 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329341699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.32558301 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.317426162 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.323206895 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310365659 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.318641051 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.313192062 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.322904977 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.318089295 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31805103 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.319636618 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.310326109 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319093882 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.325177069 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.327619134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.319257477 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.309219594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.313365212 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.320008822 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.317669616 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.319772414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.318957544 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317918279 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.318560601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.311868521 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330343445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.332807844 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.324297757 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.319290764 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.319804385 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.318980579 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.323018574 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314784902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.322540542 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.318964774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.320540391 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.31819908 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328912567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.320898012 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.312498532 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.31636034 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315161882 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.322712195 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.328162357 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338905576 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.32308464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.32366642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322617204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.320288962 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31647367 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324537916 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.321981411 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.315331858 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.31609697 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322542065 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.321676597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.321928307 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.313783235 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.325538345 seconds)
  done (took 775.847254008 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320602159 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319972437 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321100069 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320538728 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319928204 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321360339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32130311 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.320425889 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.32106865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321643077 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321092445 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322530574 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321842296 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322491472 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321321614 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322153032 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321875343 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323683903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.32404179 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321184941 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322445644 seconds)
  done (took 28.949573376 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.323043895 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.321894774 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323032256 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323732657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321355076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.322905577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.321703626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323167365 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323884309 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323049722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323910828 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323556444 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.324829866 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.322642904 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323673292 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323627106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323046289 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321934579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.324362609 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322590682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325214076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.323554297 seconds)
  done (took 30.308483251 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.323001777 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.322796849 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.318161355 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.327795135 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.323917511 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.323760276 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.324993736 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.326096206 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.325895476 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.317813743 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.318803416 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.319584839 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.319744119 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.330133229 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.321969982 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.331093917 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.325156218 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.325568739 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.324269512 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.325983711 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.328251661 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.337400588 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.325542896 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.316695695 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.327814768 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.326206238 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.326197808 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.326448848 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.315738565 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.328066366 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.325650955 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.317763679 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.327267118 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.327338987 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.319240622 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.327843908 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.325883999 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.326344909 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.325998836 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.323403428 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.334031568 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.326026336 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.328669162 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.337477832 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.325894519 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.31866218 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.329938644 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.326354981 seconds)
  done (took 64.808254072 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.325795775 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.326720307 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.325918851 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32614209 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.326661594 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.32694771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.328204476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.327010345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.327188841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.327215616 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.326465576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.328571566 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327098129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.329056339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.3276018 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.328478935 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326099086 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32643031 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.327980161 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326591911 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.32747431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.32870134 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.328046892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.328409231 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.327684465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.327912694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.328486272 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.328215995 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.32760639 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.327686144 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.329701329 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.328805938 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.32842768 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.330943321 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.328701161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.330893286 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.328728273 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.327644171 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330516535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.329390829 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.328079906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330068754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.329331937 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.330489038 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.33216725 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.329386031 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.331290854 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.332893887 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.330255907 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.330165914 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.331258623 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.330173119 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.330561462 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.331094732 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331424724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.331561046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.33005281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.330421092 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.331661189 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.330602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.33303542 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.332352043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.33330172 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.33076844 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.332548637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.330560773 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.331906842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.33130625 seconds)
  done (took 91.588349366 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333348845 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.332757211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332746077 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333165873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332167006 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.335583362 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334472168 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.332731714 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.333721362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333474804 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332608231 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.333313707 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.332742593 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.332783114 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33330507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334343339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.332122462 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333076899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333976497 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334040694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.334385688 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333686833 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.332979089 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.334595249 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.333332387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.333385225 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333917664 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.334476985 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333553849 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333805794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.335794463 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.334472539 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.333947948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.335368794 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.335267846 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.33497677 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335789887 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336418483 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.335226014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336445893 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.335527093 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335879707 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337002509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.334232518 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335688065 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.33692458 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.33580628 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.336350946 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.334098651 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334745523 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.336449516 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336385392 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335597168 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.335973848 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337467039 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.334127647 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335422804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335845758 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338921074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.335696034 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337263657 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.33676511 seconds)
  done (took 83.958092963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336704051 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334931717 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.33713677 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.336621292 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335718243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336208936 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.336924436 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.337402524 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33617807 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.33684649 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338021198 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335347553 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338518434 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337075193 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338201998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339496446 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336390252 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336031867 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33707759 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337193755 seconds)
  done (took 27.947521514 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336938111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.336922214 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.33698211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337734694 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.340310878 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33706265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.338945226 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337186367 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338174929 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338278204 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.339438811 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338470845 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337864361 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.339734367 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.338743952 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.339337317 seconds)
  done (took 22.621096742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.340161834 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.338455058 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.338857162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.339406486 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.339677863 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.339417624 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.339870596 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.339938426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.340350577 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.340244896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.340060217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.33765163 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.340079529 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.339745785 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.34038983 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.339242062 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.339707284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.339652357 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.339305864 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.340431786 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.340572276 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.339531235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.340172484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.342815838 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.339891662 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.341881492 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.341312525 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.34187974 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.339905708 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.341693597 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.341967556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.342127939 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.341390373 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.340374222 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.34064057 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.341781446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.3426143 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.341690144 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.341547834 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.342089926 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.341983787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.342023283 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.341530781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.342563818 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.343269456 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.342355711 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.342942859 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.341844164 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.341323136 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.34359751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.340195192 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.342403413 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.343384972 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.341608565 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.343677587 seconds)
  done (took 74.965485917 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342776068 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344472405 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.343799997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.341592303 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343974212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.343556638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343318136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.345841378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342766358 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343960329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.341666186 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.345444552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343840635 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.342726048 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.344346147 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345378928 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.343697851 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.342922907 seconds)
  done (took 25.401080938 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344028943 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.344793158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.344441967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.343837975 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.344854408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344440653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345163445 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.344166367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343348689 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344519143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344661934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.344667897 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345504014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345724685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345188899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344122758 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.34488112 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34519238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.344408942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344211893 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346190124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344483645 seconds)
  done (took 30.799896592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.335073924 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.335598709 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.335297079 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.348066974 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.345817287 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.335315868 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.336908968 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.336041297 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.352517006 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.360798583 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.356113389 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.345615875 seconds)
  done (took 17.339759896 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344833977 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346465623 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346254035 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347533927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3468415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34814401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345290986 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346084403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347081235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347052064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346551545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347400106 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346794264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346567684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346998383 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347837138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346880532 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346700755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345862824 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346927713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346937856 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347919424 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346881456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347847745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347119477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34686814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347325771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347959032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347238234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348620819 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347213902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347177268 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347081587 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34748118 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347248202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347567797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347567202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347870908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349243532 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348608865 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.349121728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34813755 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34963142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350314239 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348456778 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348169987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349352167 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349266675 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348259097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350909551 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34876775 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349860692 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349882708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349472406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350088739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349418166 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350139364 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34997759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349419132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350422308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350123932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350397054 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349956098 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350663001 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349594971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3494638 seconds)
  done (took 90.195002223 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349745232 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350378286 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34865166 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351916665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351203686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350529293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350836952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34993123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349854747 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349978044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350831124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350748761 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350834457 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35052428 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350351501 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351264845 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35098267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351573503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35027213 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351149295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351104973 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350657874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350708694 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352313293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351521391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351487806 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352006387 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351585813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35163468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352012288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353596935 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352932494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350692404 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352073057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351715321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351763372 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35195556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352974691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35214021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353560732 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35261804 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353188336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352450037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352418376 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352829512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351352685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354430381 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351838014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353497328 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352900894 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354587362 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353318092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35245934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352545114 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353541663 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352955674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353679084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354467191 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355307033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355052362 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353098355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355201945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353652994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354193238 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35432666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354890232 seconds)
  done (took 90.463064038 seconds)
done (took 1819.878731547 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.509368924 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.466002221 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.344913297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.357553004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.343677614 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.346528396 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.358907755 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.343438928 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.34435622 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.344733648 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344943685 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.562751452 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.378925847 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.344464135 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.345408229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.441017925 seconds)
  done (took 27.402208126 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373077585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.353360516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.468510785 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.354108259 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373614529 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.543115925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.412908324 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35104954 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528529543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373577745 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.348006572 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372046939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.349678817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.346190869 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.368710515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542028094 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.620480354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.347815168 seconds)
  done (took 29.651768308 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814479092 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.365782867 seconds)
  done (took 5.404723826 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.367199667 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.347028494 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.349488516 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.346605286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.340132826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.339538766 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.345509006 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.344402132 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.339906265 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.483003642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.350783337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.361799518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.364417736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.348804178 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.356334526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.393206688 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.516338659 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357036519 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.356089047 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.35311621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.34732043 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447708564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.392987707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.359174951 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.478574382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.346990922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.357292926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.354730686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.467115179 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.355854703 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.346848574 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.34879966 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.348815988 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.342297299 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.902477185 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.348099574 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.373909572 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.356102277 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.356945412 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51128514 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352103492 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.356665991 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.342171145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.895246711 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467632545 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.472383334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.36602176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.354636622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.351599194 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.415145531 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.35335624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.353328746 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.417836694 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.16919123 seconds)
  done (took 86.398852356 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.401838222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.341602622 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525177021 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.364229635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35399677 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345574035 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.347920378 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.638592133 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.355916891 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341546412 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.671570141 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976977324 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347414684 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.405091166 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.383178704 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.393250099 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343435754 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.342573047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.340955359 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.344335861 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915452414 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347595841 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.347783901 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.426686685 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.382277689 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.89283959 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.341277158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.354595295 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.345911702 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.343083826 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941452185 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345669957 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.393697901 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342001643 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.633485065 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742532832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701957176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.347236142 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367524235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.344951791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.36696759 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880723309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.724185386 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.341895377 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345275583 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.883578756 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.346235154 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.344030671 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.348934893 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.612853712 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.346519069 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.345740857 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.349672175 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349429107 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.343988206 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402071694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.398762199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893687963 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344474041 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.344829733 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39156851 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.347969053 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.349990777 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343840764 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.343347519 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.729144271 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.585614988 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.346931131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.72631694 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935938075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.349978389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029742048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350040501 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.358976217 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.373830031 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34507424 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.344564178 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.892824671 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.36909176 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344803416 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.70504716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.346098947 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.654552575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.363685154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344656587 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939518718 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.363523084 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.389718126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.351441235 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345720958 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.345439378 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.348061995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.642069282 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.398514503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.34643683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.346465885 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.370923951 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346716173 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.345629797 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.353725561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011890417 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.359132825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.34738676 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.366854957 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348656772 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.348809708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.34586995 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.346049016 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630121268 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.344720111 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.357373162 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.346830423 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.35009492 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.349970054 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424102663 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.352557571 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.669076734 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.352229951 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347769992 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353245337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.36040005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361346976 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34678016 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.374528075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.347160364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.6481297 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.365842068 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.36379147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.345766431 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.346155435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.345303443 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.349425719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.420155527 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.351985295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159743489 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.391409783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.346957194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.345562713 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.359512359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3473146 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.353796848 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.34835878 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.649545738 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.634358987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.573371088 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.347109053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.345946773 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.173925645 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383508438 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528160909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368360471 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345147399 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626187107 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.576406045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.348373769 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.346866411 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.350873387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626812744 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346330116 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688334268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.965778288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.350655439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357513899 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.155554999 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170584101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.352861779 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.348849554 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.646431033 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.364073906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.347219767 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.348232774 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.347009478 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.346635108 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353988823 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.347744123 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.345233117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.347672739 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.689595681 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540918134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.363805143 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348292059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893149337 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.37563672 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347792215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.358838075 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.350813052 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.346223617 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.41583399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.3482405 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.381991127 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.351211321 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.346522134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913584484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.353461011 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.345678309 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.54096738 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093442685 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.35267739 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.346779008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347639313 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.401874696 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918096031 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.385068887 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.664973789 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.365736018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.387581762 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348432954 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.365929548 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917401052 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.357800287 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345699872 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.093972432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.351472328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.784056334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.348473127 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.356641076 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005993914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.354019062 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.352955381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347888682 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364380526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.676714031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.348962784 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.354759023 seconds)
  done (took 502.518186016 seconds)
done (took 652.601291081 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347372442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353146798 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.353382232 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.351732329 seconds)
  done (took 10.635920314 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.369258019 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35434828 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.363673637 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.353221315 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.364333374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355166763 seconds)
  done (took 9.388292884 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.348737177 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.352670557 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.354730307 seconds)
  done (took 8.285495053 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.564834295 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.365717133 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.708114513 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.362268367 seconds)
  done (took 9.232031699 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.365432574 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.364421012 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.363427725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.366754515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.365822179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.367137149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.366502162 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366701243 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.36499877 seconds)
  done (took 13.520590111 seconds)
done (took 52.293328389 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.341341963 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.570584987 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.330696035 seconds)
    (4/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.453871464 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.385230217 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.348921263 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.33370444 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.331420945 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.479122086 seconds)
    (10/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491860064 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.419011661 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.327730997 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.505743257 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.387485528 seconds)
    (15/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.374175257 seconds)
    (16/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.557327836 seconds)
    (17/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.43963286 seconds)
    (18/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.562067005 seconds)
    (19/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.383706892 seconds)
    (20/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.329095958 seconds)
    (21/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.436573816 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.649169983 seconds)
    (23/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.525157364 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.343083854 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.508026842 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.35137318 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.373271415 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.387543319 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.343542878 seconds)
    (30/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.601774244 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.467973208 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.433839301 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.332061517 seconds)
    (34/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.332733774 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.502403095 seconds)
    (36/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.600014821 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.510732093 seconds)
    (38/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.419044465 seconds)
    (39/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.329005442 seconds)
    (40/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.587856617 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.44543261 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.51447326 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.334080437 seconds)
    (44/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.595645289 seconds)
    (45/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.383451956 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.472221275 seconds)
    (47/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.472375373 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.476826405 seconds)
    (49/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.329227554 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.424714431 seconds)
    (51/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.428048227 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.336013381 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.430948742 seconds)
    (54/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.385000292 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.474144304 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439612077 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367728902 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.385129142 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.425911655 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.451874809 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.581238449 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.515410974 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.476260043 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.664247042 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.443738821 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.332477469 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.668473882 seconds)
    (68/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.543406085 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.480963278 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.784474427 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.460031891 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.331126918 seconds)
    (73/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.452250506 seconds)
    (74/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.354960832 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.461364673 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.381146217 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.44929676 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.598314257 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.358974808 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.549623466 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.446413902 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.461590568 seconds)
    (83/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.399047844 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.514709473 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.468548841 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.47130745 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.43709067 seconds)
    (88/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.601121998 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.662538706 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.469477146 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.441388582 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.5978318 seconds)
    (93/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.424643102 seconds)
    (94/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.338858563 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.506236608 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.345693004 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.330408377 seconds)
    (98/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.730898763 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.598912998 seconds)
    (100/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384790645 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.473715956 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.388075924 seconds)
    (103/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.417766255 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.504450768 seconds)
    (105/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.469461333 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426552631 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.426573457 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.513156298 seconds)
    (109/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.564917975 seconds)
    (110/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.525209203 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366186685 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.468580914 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.470530432 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.329575756 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.492141125 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.500461086 seconds)
    (117/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.339085413 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.781509793 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.398551617 seconds)
    (120/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.331933367 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.486397961 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.367505554 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.39205037 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387312704 seconds)
    (125/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.415430647 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.39036961 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.432830876 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.540678669 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.569849076 seconds)
    (130/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.70775538 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.610883001 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.33076354 seconds)
    (133/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.593950348 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.488414632 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.444184328 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.455894756 seconds)
    (137/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.331200959 seconds)
    (138/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.442390742 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.341447951 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.359507307 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.666070867 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.336288281 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.605791655 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.418901754 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.591539742 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.522686425 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.512302799 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.377884639 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.522197534 seconds)
    (150/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.458529307 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.336363602 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.35519232 seconds)
    (153/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.603959952 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.472640611 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.516807008 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.581432228 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.332673226 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.337295514 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.473698129 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.573081609 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.416206682 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.517158233 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.349166971 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.456232056 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.394067038 seconds)
    (166/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.564986692 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.513116427 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.47726375 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.539468096 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.466198543 seconds)
    (171/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.331846337 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.472153981 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.373587223 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436958731 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.396256802 seconds)
    (176/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.511298981 seconds)
    (177/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3946862 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.634349291 seconds)
    (179/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440184501 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.391847061 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.333593627 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.558058959 seconds)
    (183/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.515843263 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421221719 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.463133206 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.598590486 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337348255 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.33440721 seconds)
    (189/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.4324613 seconds)
    (190/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.450955323 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.333305535 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347242508 seconds)
  done (took 328.798388373 seconds)
done (took 330.030729912 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384004337 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.458266004 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363503761 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36291691 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364429564 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.367437898 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.385353629 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365150111 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.379151699 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378406019 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361531686 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.376452408 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.379776992 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375533445 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.396975884 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363452656 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363017895 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.375038554 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.381169081 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.381332401 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366460987 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364638661 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.391689107 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.36341417 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373002943 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372959502 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37123419 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358165569 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.372114796 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379411305 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355646149 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370256527 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383363559 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376616664 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36689822 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.377471159 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36631417 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.460692104 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387330544 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375644181 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.374278317 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.386770336 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370571182 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.370194259 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376963192 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395291022 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374809183 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380434146 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.358748856 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.373347481 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386093795 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377736988 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.373535893 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.36877296 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.366926322 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380822534 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.375966036 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38567571 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373424381 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368431042 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397178389 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38531159 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.377485992 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372755815 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372602084 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381126169 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.376463877 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382627774 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374662555 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366738459 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366962205 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374806093 seconds)
done (took 108.383795081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490758028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.361846714 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.520555055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374203471 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.528416254 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487914082 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.372126707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371433427 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372016614 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.167148929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373003946 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372357039 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.360639052 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372252848 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.48424071 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.37324999 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.37156703 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.063595743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.373411756 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.500742911 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.363720413 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372684534 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373783564 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.170759947 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361718656 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.356811596 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.500499063 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372304314 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.071569729 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.359289149 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.359048051 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.071061371 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.499764497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394281446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383859434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38329509 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.531444782 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376648369 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.490219394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.489367958 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.521511498 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.411236633 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.357687935 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.363606219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.375106207 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3749031 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.375014638 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403428495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.362902793 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.37420133 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.065020051 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.383703677 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.384293027 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374854269 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.376937973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394900002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37573528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.376939972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.502613919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.375779977 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.492044757 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.175439758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.168016121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376056328 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.360721411 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375842824 seconds)
  done (took 110.690014286 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436203987 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439995857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474866669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364529422 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415768832 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475508648 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.367124646 seconds)
  done (took 11.210107297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372551863 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376228424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413053999 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415037419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375776207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539838767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378026114 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.37795005 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374543613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417529174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376726927 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376824653 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385116146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.363942631 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412462223 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377871203 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483245896 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368199107 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377759618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521606856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377797344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38449886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417503967 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376434727 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37681002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.374924212 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.154517514 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378451581 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377208561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.376057332 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376639477 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43245021 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376764743 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.3662042 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37465465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480731573 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376911031 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377172779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376972021 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.37007975 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.377570597 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377704244 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.377706545 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376999848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377693722 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392944263 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.377847948 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377654969 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.377511867 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376425667 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417801513 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379425225 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377212174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375988979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.420563217 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386475417 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376659107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.377535766 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379498261 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37968082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520658482 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415669323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378260247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416646885 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378379881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379120745 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379254585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.379558062 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45827085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377552655 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415506822 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377986279 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549702835 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.394366853 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381569833 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373223457 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372800673 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378432084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.367063883 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376478577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379093226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370815865 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376565542 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379955336 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379171255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528199551 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479001863 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379612047 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.384654845 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.380513093 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.38101198 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421260114 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383426168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379415598 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421263244 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488790987 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42263754 seconds)
  done (took 141.496859833 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383532933 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383811062 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375119678 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399733387 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377872736 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372261674 seconds)
  done (took 9.531450795 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373781294 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383989968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.382805445 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.382133487 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385149421 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386222037 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.383160052 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374582938 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385211079 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383125941 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.384520669 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382676754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382571795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.382323195 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382512186 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383045579 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.382794872 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385765206 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382855783 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382974209 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.370027067 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383423361 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388507445 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379430646 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388016721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383123596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399186235 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38262032 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382208655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382310494 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.388792997 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.388168728 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.377987449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381130965 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385258859 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377864704 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386491824 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383128425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385071351 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.385143685 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386761208 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386602467 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386038189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.385922799 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380175378 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381152685 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389752175 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402402992 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388101433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39049929 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384085611 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.386515492 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385704874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386507643 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377352251 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380935842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387265713 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387342759 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388375482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.379886167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388681437 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385464583 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379214568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39101365 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.389152766 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386529751 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.38012669 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387121497 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389712864 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387674928 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389318228 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385433705 seconds)
  done (took 101.93644856 seconds)
done (took 376.10254645 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.69677522 seconds)
  done (took 3.93201615 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.64326635 seconds)
  done (took 3.882884873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.716380909 seconds)
  done (took 22.225333166 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.381337737 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.378905182 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.39224569 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.375480383 seconds)
  done (took 10.773441187 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.638406256 seconds)
  done (took 3.877557963 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384969457 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380935472 seconds)
  done (took 6.014284464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.554209683 seconds)
  done (took 3.801157491 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.680878226 seconds)
  done (took 3.927976828 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.383662682 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388695193 seconds)
  done (took 6.0274257 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.350729664 seconds)
  done (took 3.594551727 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.792546698 seconds)
  done (took 21.040187739 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37979669 seconds)
  done (took 3.62872224 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.407288407 seconds)
  done (took 3.653285291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.74352957 seconds)
  done (took 5.984154668 seconds)
done (took 103.606563854 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.37422716 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.378334811 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373916614 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.373216625 seconds)
  done (took 10.734050293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.451129623 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.450244634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.456714216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442870385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.444571634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.455207425 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411010851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412319529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439522054 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.438079439 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.453792655 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.442142414 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.451723481 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412165271 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.437188858 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.453517786 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439732814 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.457210092 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412264177 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.443641339 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387611755 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443976132 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437978325 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386588281 seconds)
  done (took 35.700771581 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871459723 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446069612 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531968732 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427551511 seconds)
  done (took 7.523281052 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.490847934 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.491170355 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.508524902 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.544679385 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.594031005 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.505159791 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413460086 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.411282795 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395050359 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.492714982 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576254533 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.491039711 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.70856055 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.3845085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.704578665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387013701 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388143832 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.4917823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.54063239 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.571234631 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387302109 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490756666 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.495744088 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.49070357 seconds)
  done (took 37.202350954 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394437501 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.404828277 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.388916555 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404138174 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.389763028 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.390903653 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.389853262 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395792967 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387324566 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.388405671 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.38940569 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403202399 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.390443627 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391079506 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.397422386 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390631279 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.389816627 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395006186 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.398888032 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.388864227 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389283913 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.39615891 seconds)
  done (took 31.903398265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.373232696 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.372828722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725637435 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629512889 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.37545996 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.380509511 seconds)
  done (took 14.106645031 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440988874 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578121937 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381754077 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.702407945 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.792248769 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387908579 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380632462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606184325 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881434866 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866964763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437522588 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444034673 seconds)
  done (took 20.149635247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.386247759 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379462937 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.388017823 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395918935 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429801132 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387602917 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388657161 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373772679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435420662 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43355594 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.383483679 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.430207159 seconds)
  done (took 22.061696856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46540702 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385313626 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384078801 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409938355 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389073084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384519156 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38350001 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.079825901 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394528484 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660947427 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385081997 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474160063 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632623321 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386719268 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389827618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.318540433 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617382072 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839259984 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392607227 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386084661 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423568745 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385326845 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413605727 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584534601 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392437356 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386742929 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.65016417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385757568 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655640508 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635091152 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633967569 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394981333 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663245575 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039408434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493586326 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577643532 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383358478 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403065469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.369778452 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397555418 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402902393 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393908127 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626116563 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395876484 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387429214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394792945 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077673082 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395631297 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388874464 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389084334 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630796457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4880425 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393072823 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388550942 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431342067 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387880597 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.393810754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508786028 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027698666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390352961 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407063469 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394735062 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386274923 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392487746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010889661 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402880657 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396772215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394726343 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389938898 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388811028 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419916971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389033827 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408850001 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390135591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118123336 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397689911 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413096986 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893841785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391103018 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396666848 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615934509 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390613449 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390102442 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.389203399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391623137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081061006 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403099804 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368936461 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439625757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067687681 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584811453 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420187746 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421027506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611773085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359680663 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391113217 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392054114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398011321 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411761164 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073094674 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391899971 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398903136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638000001 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602712121 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392536573 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.330813939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848967735 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397170812 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.422563803 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39490593 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588386259 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.978743915 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64145731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398175621 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429580325 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392836761 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144090798 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39454734 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404930488 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395432757 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658263938 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165916612 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39300442 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467641282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394021345 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39371955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394273372 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39562196 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39393903 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.562902668 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40520742 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641265459 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401212787 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394101664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.39460981 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423525715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.403601537 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614817972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393920986 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675826895 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396202974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396245934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395404314 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615797781 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396257462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403295902 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735569144 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396333055 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402431475 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647247666 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434019907 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507438818 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426047878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.396906349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648705719 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401558272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.403485942 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395708897 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398901283 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401984082 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404636224 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395742666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996012861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373012277 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401254567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396310332 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411930482 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469172417 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402618572 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588715269 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402826296 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414333904 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405269261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.397911432 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623990294 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640121102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.415881163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577525606 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.847378761 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985424517 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416948643 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399539629 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.397125944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398946868 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394055573 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395954342 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397049613 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592479275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635605085 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380516496 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969644225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385898996 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387202391 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388987591 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623220749 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392203608 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379877323 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.380740543 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373066122 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37580614 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618013118 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593181329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382791938 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367406222 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880352334 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370865488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364006635 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364754226 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389763162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362630166 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183863327 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703949602 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362958822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611651693 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385077336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388511977 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363598418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374309734 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374722528 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.374132721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394195214 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.556473785 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382453018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367340922 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996793646 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094616771 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897080064 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361980481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.367062203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358893557 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051764529 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352718969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357015626 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589842487 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045155919 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352820307 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80098277 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.352526619 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072427209 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6034753 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590564507 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366373609 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.372414678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611037818 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576871297 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383857927 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360329239 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364666563 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.325865244 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88381903 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372624385 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544275843 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051642202 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363209171 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361366601 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.401184961 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364029812 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726436736 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352779962 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350454535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358291128 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345575287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293695154 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35159918 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348888813 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968831193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356156849 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.794279477 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339364574 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535665346 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592757499 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.638479766 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.347305991 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.351457898 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.590129664 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584788974 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348747729 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351233992 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879867843 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200819851 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.347439601 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342237621 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087357233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344710811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619024946 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.349867962 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.358066131 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34897546 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340092619 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341458905 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.342779239 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347232736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31731692 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800337742 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.341243196 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3741659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346298907 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348917401 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587749456 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.357564144 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929171053 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570909819 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340001484 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37402667 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.346454691 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340409008 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.331684141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341367923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34067796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347729937 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560544841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34174697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.308260593 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413094784 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551243562 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340709281 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340383031 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553282198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.349265795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.347279667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10450319 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378922097 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341830162 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349330981 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340256665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385017091 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41632107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536937502 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.596502855 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597397642 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724712374 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345989472 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349925647 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.357701424 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422502944 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341864839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.349737964 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.348828781 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929036658 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083420344 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944638449 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598569506 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352292963 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352306441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341535284 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58302886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343611242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618277349 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343713702 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.343971485 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371030576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342433534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358817745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559436417 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618436506 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34425289 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342770491 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365499309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.346932111 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592435663 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.558831293 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801907149 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858627097 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343451813 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33656622 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031974476 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613196125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338134736 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337902109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334726537 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.343956479 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363058692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.346852273 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338872806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566792985 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583097301 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976881133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582488983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.535153367 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.337362538 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348643655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590052405 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169001007 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531791738 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940492818 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028127213 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593216597 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411860973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533029019 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.344441581 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574693149 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.340418371 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342542836 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339474204 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337282451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.336659076 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583228751 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93932854 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590487532 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.341430393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.349906632 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373006108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.532888318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564797881 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029156718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55725785 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590556752 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351746963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336645889 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939121721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587596613 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345961869 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.342654131 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542427001 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345969398 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373318867 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.206796812 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.3380416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851197948 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.551960687 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357829643 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339911722 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03651294 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936625747 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347867172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800563673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34473107 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345750155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622542687 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.346901455 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338418064 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625010619 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.346496756 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341705082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542885628 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.934274035 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067357536 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.357920305 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363294806 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.346622371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340391646 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333587989 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341935123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342022851 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.716393898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339251133 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340813186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353352348 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.345066955 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346990887 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.345846422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340388243 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348388691 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.33742021 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.310822018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363064797 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465671464 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86491591 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344396208 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.956623654 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.675996663 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587590364 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350663303 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.316481464 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349487778 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343420507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342027703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343909504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335200812 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858236543 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.342275715 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.612670527 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354529098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.552332295 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553344377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341855401 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539874471 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359126023 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36903534 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.310522716 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343881427 seconds)
  done (took 975.054134327 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.343021744 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.344748882 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.341099631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.389035076 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.333923457 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.335408541 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.33688603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.389008856 seconds)
  done (took 20.032377142 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.337614652 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.346397997 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.337090677 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.34818707 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.343475671 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.86192587 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.352518477 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.344385504 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.356338592 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.342328773 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.338464776 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.984818991 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.348332745 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.346458989 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.348850161 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.349266026 seconds)
  done (took 31.907070167 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.991682285 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.655212761 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.764290226 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.340659604 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.353532669 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.34223645 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.441373122 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.34881897 seconds)
  done (took 25.459149196 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347947262 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.348178984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.348229792 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.349384927 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.349247663 seconds)
  done (took 7.963652493 seconds)
done (took 1241.039269188 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.349849107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.35049076 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349969493 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.351585469 seconds)
  done (took 6.623956522 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.313534534 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.314788725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.313596189 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.328992942 seconds)
  done (took 9.491462368 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.981171695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.849508882 seconds)
  done (took 5.051528272 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.879587584 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.878316557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.871565191 seconds)
  done (took 6.852372198 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.629868824 seconds)
  done (took 2.853653425 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.310460171 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.342007674 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.055463984 seconds)
  done (took 7.930750049 seconds)
done (took 40.025078229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.335571331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.096430131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500460574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336186881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.498475642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.493607947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.58631931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335564885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347912738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.34618483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.336194608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.497587774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.569404025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.096232174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.570080348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.101331923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498061296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.34452696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33829635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.336543528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.596163568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.338584125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364025377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.344861691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503968054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.500928457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348105961 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.101462813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338214045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341689694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.490237741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.349393322 seconds)
  done (took 81.405101084 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.338508496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.354239452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.341031833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348923317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.354159316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.343537221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340680783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339325214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.342199025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339742674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.348188829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.350862439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.341962368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.346699605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.340622135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343641281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.340472633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339434358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.340189164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354759865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.340944432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339929395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.340454942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.339506934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.345064625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.365575943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346554787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.340687496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340664335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.36321778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.353150885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.340180288 seconds)
  done (took 76.270677498 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349254096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.345084857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.36370135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.347031153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.344919277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.362192192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.349328578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361208032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346501216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348013925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.347313958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.339473351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.350312239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.357632455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.34689662 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.356894308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.346150218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347930356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361956205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360994822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.349309101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345757095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.361770367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.352942769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347077082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.346495989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355228242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.345657748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.346992901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.350438346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.348655733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348824003 seconds)
  done (took 76.457937673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.580812137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357913504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.361110832 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.351870669 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.360076114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.357587186 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.3528712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.588315205 seconds)
  done (took 14.538125912 seconds)
done (took 249.897266003 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.351105895 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.817111357 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386101882 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.356720235 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.370023741 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.381219449 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.563922429 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384026365 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564910232 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.378079013 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.372311025 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.352583178 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114068157 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.503654387 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.150792463 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.260302333 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.181652556 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.351830663 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.881254623 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.63063947 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.381608903 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.345558996 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.144380645 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.199579509 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.324271357 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.427275311 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.446012828 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.575842884 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.514596531 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.426071453 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.829873604 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.364656017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.355226229 seconds)
  done (took 62.91651077 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.35251716 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.36083118 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.36144426 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.362098239 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.360246137 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.361159049 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.352540482 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.361637587 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.361822713 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.361730154 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.36050639 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.361474533 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.362725121 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.361757408 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.361353053 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.335945871 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.351520808 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.360732149 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.351806047 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.33368947 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.361870289 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.362196684 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.363578071 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.363042825 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.363809671 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.362587342 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.361788998 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.362550514 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.364275043 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.362415795 seconds)
  done (took 41.99762992 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364376977 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.900043934 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060014699 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.365785539 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.353392307 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.358610684 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623805159 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.370027823 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.356605288 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.358270759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.810737277 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37219089 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386824163 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.068175973 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.362537727 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.364983491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.364529832 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.355369718 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.913644944 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364450308 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.621956867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363697945 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.625438131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.365612755 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.358061481 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35640732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.361157226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.124455395 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.375136307 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.81303899 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.078770534 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.625027371 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.059114291 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.113488232 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.069805169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373420772 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.364500668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.817055071 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356832957 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.356213517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.623929301 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356938723 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.074289857 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.030221542 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380161585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.366258117 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.155606404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.812907845 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.583389072 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.36278811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.101133498 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.365034981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367778382 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.359283534 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.584902591 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.360365853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.356799899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.176344505 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367856243 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.624995755 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372264189 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.358768471 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.908388542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.365282127 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.91329035 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.365846916 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.367439729 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.359858601 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.071974983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.367138006 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.049068352 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382702854 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.36798736 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.815461307 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.908469276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.212331546 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.363768441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.917932287 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.092001307 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.641721167 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.365569894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.105062623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.6438744 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362949436 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371687887 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.371651305 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.369025624 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.432210637 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.624478934 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.965494074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04607142 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.191795675 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.634356016 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.370705479 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36132965 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.181734798 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.374920925 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.368962926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.070987493 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.057111424 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.380789172 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.368776949 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.039163657 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.384164759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.630649822 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.3724264 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.113126122 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.368923618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.43577076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.372393149 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.368410235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.364271665 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.631152988 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.370189165 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370784786 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.0324502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.845158402 seconds)
  done (took 189.620109586 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.357230759 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.371210236 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.357129528 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.355127422 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.356605899 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.363722386 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.35513561 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.355602024 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.360949971 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.356604872 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.354558731 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.364723919 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.363899727 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.356033075 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.363288093 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.362738757 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.356106323 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.358674442 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.380446189 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.35787265 seconds)
  done (took 44.447327904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.374262181 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890645523 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.858710796 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.377792093 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371118842 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.364604295 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.416370289 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.374713006 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.373153575 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.643088607 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.526399639 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381836377 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.374603919 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.373636688 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.855818511 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.349022684 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.641022671 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.88806836 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.378475762 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.891312944 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.349284014 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374355775 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.363814493 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.890412527 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658858014 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.631309615 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.419093797 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.893909693 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.37909209 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.374935895 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.892297479 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.379980019 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.365041864 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.874725041 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.377812788 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.389640147 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.374061381 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.420059873 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.420487682 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.647492463 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.905308362 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.645079418 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.391032007 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.522306987 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.377097555 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.347131583 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.903425755 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.380084986 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34603156 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.377489662 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380464874 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.868594323 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.371595888 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.86794201 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.380107601 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.37640912 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.895169054 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.874882749 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.862827627 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.531474672 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.367897968 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.633085963 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.381551214 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.903255629 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380193349 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.377337422 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378575681 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.526258284 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.896764129 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.635961278 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.648207404 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.647775999 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377456873 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.431846146 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.37737767 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.648143271 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.43170338 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.745130023 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.650772579 seconds)
  done (took 123.467317939 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.620681116 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.486738848 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.721421161 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.925918956 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.848169123 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.503020732 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.480858793 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.608955325 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.382459379 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.478188049 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.989902037 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462890953 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119586883 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.431252266 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.475894234 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503051273 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.743060863 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.291127253 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.000886919 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.960658193 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.37236106 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.464976545 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.870093763 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.572339967 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.378832681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.898250378 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.269046936 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.863013969 seconds)
  done (took 51.969083946 seconds)
done (took 515.646719019 seconds)
SAVING RESULT...
DONE!
