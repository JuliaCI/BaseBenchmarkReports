cset: moving following pidspec: 7358
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259310034 seconds)
loading group "string"... done (took 0.613139519 seconds)
loading group "linalg"... done (took 7.187029789 seconds)
loading group "parallel"... done (took 0.162722694 seconds)
loading group "find"... done (took 1.113063412 seconds)
loading group "tuple"... done (took 1.79297121 seconds)
loading group "dates"... done (took 1.198994914 seconds)
loading group "micro"... done (took 0.240591922 seconds)
loading group "io"... done (took 0.908984431 seconds)
loading group "scalar"... done (took 36.218317716 seconds)
loading group "sparse"... done (took 11.070175889 seconds)
loading group "broadcast"... done (took 0.911024195 seconds)
loading group "union"... done (took 12.155464695 seconds)
loading group "simd"... done (took 4.125311816 seconds)
loading group "random"... done (took 8.628272688 seconds)
loading group "problem"... done (took 1.860063188 seconds)
loading group "array"... done (took 19.77326311 seconds)
loading group "misc"... done (took 1.660048238 seconds)
loading group "sort"... done (took 3.081037134 seconds)
loading group "collection"... done (took 16.633948966 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.493092291 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122483251 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114591722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118634398 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.134056505 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11429434 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123228816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084242111 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.775748281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144498284 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119632278 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416164547 seconds)
done (took 5.08233997 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175135305 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08556453 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08389803 seconds)
  done (took 1.313107161 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067187992 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124257424 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067980844 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068310163 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06877455 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067490389 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067377784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067508137 seconds)
  done (took 1.676791283 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075578792 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071230418 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07010203 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070007929 seconds)
  done (took 1.429124217 seconds)
done (took 5.817110761 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768367584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201834557 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182970418 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39956881 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131582625 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153589634 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646287475 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304128283 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182704076 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080880884 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10410189 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317098886 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107161041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63733326 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073562811 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08998345 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136679482 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442810875 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06723815 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081813411 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088439865 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127931325 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087215787 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074496239 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142948788 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0677507 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129514937 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080087307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065985955 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207248933 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171948973 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659663134 seconds)
  done (took 10.197182518 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099170126 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100927047 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069526195 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136928114 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098940896 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069725033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070698323 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066967793 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086889238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128058233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088639359 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101094336 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065411957 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068489822 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084432648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204439252 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082516739 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081387775 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070624212 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075163293 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116151584 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077870221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077975345 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127982084 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181722527 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098196109 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097579643 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066808168 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08025759 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114654856 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128827423 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067385229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067603817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127410352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09592571 seconds)
  done (took 4.621674841 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.928234521 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14407416 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090501828 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130434116 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109493855 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064259797 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106133819 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064950507 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082554467 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199716044 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37331194 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569995257 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11078537 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101257295 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067247995 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06808683 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066599746 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356458516 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107795008 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103437155 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081478228 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070278394 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068883127 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340953459 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067663815 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064055361 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067761781 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057632012 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122725194 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067859471 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916471786 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123993895 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066148714 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100135086 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168609059 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089470677 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273674441 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067710649 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064343699 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150247839 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070193682 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065817991 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086414886 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103564036 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112512612 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065778776 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0663082 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161504126 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064899171 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079558969 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064484988 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.000782245 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153852344 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076688056 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064935335 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247939477 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086369645 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069461857 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064518379 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.197918999 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135418889 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066965963 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066302458 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067715329 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069008422 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355596173 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066092884 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.994847979 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06806349 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076932577 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069121772 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06905667 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072888186 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071937789 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085015758 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065899165 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06433601 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074933465 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065709206 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065651554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066789166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084118973 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358622525 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066356487 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067524266 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064396938 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085890208 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096655394 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06613017 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064730859 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099397263 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067959098 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.172078659 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107494915 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067977839 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063748605 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084447552 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069227635 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116119325 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067160132 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085563892 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066953517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096806897 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069623898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09984638 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080847758 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068407899 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401078332 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064744291 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065225055 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068236241 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065379576 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067934754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066861553 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079435629 seconds)
  done (took 21.213745129 seconds)
done (took 38.102775196 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.279971458 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079133005 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078648255 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075067642 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075304691 seconds)
  done (took 1.802373534 seconds)
done (took 2.999436321 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122661832 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098632241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064079099 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095515358 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063773405 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099447671 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098679257 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080925846 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099043896 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063950165 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095843528 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063908667 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063810643 seconds)
  done (took 2.327934237 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084758483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08523197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070014472 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082099661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064362695 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082451967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080242425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087938408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08011292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07131678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063473744 seconds)
  done (took 2.042416557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08409877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085360488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070604331 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081284913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063604005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080712864 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080646388 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084496331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080812417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073022092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063334142 seconds)
  done (took 2.040957343 seconds)
done (took 7.597642886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079597344 seconds)
  done (took 1.257847293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592510823 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.044247986 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081380252 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112324161 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183173619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119811944 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278233888 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086868236 seconds)
  done (took 8.867918722 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10435824 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073258321 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068909668 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071999182 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069609664 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071990821 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070716101 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072216682 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068271215 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069324101 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068455341 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068581535 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071104016 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069445102 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070896827 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069055143 seconds)
  done (took 2.411204133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094823085 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090308324 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073939737 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075358567 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071892979 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072090214 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074160815 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073006021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070442745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071749278 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074609045 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07378481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071409941 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065081026 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073825745 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075484516 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070712172 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073682439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074481023 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074717624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074646122 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064398766 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071281856 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073842866 seconds)
  done (took 3.069309012 seconds)
done (took 16.795902233 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115248982 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072051463 seconds)
  done (took 1.372387198 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084396686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086110325 seconds)
  done (took 1.369665616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085596755 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06772236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091407881 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077966898 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066961976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065787131 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087433402 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066091914 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066127317 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066117329 seconds)
  done (took 1.940444057 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07108669 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080364061 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071003769 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081289153 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073863618 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06438704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072474072 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067725784 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07774974 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063265867 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071605427 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082543468 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070988218 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083742976 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07235993 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06853238 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070539759 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067135946 seconds)
  done (took 2.512172154 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068006401 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069144043 seconds)
  done (took 1.342928829 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06862757 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065810039 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068696318 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068610147 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064907025 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06448647 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064906473 seconds)
  done (took 1.666760879 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403037057 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112417339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301628253 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071064025 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082316353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249818554 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0649365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070231158 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070080872 seconds)
  done (took 2.669345238 seconds)
done (took 14.074866059 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082138098 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087730865 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097162901 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372777838 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091500745 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065531575 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113759602 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194267749 seconds)
done (took 2.322881915 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21394046 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620702344 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380615842 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196839662 seconds)
  done (took 2.404242251 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332764579 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086655806 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060190333 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069036341 seconds)
  done (took 1.77244492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067944148 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071168436 seconds)
  done (took 1.352244056 seconds)
done (took 6.958163632 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068251073 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086961022 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068644548 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064409239 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067728409 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065091467 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065632434 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064558237 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067015865 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066841022 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070448671 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068141301 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067640567 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06565932 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065051645 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067120046 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064976809 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064932188 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064849287 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065013977 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070861761 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064776912 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065092229 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067970153 seconds)
  done (took 2.868323284 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086546104 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069320458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073774105 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0731309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072061636 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073497992 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072832358 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067525451 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073144779 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069677911 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07150832 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071539395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06947173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071955025 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069666771 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072040142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072973616 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068378828 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07001767 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072178574 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072597809 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068240591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071806368 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072875111 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071762316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071854202 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069538496 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068478399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072781317 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071690261 seconds)
  done (took 3.378389761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071987462 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065394291 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065912244 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073037668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065606822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066676228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064879048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06558132 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066427956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064951444 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066677312 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064885597 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06498868 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066386244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066408607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069267607 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080824711 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066662863 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065176351 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066232932 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068795967 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064922354 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065287052 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065362133 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064873652 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064998998 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065988054 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064975803 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066175789 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064844175 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068167028 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068597423 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065039005 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071936036 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068789211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064900302 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068885097 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064917925 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065503729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065021507 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064901267 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064819245 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.178673937 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069642912 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063460139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064713971 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063429706 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064644917 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064026077 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067313288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064223504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065054868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067138875 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066386046 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068684172 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064515032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065845946 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064422193 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065895121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064377333 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064162211 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064229329 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066826884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06538716 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079243673 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071198171 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06500318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066566312 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066182554 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067118171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066714204 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078071716 seconds)
  done (took 6.145524111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093784764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090852631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067502746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06693427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06358484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065904804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069814833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065912756 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067206397 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071162175 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065925309 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06699123 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067096374 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078924059 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065935246 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067252551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071707612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06387964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065602637 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068798882 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066107864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069260932 seconds)
  done (took 2.774322115 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158965077 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072091838 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109301343 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075366575 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069253956 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074612085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071098832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071979875 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071857689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070215969 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070405111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071378253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069750468 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069927036 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070196223 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069924382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071748681 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070002689 seconds)
  done (took 2.633803071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079720479 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068945242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088273112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066907035 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067754514 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070597162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071539973 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075932125 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070046131 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066265754 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074093639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068917323 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068039942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066943613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070265027 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06734146 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069794201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067719401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07619527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072560518 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07230684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075290602 seconds)
  done (took 2.800980291 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081968886 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069626946 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085578454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070925722 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064099142 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066190568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071383949 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067596689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0715545 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069432502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067689253 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065897322 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070884536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06745082 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070715414 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066985698 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069096075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067058666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068716619 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063437889 seconds)
  done (took 2.623792114 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089912069 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069426231 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069686673 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07787255 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06899794 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069094096 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07709431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069025518 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068551636 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088928463 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068898492 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068812787 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077295164 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074155183 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068866812 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077097543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076506379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074929972 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066805171 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066781484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08746625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06698417 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074896061 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067508439 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066903765 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067035014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067326576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071843939 seconds)
  done (took 3.267875286 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068278682 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06772862 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065240575 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065162127 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06508157 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064774389 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06515525 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064840866 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067243383 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065067389 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067434161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067620639 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067240803 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067291727 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067439061 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06725063 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067407116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064996112 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065376221 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064812868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06741434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067681756 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067499128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064752891 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063659705 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065744239 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063253931 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063397021 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065708581 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063095157 seconds)
  done (took 3.210338009 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077717238 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075163287 seconds)
  done (took 1.386139462 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065330358 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08324299 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065136321 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071796964 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071591241 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067533509 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075125966 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071706213 seconds)
  done (took 1.800361149 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083730232 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079821911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069509894 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082978841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078699934 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084525936 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133219744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066806571 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07286865 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063844532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079437906 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065847223 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072682112 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066110114 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07157548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072254894 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063765985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072323622 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06849328 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06440304 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067114217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07476343 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068689951 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061459503 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067109957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087825632 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0770735 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065789322 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069469342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073395162 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071669028 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06021092 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066115736 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066702437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064427368 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075233807 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080509013 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068687996 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074651856 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066692847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076598413 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061140947 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070544542 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072395372 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07588954 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066164178 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066477129 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061294342 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06365559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068066677 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061394705 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066215648 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060663005 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075379221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069838404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076302311 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064677025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067531221 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068962376 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069170785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072376847 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067896992 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070599659 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065867936 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073221983 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070519969 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075353113 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061455972 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060384958 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064738422 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07593723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089077986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072674276 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067224945 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067085986 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064967593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070912156 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069424633 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073402581 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072895716 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067194916 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073740599 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075498711 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06868203 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069760509 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074945825 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065155277 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070439805 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064425412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082710327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065057686 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064375735 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06437138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076974814 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069632729 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066126687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064586211 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073406434 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060689449 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066861614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067304748 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06651634 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07578697 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069400458 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070246106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073398373 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072625793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065153236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067613911 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06236881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066525738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06415892 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071881572 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059177815 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068087544 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066123759 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065356218 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197756359 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06516701 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067124834 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074983341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073165838 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065269045 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063741031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069630929 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066419506 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070279962 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074869496 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064922818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06208608 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06190454 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070429907 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066528651 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070217204 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072049585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069679318 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061086398 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064504135 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073720769 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075480705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067489279 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067668863 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072404306 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067967444 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066128506 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072952246 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069159989 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066212846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072589387 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067923747 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062240804 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070067705 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069369395 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065669225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071055242 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070400887 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069196973 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067023787 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065546549 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074896444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068419322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065786913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067050625 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064831928 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076993448 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069263574 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062678956 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063842136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076743868 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06439901 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066467312 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065956799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069492486 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067586318 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065144551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065981182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068840624 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077247236 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070890685 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067260181 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072066407 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078059481 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066536522 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06890523 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06837814 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06759256 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07519637 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072039874 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07172333 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068772994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062839919 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071858926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074361678 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065310404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064183208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065507675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07131931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073653045 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072628448 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068841108 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066138618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068619661 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070996964 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070910629 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067813473 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067480586 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075323016 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066817683 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075588814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069011107 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078285107 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071395229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063080156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071261518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065762455 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073592354 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062986396 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065827489 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066843387 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068664078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066662511 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070353116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061755701 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074642167 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073653886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065264987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064211561 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0645899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071391425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066814077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068993237 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068496942 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071365371 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075420492 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064406792 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068302816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074749479 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065451906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187122528 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072677272 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065851086 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066873593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065951251 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064711501 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070546824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076416328 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073649239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060734603 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069283423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065415398 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065995781 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062486995 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071667374 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069933907 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068120302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074355039 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067163531 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067347492 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071347952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066685833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068245168 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068180122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06984571 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067316767 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068754325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066709478 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069857462 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066031164 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064724461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068768146 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067307321 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06767515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072749143 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066671905 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067462035 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069486919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068092502 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067336842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067165037 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06550936 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070085027 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067731054 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067914466 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069672598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063195207 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0747754 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067602876 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075799881 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068707505 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065208834 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076254437 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071433991 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075185565 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069330455 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070177638 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069881767 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067084555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069486155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074063126 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064959951 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077251054 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074779633 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067254892 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06940903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067014079 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068399985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066185998 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069055971 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069294883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069978857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068419604 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073303858 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070954673 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068777021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069917668 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068976415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068605077 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069720147 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062096384 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067675878 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067285841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068058969 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078108807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068931145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067654654 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067191634 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069270733 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067312496 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065080111 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076999807 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07826841 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069170136 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07559999 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067394066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07013162 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079242717 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062394519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066163707 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066238966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06602727 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076113888 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069084436 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078128209 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068296497 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066216422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064257997 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068435451 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066399336 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06202268 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065440007 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07051503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06590144 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064283117 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06556707 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067899098 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06786636 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076649241 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066247654 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067994136 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067875991 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064211222 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066330883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066404931 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.203140284 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069183549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066008714 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065665002 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069129868 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070374031 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070211524 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067448492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069042422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076553721 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067068841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069792091 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071074615 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062346995 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070612327 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066958193 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067277077 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066886274 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071014795 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070233736 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068131234 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076181818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067082776 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068481183 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067539556 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064864364 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066607233 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066889568 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067240484 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066349082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068402164 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075236848 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065350996 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070132962 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066938335 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067440345 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074291556 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067480981 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069943447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074238703 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06708418 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068433372 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075201669 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071772996 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070553815 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068802484 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06875592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073217627 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066392522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073542919 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06759962 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067688113 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068581488 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064957681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067010444 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067069649 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067160903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074440766 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068894043 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066141221 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066927006 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066840882 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069561526 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071940931 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076645771 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071593595 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071653787 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06449154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065893742 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069444153 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066460124 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070615576 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070890027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074659429 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070822719 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068670172 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067487656 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077559306 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074636291 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071951696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065513575 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070158113 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067311698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068645432 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067711841 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066989448 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067677251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070570679 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068748631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067791852 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075624158 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072062232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069475607 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070434607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069294755 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068595953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063797656 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069148561 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070563892 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073788433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070583912 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068678678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079250495 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065804516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06847883 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071445797 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067321975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073042282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063475355 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06950137 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068813398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069062842 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062518403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06679671 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065248283 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069241481 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066154966 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062143609 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077365272 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076215727 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069913904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06558738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065466737 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062284859 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061964681 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.198353301 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068405456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070879379 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079751647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068495348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067977672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064466262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068466864 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071990828 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072159201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066340203 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064525106 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068101524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072265224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074836888 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067722342 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068397994 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072420634 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071026694 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067527032 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072851723 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066290914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073353595 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082413225 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070127222 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070031584 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076344437 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077171586 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069668544 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062676902 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069020476 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072555425 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069495127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070099333 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070320169 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08509105 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072364519 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068083512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068199442 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072174635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068338407 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077671922 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070088288 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069466769 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07393635 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071551598 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079116017 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071637332 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076963477 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072347695 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072453604 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067701282 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069565767 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067426999 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067838475 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070130282 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069911202 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075098335 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078098466 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068110992 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080026305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078456069 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070733928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065392314 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068505129 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068544197 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064079589 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069882561 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067357791 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066905661 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067125772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067606371 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069038054 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073575555 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069281974 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069330361 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067990267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062400852 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070680158 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070520639 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068994526 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064840086 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068085048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068609392 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071973694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071406926 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065970397 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069517156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069782531 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068509702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063739762 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074428609 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066944306 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070342533 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067566626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068683304 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069156574 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072267503 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073440607 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069553306 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070356974 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071972962 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070418889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065657626 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065475366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073833896 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065942302 seconds)
  done (took 43.163438386 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104414222 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065732799 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064481391 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064350117 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076416935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065383437 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063709932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065564019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065102971 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067740238 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064439244 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0642735 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07349208 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080425928 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076331121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069234814 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064232055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065178904 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0642403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064944423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073272306 seconds)
  done (took 2.793119419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077127266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073295318 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075794595 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077802798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067306778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070378443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072553026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070931632 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076020905 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067060634 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07630754 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071070856 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067111955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067568633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067390941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073179254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078550302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069786454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.082031604 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074644892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072979139 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075143329 seconds)
  done (took 2.910553101 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069251707 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067760983 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070686417 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063447452 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068390069 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06359863 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071387879 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065866126 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07159182 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067266692 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066999861 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067058958 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069679274 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063148694 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067846042 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065735156 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112603677 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07152461 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067699645 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068575814 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063082584 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069958641 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063335067 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063627332 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066621702 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070951321 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068421835 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065142496 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066290375 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064907863 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065722343 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063647785 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067397659 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066895786 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064569735 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065262445 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065436449 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065651238 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061559251 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064125971 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0663682 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061777635 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065949793 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066789601 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064413432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063676284 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067411591 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065398047 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060724484 seconds)
  done (took 4.60531891 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083227334 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111349086 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070018279 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088097112 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.0806242 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075953382 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069094972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089686379 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064191261 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065986121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083479369 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082265846 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067957667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072410078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071454551 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067993775 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068955246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066777883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071659826 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067001354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071928341 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074374041 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082786526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081053728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071619867 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066632478 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067169072 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071840116 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080455095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072231152 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072388376 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073032817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082884591 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073185703 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066689313 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070079936 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084578733 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067620463 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069939123 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065122748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069434866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071778296 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073682587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083889226 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067475945 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07223244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067150094 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064341731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080492386 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069250414 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075179071 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081979264 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071159446 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067321187 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071622522 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082313185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067182351 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065522852 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069829459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078583884 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064344209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070953864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081206968 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068701991 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074917937 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081658678 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072964211 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071272607 seconds)
  done (took 6.475053391 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078155725 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074576499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083180322 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082283614 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074355451 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074916559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074342517 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073944157 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07403625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079587592 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074590098 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.096230245 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06996005 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07711712 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074570165 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074562381 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074696799 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074776936 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073257244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072452654 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07288389 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079948673 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072745641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080272071 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098639243 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067698363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072134975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072496963 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080814009 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072575048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080255794 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072382981 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072276122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080406201 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079432834 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071887074 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065034417 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072251027 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0724064 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071993127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067766267 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079939781 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071556014 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067453389 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072380348 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071793875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080469501 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07897182 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074449804 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077204879 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071930556 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080780137 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071718674 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071929028 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080159436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104875247 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080275196 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08031991 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073625644 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081497245 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081285717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088326201 seconds)
  done (took 6.08281825 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086628426 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077604756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079860846 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063141069 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065879294 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07207449 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065760163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066009642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076795642 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076968055 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079136364 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07209552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075466388 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079148611 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071951873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074918495 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072370915 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072256284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076867642 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071843582 seconds)
  done (took 2.813668182 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077262991 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084885714 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068868243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07394781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070646114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074081677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069843278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071128683 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068684486 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070750595 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07829623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078296901 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069092704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073847907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078242147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07380442 seconds)
  done (took 2.512287029 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078217908 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075404781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082684785 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068307897 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066071432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064668515 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067551926 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063577588 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064075626 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079772375 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067754015 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070458784 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067254784 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066765449 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064942517 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070461959 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064067225 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065152967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067458911 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080185441 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078525231 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066103504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068177555 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067605317 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067759564 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072857199 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067259359 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065708521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065478486 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067755966 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067889039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070931475 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064660826 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065234073 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066302494 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065009071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067427363 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067589723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07030937 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067235579 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065067646 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06716887 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067516046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068317971 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063510863 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067891295 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063565099 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069581464 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065069664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067657455 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067809815 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069773359 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068259026 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07418161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070459187 seconds)
  done (took 5.103873384 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081197846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0723439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063991238 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066142727 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070528536 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069603434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070897629 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069137693 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070045187 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065776788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069420175 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070371431 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069664908 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070747826 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069193895 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071570424 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063492488 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069335546 seconds)
  done (took 2.595750035 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073366401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068287889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075268255 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068351012 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067978607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069812062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063736763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066581094 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066356281 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067526379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067290934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069588003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066669002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070179484 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067881487 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067191027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069923624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066536222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067138198 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063427648 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069786805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066284783 seconds)
  done (took 2.836745618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073961499 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094357199 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141336144 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085800491 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083151916 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.081196833 seconds)
  done (took 1.897811389 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093170063 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081647565 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069216097 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090493791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075678604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069615942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069304037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069618542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078344964 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078463809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069310052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078084782 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0779163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077626406 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074956791 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074904426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06932895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069423086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068003772 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086308542 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069545877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077822146 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06911923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069211405 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069452391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077252036 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078237008 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078271398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068869722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077864033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074836983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069200894 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078098169 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07817965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070560314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078290417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069265644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086707708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074940102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077817859 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071047966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075747801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078285022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074725408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078423648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069610435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074429873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069514551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069882114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088370296 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075115869 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077274925 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075388576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07788826 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07635156 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086258853 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076101823 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075613508 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074465272 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080804643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077271952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074809122 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077552944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078782572 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075677392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077567227 seconds)
  done (took 6.340501055 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085306194 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087874583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070108864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079454768 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077953037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069753662 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069765107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069906754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069383775 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069380042 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110559347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070241285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07811312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078215585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070036663 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069789924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069545623 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077703997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06916364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088870221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069901817 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077471403 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078033432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077537824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078688537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07518007 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068150345 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069423587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069122949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069590407 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074348273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069961523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077430478 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069108541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077716347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069764065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069458631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074295978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069487186 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073552883 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076303656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084773679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067437752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068359794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078638073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068981025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068214837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067876352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069356627 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069244884 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077890724 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077294418 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076797923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075648443 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067470731 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067626508 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067617541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069528187 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069593392 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075279065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077811763 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069445259 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088430895 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069562633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069892203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077645293 seconds)
  done (took 6.241771355 seconds)
done (took 130.475987043 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186775146 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169520021 seconds)
  done (took 1.685805294 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071184462 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100301435 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079657918 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131415915 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066990505 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100584528 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099447661 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078056287 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066138379 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066087059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066371101 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070219488 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132959696 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066472329 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06605879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068783417 seconds)
  done (took 2.67421928 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100140732 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163860989 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102323579 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067461141 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099570167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075788236 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06684799 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077585361 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07346105 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067028483 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075344394 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073244884 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066581888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072312817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071612185 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072506467 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064985414 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072803905 seconds)
  done (took 2.811796884 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104802831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094621138 seconds)
  done (took 1.555699299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158727317 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.111154403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150790308 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346455764 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168286421 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229272974 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126981906 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127139866 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11751223 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123169235 seconds)
  done (took 3.003873892 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101541334 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154762182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257966514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115828625 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072089038 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095145779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115884375 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077929447 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081081765 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080490514 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080483941 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076052304 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099137062 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073257788 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073351526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076106969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102510314 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072293601 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07454182 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077218861 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099715236 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065667749 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074027321 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072586331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077918895 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077702927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06549369 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06550625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076941198 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074272895 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077180831 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094916694 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077427715 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107982634 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070378635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109016771 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076493073 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074549652 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074098348 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073722741 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078916229 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079137901 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072164194 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075689018 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065277969 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076575403 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065438195 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065296952 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078029103 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066578928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079588998 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078234217 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107728857 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068652681 seconds)
  done (took 5.979510375 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105472497 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106717276 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071393087 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110119497 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097204319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071321002 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101483029 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091458463 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103464082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092553145 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089275419 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071154836 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082175859 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083780426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110216686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102522663 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095344373 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070895856 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102455813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103364423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068500662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095283767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090955151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101912571 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067706795 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070069605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068451326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070853934 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077038195 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07881032 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070096178 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102418325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084917791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078820831 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067061534 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068193059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068482072 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079146334 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097837904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07967526 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077734918 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067828887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067896755 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06948841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091235371 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067768879 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078993524 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080627953 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078696652 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06960971 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070500252 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067922291 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069739561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080443629 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079449552 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081549354 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080329302 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068272994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068441725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071594805 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080825889 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079420746 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079363997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092468058 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079247586 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068378396 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08051764 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084182287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068664828 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070180728 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068855461 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07011398 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06975703 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078399389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078426337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070094171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069851129 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068393043 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080384082 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078762188 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068224076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077198687 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067359222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068712013 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069913602 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069477999 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077833346 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079747333 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070179224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068230498 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069588026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067856218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066121184 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076062562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078661911 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077498688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077556014 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068674134 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077526452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077234146 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068702406 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078163577 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197482642 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071595641 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070508089 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079714997 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079073669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080868604 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070301104 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069329448 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08062055 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081404665 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06947614 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079150215 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081904478 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079789023 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068900055 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082849307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069009863 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080613587 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070388199 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080949245 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069330747 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080701649 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069633265 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068956641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069471183 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080520007 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070876091 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069046355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070017412 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070244612 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080388696 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084095515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070849891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08268737 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079762561 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071073545 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080136046 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06990082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080086438 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071204221 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070696662 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067529259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083544822 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069021784 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068787344 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070585265 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081785533 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069312926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080880077 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079216771 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067933247 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08238367 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081037788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077576146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080738129 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0713138 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069376993 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068431991 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070142366 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078639716 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080472171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070928944 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069751474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079000115 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080303445 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067575366 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07885973 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078596321 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078727475 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069179286 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070110154 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080305658 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081347701 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07807596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078477254 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078923554 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068295993 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07795317 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078251004 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067917845 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084464724 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06834568 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082898201 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079627627 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077296913 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079628513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081045483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080952229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080592595 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082568782 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068008865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06764864 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079410115 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068041905 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069515596 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076817745 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068845606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068611782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081889037 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067296259 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078380123 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06658769 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077237722 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066364322 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069107819 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081143087 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066703635 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068551189 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077757356 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068479447 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075848304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07935814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076583841 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066844991 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068563783 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077953645 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077326884 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066757338 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066821936 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069134879 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076241589 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075696718 seconds)
  done (took 18.677205003 seconds)
done (took 37.746518712 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218862805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152992045 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183460487 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119176816 seconds)
  done (took 2.13725203 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12778379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104492673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096336231 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065825973 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102804843 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065842778 seconds)
  done (took 1.955673623 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31919931 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212751894 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183915049 seconds)
  done (took 2.104948462 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205379945 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189211154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399948557 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256026727 seconds)
  done (took 2.553655777 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145983676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090735559 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067372117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083435309 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136505479 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162198908 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102286591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127017268 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078603586 seconds)
  done (took 2.44400646 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148723613 seconds)
done (took 12.784285097 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229031212 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.21954425 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191503235 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098156295 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082669367 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.191399023 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.201114233 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.222537204 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063873016 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074390397 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071983706 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081987434 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20589624 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177026297 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07810813 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.154929152 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075161632 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073358248 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073433236 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142298524 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092080559 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102081893 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109103547 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.182561906 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154443514 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087123861 seconds)
    (27/309) benchmarking ("sort", Float64, false)...
    done (took 0.126457045 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077176941 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081560214 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.171034308 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068711804 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216158914 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075684639 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.071451653 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136667029 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119856103 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095643396 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09143482 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072467942 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070219138 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07178228 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091386131 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099597822 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095702785 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066112519 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077590691 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075670014 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072549416 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09151929 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076316541 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099797733 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.116061122 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071778018 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1276447 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050985464 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07204429 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074868539 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075934336 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165717011 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066710064 seconds)
    (61/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.140432107 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 0.126659413 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.14826532 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087872022 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186360525 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173903176 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074478083 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066337571 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07236719 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066962942 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.195921677 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.20758917 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151215596 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066669796 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050844569 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204181476 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17837397 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125872438 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050566415 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.119291344 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065384741 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.30058813 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 0.141700287 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124511607 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091054455 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06641853 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096499952 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076478627 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099761492 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072649128 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068245805 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187704999 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051678157 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182048205 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07413028 seconds)
    (96/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092243213 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080322766 seconds)
    (98/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.0901069 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093335845 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066194445 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07077148 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088199359 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120303923 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051353832 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074769012 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070364569 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096824072 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099664713 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073064651 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.40108117 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177480509 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0686588 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186957962 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076908486 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141369806 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069029049 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092493666 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074219178 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068308171 seconds)
    (120/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062318534 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088181722 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088702698 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080830132 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.133987281 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073784153 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119719988 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072327041 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099506318 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052497195 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070906559 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071932531 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051288795 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173368078 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052465088 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142705027 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051107503 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085881107 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111655789 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071523012 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113319655 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064196906 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065989004 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156123855 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137090057 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051108524 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077903375 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064956943 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052364772 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072688195 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090121944 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099175712 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070904866 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051208188 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06506487 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067135056 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05087007 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073034044 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149543453 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065302019 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149403931 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106357782 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078494327 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065409263 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068768522 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062933008 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051186054 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082191547 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109049353 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110382543 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074202481 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052162779 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149519629 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074944721 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135126336 seconds)
    (175/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087697745 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072433865 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071681025 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088573291 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050977168 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050901203 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148285827 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064900504 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072992143 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070652554 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052100013 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064411003 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065766856 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061392788 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071446306 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063351588 seconds)
    (191/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052830767 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.343025179 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055251043 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09860107 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051994519 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068087962 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106479616 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08904565 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071146357 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07323673 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053313599 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063352524 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07180002 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.187463535 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07529997 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073621414 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139636302 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052885767 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071986324 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053606301 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053368409 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182293506 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089784134 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053121582 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053033046 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099541762 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071467148 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065919112 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068071746 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064784078 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066182339 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115707448 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052638273 seconds)
    (224/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072792344 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053322448 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186292676 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052129151 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065153082 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143403195 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054252394 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053336536 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08958216 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068509226 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066455394 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090797433 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137401381 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052542017 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051721338 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052934677 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052521977 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066196714 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065262523 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087426363 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060977763 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072947933 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16857689 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074436282 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065882044 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062617003 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065553824 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065131841 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137149506 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051751458 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076126166 seconds)
    (255/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061025518 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071648979 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053926237 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051787834 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051768196 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065290714 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073210269 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051378054 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175697242 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061975091 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051033393 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065603327 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065457781 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065728579 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117668791 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074270634 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137165022 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067373383 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051913049 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07201134 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067709291 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05121687 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087486768 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088207483 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068843196 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065617382 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06657399 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072402188 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063787664 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052719652 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064007829 seconds)
    (286/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050781123 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13600633 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071973972 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078256949 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100476296 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052592911 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06574481 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070794788 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065571536 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172269166 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067737633 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097857156 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060884294 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051961428 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053994385 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091797236 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070648551 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106755967 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092098894 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051448321 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05104931 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066753124 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078000047 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072596908 seconds)
  done (took 30.633172867 seconds)
done (took 32.038084423 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087638053 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092423924 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074375184 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093998638 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080947509 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076642468 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072318501 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077868263 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079437816 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081571667 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078801947 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054765142 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073978099 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073835197 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074298306 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090972078 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077577231 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072230777 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072788435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065008955 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072997101 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06554898 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06684563 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054806818 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077324162 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071228164 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072471361 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073912248 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065867082 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065706169 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068948912 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072868113 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065619385 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078121122 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072099111 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073565694 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07456401 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076174832 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067523791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06543336 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073957222 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065445185 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072370093 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073591771 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071794035 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071425686 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072973716 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078155773 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091084376 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068024375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074254251 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075683358 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076535661 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072112427 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069436422 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072617378 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070378399 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09091823 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073279426 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068230956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074033509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073494519 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070813972 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072528452 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072869428 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07507696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075301597 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070984674 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074292137 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071585358 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06517172 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072473645 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068569311 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065683907 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075147926 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076427903 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064683606 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070825438 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072256136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070984943 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064584837 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06727734 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067225151 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071436601 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067082916 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054203831 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068314261 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071143089 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064365623 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072482377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071300143 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072012183 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066814174 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074935908 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064597243 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070140649 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065233617 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065125267 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066522047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06844622 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065181713 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067338928 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074000608 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066533706 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070831499 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078309549 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065045158 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071407292 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064068433 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064395631 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079060773 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074141481 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065295024 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067462049 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064327808 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072248109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064370318 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064938109 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064802841 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065393414 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07051273 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064828493 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066790645 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071219201 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07632562 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064179046 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067155009 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066645235 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064025975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069168673 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06407814 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064128522 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199949732 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062201779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06873313 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065854342 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072917562 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067627879 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073002503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066670137 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073947996 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06992651 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071053485 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071023753 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064509763 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058887921 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068839544 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068259371 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067960081 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066278944 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067244771 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066177026 seconds)
done (took 12.422175189 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068625772 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143472919 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098986217 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095360442 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086072071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066494257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075995097 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10235257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067731986 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102232808 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08743244 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084799118 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112405236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064723205 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065559486 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069567863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067315557 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081184298 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101713241 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086151474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115935207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064955528 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094870836 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090146346 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086993985 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092060016 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066633285 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069802516 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069102428 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100479062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086213386 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069779712 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066445826 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100751238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092176007 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08361784 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066043393 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082444024 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066101298 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06568081 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067310507 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097887102 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079745964 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080092808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070004639 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068869607 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067211604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083263749 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088695371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078791106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086190947 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103280258 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068468688 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065583085 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064356415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085485845 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06507241 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068706653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066352551 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068394732 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065720222 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068764972 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081057879 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082039969 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069790736 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080799287 seconds)
  done (took 6.794217817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08564261 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090373068 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08337923 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083560109 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065852041 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066374698 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066579732 seconds)
  done (took 2.035070094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068808351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088014981 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089090142 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088832292 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084576343 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087158975 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075778831 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066698383 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080432739 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067197991 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087243673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101908305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06685236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073240081 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090447324 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066306048 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089749496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066433972 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069866619 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089686411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068531436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082161973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06973737 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066507295 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08057187 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066699404 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113438795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07048589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067925349 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069188915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064137401 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106796435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07988303 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075565719 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066270231 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080692895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080599339 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06501982 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082464186 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071619901 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079997767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066467574 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066832906 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064272403 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070823669 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076250849 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067094059 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066570539 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068767013 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086232894 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067019338 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079361763 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070707491 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068993948 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067789207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069895854 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076498445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067345152 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085549003 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0678506 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083118624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082529955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080534818 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082929319 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068808654 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080302115 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080283528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069199826 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068216574 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069852584 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08263255 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06494865 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068028894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077344696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068831738 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089693435 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088839227 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067389512 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075705168 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066962114 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066648127 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066225015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088622975 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068514965 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066665685 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070239741 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069195472 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065013843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065472666 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069812408 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06469985 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067902615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06902744 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069317879 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069013423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082810848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068825276 seconds)
  done (took 8.748643957 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071673607 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068777113 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069220047 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068211223 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068629176 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06840509 seconds)
  done (took 1.933481643 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096035551 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069626517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08004307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072799651 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105334497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087152213 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086717051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078983647 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083770404 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079159696 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086431489 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088291479 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092811508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072839503 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086401126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071985887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087090748 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075958992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078536854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073008919 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087236969 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072600738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073437585 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081592713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075761589 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072318636 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067129725 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078828195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078738564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079308897 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072755134 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076216965 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070610581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079142236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087022117 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070495624 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07176809 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077129152 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07262305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07554107 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088076473 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072969538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075257694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077315447 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078657055 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070505705 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077165894 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076231632 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086401876 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077355055 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07707969 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071506481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075117598 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077214684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07005289 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078510514 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076967189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086491794 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072560543 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070428106 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069355126 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075082044 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077999363 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075396898 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079294926 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077027694 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070466839 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072565268 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072893463 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07160156 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076638469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068892077 seconds)
  done (took 7.091047214 seconds)
done (took 28.090759235 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547568485 seconds)
  done (took 2.028096831 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604931201 seconds)
  done (took 2.112929815 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.605562527 seconds)
  done (took 8.115297723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400093687 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475429866 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689270028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130665147 seconds)
  done (took 3.234261656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673829091 seconds)
  done (took 2.193774123 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214192072 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196484626 seconds)
  done (took 1.939835556 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380396619 seconds)
  done (took 1.886692438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11485361 seconds)
  done (took 2.623019341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265435434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164466526 seconds)
  done (took 1.938535192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464179675 seconds)
  done (took 1.971115641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.893836971 seconds)
  done (took 6.404477106 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217439167 seconds)
  done (took 1.77823095 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244585873 seconds)
  done (took 1.764520025 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.672034693 seconds)
  done (took 3.186961569 seconds)
done (took 42.69382591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081164175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081134569 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080554945 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078456735 seconds)
  done (took 1.823419677 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07886083 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074487633 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077158467 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071974231 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076324331 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073048827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074013876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076581048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072112525 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07190657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07229515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071924896 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07436309 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073684363 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070783941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074617718 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075728343 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072151647 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075165784 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072047016 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070785365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074473568 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074577786 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071582312 seconds)
  done (took 3.290871262 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079103094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072767382 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074521454 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072023987 seconds)
  done (took 1.823413687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079077201 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092446187 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089519547 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077446639 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092003954 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085854966 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068354065 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068427672 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072767632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07638144 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067695936 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095614554 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087072331 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07597091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078625508 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065821612 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067762195 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087401109 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07760756 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076795224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06903366 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076244353 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06721319 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087795049 seconds)
  done (took 3.401979333 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079682112 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102714349 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077274465 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087231257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089097613 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065188238 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074058413 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088713445 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122611583 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064838656 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069634569 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065296276 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071798827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064792603 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075715382 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104496117 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107849466 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06790352 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09500705 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065067475 seconds)
  done (took 3.16944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074627808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069747025 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065631137 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068564387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077049163 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072617803 seconds)
  done (took 1.958527532 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069696622 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068383058 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067656168 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066949793 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07145437 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067109118 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065683313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066721828 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066665748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066979321 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066381894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065334946 seconds)
  done (took 2.334459961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.423921147 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068326019 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068975453 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065509023 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070440459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066067981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07896277 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067555365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089553236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066092322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06595866 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067949225 seconds)
  done (took 2.727161279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21124356 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076179434 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237915555 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136531315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111580108 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115874303 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103380555 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112691303 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143567408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102133325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167883202 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166034631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106732461 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137116221 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088538009 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097229002 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155879404 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162408316 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103123493 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165092409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144571526 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124316932 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146439327 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101456223 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105551467 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121524807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070696869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079405293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171167973 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13150081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146563068 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110717595 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093335159 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176662614 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171391612 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142707798 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134123848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082934174 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101653397 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132113986 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197087103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087749065 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161691546 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244112842 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080978284 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13478032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121815029 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121446183 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107813449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09022829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147345522 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184290245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140231241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08645841 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113361658 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115342561 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116585771 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103253522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183125324 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162328989 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128202723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071051675 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099645393 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153654806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131521357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109643422 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128222873 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094248933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133226574 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154407923 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119085732 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144566681 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128256416 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087881232 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119540041 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139748851 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12797549 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170412534 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124588247 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072287415 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124936872 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103164792 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081093386 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142264345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075062981 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174350321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09784398 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105590368 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112032485 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108486172 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108123942 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160599873 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142789407 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242496716 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065802988 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104678097 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121256212 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148299314 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087770167 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109149339 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117460469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077788443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140204848 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075002637 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124987318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07543711 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125941186 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134218994 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075228566 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121002368 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101220744 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099852618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133747921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161055546 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089303084 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08235916 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167904206 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123237619 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104921736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143800865 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155886448 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098682424 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102399607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150490487 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179764256 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08925735 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162986462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107943347 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083154036 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086882355 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123593658 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112526217 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121533812 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081674894 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118726374 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169143019 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074347016 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094935379 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133430219 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078921421 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07977031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102742364 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099860467 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094335629 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099547678 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103815672 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136597682 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122096485 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103776821 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269200184 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098491313 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172085229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088839922 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100682623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103911467 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06931266 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138617872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158882991 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079510797 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164847803 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124868399 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105363818 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119350285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082710605 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141040142 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078736455 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070673415 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145561994 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110529855 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109728789 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150897867 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104323196 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128294484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120193804 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135638508 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133236221 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129725387 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105887235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088055741 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111687275 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126189868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072747509 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091552891 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079868446 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103896217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095755069 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083072251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142563693 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125123564 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099794764 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111290652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096494378 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147338182 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076197471 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129460492 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119126114 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093727899 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151377931 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151413834 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131347463 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098389695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143691014 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069458248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072783127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087910117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121064018 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081122601 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081339096 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114095021 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142937691 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125989539 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132595489 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108940728 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116984724 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150587355 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068261538 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112681155 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142857486 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117944768 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102109308 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086436478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09520454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135821648 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101777854 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171138579 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108875534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121385946 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144895642 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09639413 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077233467 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098762022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133381633 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098783915 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136080743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095456932 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084409135 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104257805 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071908279 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095640041 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120417364 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113975825 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128551632 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109192978 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12506713 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07422863 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11059533 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11452973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115798551 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061898163 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113953491 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152124907 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090000685 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113336104 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144807219 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076039313 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119027903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.427472824 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149671749 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085729349 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111420698 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120572141 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130773424 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121750686 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142003806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109679462 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137545244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11029245 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086229776 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088435125 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098280571 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106677825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09617156 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109801183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116191205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095844783 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133958572 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10386458 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109549586 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119008313 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096879269 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089637499 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096963913 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175189511 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119509307 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171917301 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098490279 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146151686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165057083 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07500109 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079117469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078178013 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139963189 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083618382 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13110912 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097698607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105967415 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124254373 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142236138 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095295208 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067862371 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108517746 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134039454 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111789947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098149003 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107341268 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162316188 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099700214 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078966383 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11303511 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103653737 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101748973 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32167898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061289105 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098211698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075426707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080965157 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128039766 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154583824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081860344 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103596442 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120345332 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111045234 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128420304 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102112207 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099386366 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113988148 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150542392 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128947365 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089569049 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11260273 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129973665 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157564017 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105665029 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095480529 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171647278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152803856 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16151173 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088459924 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131663803 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114643902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108008089 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139795958 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08299319 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164379075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081949864 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136763004 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103984565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090547067 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13063861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098513263 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088033022 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14808777 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117952365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082264964 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077917693 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11816663 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120318408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106895402 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07524786 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139171657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072324873 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131743154 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168458859 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080944927 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104132702 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244257537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080645566 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108209385 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103185239 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089848867 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098912325 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175326423 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08906434 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151437651 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142719616 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113252977 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137371601 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100210559 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6363602 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07808905 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152351815 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116573338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172841409 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097429711 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11793235 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109356824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123601323 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145039758 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105419303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177665736 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132472627 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116100893 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079405377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102878594 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10262798 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089053576 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104691613 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114040013 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116665184 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094001386 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116481866 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123550172 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081757316 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095175213 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156373091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116913225 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145071777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140206335 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084748069 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117866915 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138013958 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078995968 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121966664 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152447937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106028957 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097152548 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080458494 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248488224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173487604 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073721327 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164538103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120739919 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111160532 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11464718 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116115344 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133514206 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107497714 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120963876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093642683 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109891877 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112220945 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081779171 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077079868 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104218136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112083221 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096821813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098306476 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097529024 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151602515 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071448355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095646778 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10326622 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145393916 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175030113 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087901821 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082851184 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118623514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112818126 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113266017 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120474058 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07958885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082028289 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082282143 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076609359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108540562 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111829144 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104435899 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111499454 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164716133 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082109751 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224008232 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094883012 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104929909 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069592963 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079167852 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095535629 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097274552 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108613639 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100679675 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170840122 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093988688 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089106924 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092572556 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072996191 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082392582 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274417338 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112348526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120053577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097671054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062591006 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109952284 seconds)
  done (took 58.676744999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111145783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083457786 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097065297 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149236336 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122816524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212078742 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156737646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19976666 seconds)
  done (took 2.812784757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070946084 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093940967 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099595833 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083062086 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066675075 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069341368 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224817574 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079927952 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066414631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088688309 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079805448 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068653721 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422698557 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06626049 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069560912 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062839841 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067202052 seconds)
  done (took 3.451657825 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365519246 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361356006 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372741519 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073035481 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.811039522 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08890857 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.086166344 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095903596 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070731859 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279660435 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705436035 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094381159 seconds)
  done (took 14.082391431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079178483 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070975132 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084857677 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085221289 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073609616 seconds)
  done (took 2.142529431 seconds)
done (took 103.250936412 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083405642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399375652 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054224057 seconds)
  done (took 2.164123346 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086602546 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085002861 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085025972 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083921576 seconds)
  done (took 2.027323686 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0777659 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077024665 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084823649 seconds)
  done (took 1.917814646 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225606041 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140640842 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087587232 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0839474 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078631314 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079266681 seconds)
  done (took 1.925177861 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074033971 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076022172 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072776679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076777143 seconds)
  done (took 1.978823282 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07947591 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055034261 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055485214 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056111869 seconds)
  done (took 1.925618554 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090070044 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079375724 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079418421 seconds)
  done (took 1.928667273 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10981493 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086273326 seconds)
  done (took 1.876063413 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083956898 seconds)
  done (took 1.765474245 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100750729 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115109056 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129962779 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11026479 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137796323 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109667599 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086481892 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087995966 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078116879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088048379 seconds)
  done (took 2.724175784 seconds)
done (took 22.45168129 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080780184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367251614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36198512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092331014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670053395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357593487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988569966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092762495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114407198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068615549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084451723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65130739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01431436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322971423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002272896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324852032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649584881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069002362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068048076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068319197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974821022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068159269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068322905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068535779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648837861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372809522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068813323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322732729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068130771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069961791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355611839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068663189 seconds)
  done (took 16.271296737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073726599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119700805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074636688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084724328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070953118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070200092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072372281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069308789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120089087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06847092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085093654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068180718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07250606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069112901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087846466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068437975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069201921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069012833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068846911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068889567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087004459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068156923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068421623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068635656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068046337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080018199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068821268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068574443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068886371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070531073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071991118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069798591 seconds)
  done (took 4.106248801 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11815819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12725149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074599863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103402751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11338784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070651256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144192336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093000558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128408031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068901209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085320532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068707813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101662379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069734575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088598253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069453374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069747243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069683328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068998192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069230714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088415927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068939788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069794353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069507133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068968722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082149198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069422754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069196161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069260953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071175928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072425578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069592293 seconds)
  done (took 4.368542864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076229925 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07622918 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08378009 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084279448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069590572 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072954723 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072998721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069964613 seconds)
  done (took 2.304902263 seconds)
done (took 28.739325196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082339124 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070206078 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073356747 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081226968 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073542767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079046195 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067778858 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075190024 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072697009 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073717903 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075553967 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068238667 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071844582 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068107652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074538255 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068511158 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079899309 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072353404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07974285 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079832041 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070356059 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073515296 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074771035 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079398522 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079574459 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079677537 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077950425 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073460608 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069465718 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071087923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077099689 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084146268 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069247971 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079961525 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068475132 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068493355 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071961022 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068518742 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080139964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077093045 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069943748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076600268 seconds)
  done (took 4.806110511 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090120967 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091773289 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08497403 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061701686 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067630633 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065459896 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089340449 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059824037 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059886512 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088288162 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056326462 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059762198 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063204287 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054764079 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059866275 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057274633 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061964525 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056135036 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059879111 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060110111 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058598219 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054707948 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060559501 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066095089 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057077314 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062356799 seconds)
  done (took 3.418590561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076094415 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084750727 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088742095 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12777311 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106055462 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077716347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078804741 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093635016 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086614349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067413902 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071815254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095384298 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088907759 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074643998 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068134493 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085219328 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082855052 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069938165 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07420814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091549156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084995717 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084435928 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093514953 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081628612 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067655746 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070355779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072356654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081831361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072678163 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077086799 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071984781 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071450851 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070092414 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079305027 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072039538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069666076 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091199908 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077878544 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078151556 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06871796 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071067454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068958561 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089777698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123211609 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067881983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074371031 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075907242 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077600013 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068129002 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086473614 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079015906 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067740126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07111426 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067503411 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068082656 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081276485 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070134357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070382747 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077084448 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071152077 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085983941 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07191267 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083381489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067676815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075383656 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067329111 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068653342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066967998 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092784032 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069707604 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108681743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069168436 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069106652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076774954 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075840276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074065029 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068461939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082924584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07817633 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071597832 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076524434 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071174471 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071312969 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08829376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070540555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069688991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069177155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074490417 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070606009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069793679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081199817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068120332 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070971007 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084645948 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067605504 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069505826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073998643 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07289089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067939737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079324763 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07294971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068964699 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077423567 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068157055 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07102579 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078357916 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074503353 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067344142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072700653 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074186891 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06899772 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069810189 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071202839 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070002152 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076101568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0742701 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072973052 seconds)
  done (took 10.68832653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165155224 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154893537 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071667528 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146935401 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076791109 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079479887 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160639472 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095128353 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068389116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068644198 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069278948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113064659 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106452249 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115870321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079189242 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068392652 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083467872 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114551558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150306298 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144109788 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084639877 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077237749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070533111 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069485166 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07109557 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078679681 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085986058 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077187654 seconds)
  done (took 4.493202699 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08424917 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101160612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074668959 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089837742 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092021083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06821416 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070457751 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070054444 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080913811 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079726217 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067894634 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074007215 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0747416 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071753492 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069341578 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074981936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075689837 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069884965 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071386234 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073273506 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078982092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081612905 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072353083 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067563233 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074472157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067420069 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065155672 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085372381 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068646842 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09058081 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066091422 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075429501 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082058069 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069014172 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06779621 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068190801 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06780175 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067889967 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069711669 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066952081 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067068565 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0580948 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067190658 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080546939 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074222264 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056940393 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072922244 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073289533 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073323121 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065898638 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071069745 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07092915 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071291045 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075481054 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073060655 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073044837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069091075 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06594996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07615508 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068405766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065106447 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066790997 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072250879 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066815814 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076041629 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072281264 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066422923 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067742328 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06983475 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073965917 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067702953 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071041298 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065601161 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069816577 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072300537 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069688601 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069144744 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066771175 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067894735 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068239319 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056408321 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067725826 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054163624 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071021468 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066088085 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066522514 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067810624 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072996246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080968851 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069060533 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073638946 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068914803 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067047969 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071254405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060837919 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070642544 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083080118 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08363174 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067999986 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065965672 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082752234 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072802041 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067171318 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056567085 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075231373 seconds)
  done (took 9.256334352 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098183688 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088921854 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071128442 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084312258 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092419142 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086936422 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075745655 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077204169 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070013657 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08292715 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074134034 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076892903 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06887872 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077592764 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094019341 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077408664 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070486144 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077681323 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072243022 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101614874 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083214552 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082485905 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075904337 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068755863 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077130824 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08079735 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089789705 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080401253 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079021232 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076737021 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080562938 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089845694 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074941133 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072550474 seconds)
  done (took 4.48363972 seconds)
done (took 38.839802987 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.798048358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964392214 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.786724498 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.1410672 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856798231 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.910415247 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.831915981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777931345 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948993693 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81201024 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021386687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.887628323 seconds)
done (took 65.461603936 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.83395014 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.919485982 seconds)
    (2/2) benchmarking "String"...
    done (took 2.051950947 seconds)
  done (took 5.686596961 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.076375349 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.312949977 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.027117303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777196855 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.78235213 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.081859634 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.573728598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.294519759 seconds)
  done (took 30.568479889 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.937667411 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972444422 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424937114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.452673206 seconds)
  done (took 15.549820819 seconds)
done (took 63.507721328 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.791342883 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.838071278 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.786457081 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.76071037 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.836830194 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.799413776 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.020664221 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.004915497 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.776588518 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.762335682 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.778726962 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.217224447 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.786077185 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.17766224 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.777688097 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.783910001 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.857210483 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.211965607 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.933276512 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786186119 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.793124677 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.784691747 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.782953554 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.896962392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.789540559 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.781654074 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.240398831 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.78055817 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.396734128 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.788098373 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.807984959 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.342301875 seconds)
  done (took 205.588072842 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.781195889 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.844116106 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.923326496 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791201615 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.255921166 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.982855966 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.920110016 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.414639462 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785854352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.809207146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.954761798 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.785513779 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.996898932 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.733750196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.7902002 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.783680282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.9071246 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.013658293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786910417 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.053408987 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.800737194 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.862839909 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.819314659 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.934371786 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.799460501 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.805848633 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.78740849 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.796964239 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.975246008 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.867219796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.80321845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.808809718 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.978915938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654424728 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.78940856 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.795194134 seconds)
  done (took 170.313016927 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.927867506 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.784679869 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.782444221 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.785804826 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.783639444 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789263883 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.783715887 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.912512004 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906272446 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.241983374 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.306135257 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.833332787 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627918906 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.779812371 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851895017 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.794236152 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.786369527 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.799236887 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.811876677 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.780352893 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784074511 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912402042 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.792116076 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.897429679 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.791926941 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78327763 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788724241 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.151235797 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780310137 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790678038 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.028847731 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.780135639 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783558964 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.682894101 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.121106239 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870341066 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.782775506 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789642633 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.786249153 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.00616179 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782225961 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.783685761 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.789115786 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963008406 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.785706787 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.910185058 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781584417 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278945357 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.783102952 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783952816 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.785835834 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.916449716 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.710630839 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783838123 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784456087 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.789117227 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.785773291 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784955962 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.797559237 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.728148772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.863706125 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.785591327 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.789032302 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789517969 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.786003338 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.864609993 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781095004 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.354135658 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.840709092 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.017353653 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907638953 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787972223 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853267305 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88055846 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.784023121 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.78743503 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.787714558 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.787277566 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.785857457 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.868907708 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.783182951 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.937364837 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792482385 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.786210724 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.838700001 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.856082414 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.784226339 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.69324931 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.788104358 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.78744533 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.108148074 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850969652 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.783487964 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.788279601 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.788755062 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.789108344 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.920176284 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906937481 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582245174 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.787927951 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.728551542 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.789744011 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.928704747 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785756064 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.987803916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.789451157 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870029477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.789614762 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.789952614 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.789104162 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.819848375 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.788267984 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.845519512 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.790264733 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.157978533 seconds)
  done (took 404.591980424 seconds)
done (took 784.195263333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.471059766 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.430512397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.552157022 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.463993533 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.436466812 seconds)
  done (took 14.079628233 seconds)
done (took 15.807440629 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.879395513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.883033674 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813339306 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878441706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809160888 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.879498063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861183438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.815159073 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.843351832 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.816363997 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84688272 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.816075455 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800338211 seconds)
  done (took 25.66722733 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019153081 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.025992865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858307032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.025940069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834128684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.019828829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.952126951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.940220532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.9403763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.807127963 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802390685 seconds)
  done (took 22.953877875 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.021408807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.047530687 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.860746088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.031873147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.837234612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.025748099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.953514311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.94106576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941980129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804330623 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.801141913 seconds)
  done (took 22.993004874 seconds)
done (took 73.339974254 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.798302017 seconds)
  done (took 3.524893816 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.819398367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956002437 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.804429254 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.800409584 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.799097445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.798502385 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.801642057 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.798484886 seconds)
  done (took 16.306998167 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.798252896 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.797298363 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.794753479 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.798068954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794563323 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.79758885 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.797025758 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.800018351 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.794041892 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.796066561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.796375582 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.795704617 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.798702058 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.797764561 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.798004343 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.796778651 seconds)
  done (took 30.4811922 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79823972 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.795351585 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.797228982 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.798044588 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.795297423 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.795364521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.797346142 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.796976942 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795889897 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796972101 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795038934 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.794772305 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.795707003 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.795359126 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796944955 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.79450538 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795629979 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.799919847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.796990109 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.796577909 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.79620667 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.796445739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.798040204 seconds)
  done (took 44.846447498 seconds)
done (took 96.887508925 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.488909456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.211705671 seconds)
  done (took 8.427154802 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.801419042 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799994212 seconds)
  done (took 5.36342245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.798446645 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.79891402 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798890236 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.797202593 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.799908969 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797509332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.797811938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.798482777 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.798995426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798786391 seconds)
  done (took 19.715327251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.80054706 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.799337401 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796562156 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.800722215 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.799990486 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.796240896 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.799593851 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.801936976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.799595826 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.797159582 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.800559925 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.797626598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.801263983 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.798390497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.800931094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798257525 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.796624123 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.796082276 seconds)
  done (took 34.1108007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.801510959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.800682315 seconds)
  done (took 5.334219717 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.797181281 seconds)
    (2/7) benchmarking "second"...
    done (took 1.797261507 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796699969 seconds)
    (4/7) benchmarking "year"...
    done (took 1.79680667 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798639145 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797122011 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798483081 seconds)
  done (took 14.313305649 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800871162 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.958433934 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.023479517 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.470874143 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.803927385 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805122035 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.762486122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.804519246 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.805105897 seconds)
  done (took 19.96539574 seconds)
done (took 108.959060331 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.637721446 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.796014347 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.18452518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838491074 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.849047591 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095212127 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.816277185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.017627467 seconds)
done (took 42.968088936 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.836914741 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.259863198 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.283702608 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.595223754 seconds)
  done (took 12.870275106 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780159841 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.309008024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.828284128 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.398027624 seconds)
  done (took 20.088306355 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.165728697 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147290785 seconds)
  done (took 6.050758991 seconds)
done (took 47.581519023 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803323894 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.803478391 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.80264176 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.801628802 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.80432058 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.799607664 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.79990214 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.80093515 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.801516957 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.801856135 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.802120059 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.802667374 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802852639 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800636677 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800186595 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803069329 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.800508934 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798466794 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798904283 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.800866248 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802046892 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.800388599 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.800227139 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.804115784 seconds)
  done (took 44.968394808 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.803776071 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800989956 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.804226777 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.803079801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.80036457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.805600994 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.804349509 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800027803 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.804018021 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.803611367 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80078179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801618293 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.803192314 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.800552605 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802929262 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.800139514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.803215373 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801568224 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8041937 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801971135 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804396198 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802230166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80154177 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803006815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801387095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800663653 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.80470177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.801758914 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803976956 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801000101 seconds)
  done (took 55.809079374 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.809437784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.81389654 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.802790499 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.804609045 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804682908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804190159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.805348819 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80491349 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.804647249 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.804803107 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.805226414 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.803615144 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804390501 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.802988251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.805749337 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803881376 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.805431681 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.805042465 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.807883762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.805068762 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.80423942 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805635895 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.805491432 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805478312 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.805915611 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.804720731 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80530949 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.804643131 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.806165996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.806723083 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.805739422 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.807029983 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.806423717 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806923534 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806527765 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.806929775 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.812839319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814377606 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.805729812 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.80525595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.807755425 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.805713448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.806738342 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.807699301 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.805893922 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807100268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806680011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.807383078 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.807130256 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.808988343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.807029682 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.806167701 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.806957117 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.807152414 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807435983 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.807486719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.806015874 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.807121916 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80822628 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.807342887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.810116873 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.807144377 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.809082708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.807186194 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.810385592 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.809064732 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808196613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.810412617 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.809647972 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.809506211 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.810759711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.810250391 seconds)
  done (took 131.831986859 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80903519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805970928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805810189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805547461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806893804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810945348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806213535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809803973 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806150112 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809199152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808470392 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805478994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80440961 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809680224 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810268509 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804562771 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809601276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807013557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.808461866 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809189004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808781389 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808971442 seconds)
  done (took 41.510085698 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809508824 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810031953 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80939898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.811389483 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80822675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810167318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810514617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811241667 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810720038 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809580374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808375791 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811522239 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808794829 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80882739 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809258168 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809428859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811288312 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81080231 seconds)
  done (took 34.320294108 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.810402502 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.810460307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.812872613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810108331 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808896474 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810398988 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808452388 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812716568 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.81130822 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809280691 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.813413245 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81138474 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.813292194 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808219551 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811781007 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.808884172 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.811988898 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810202549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81447807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809691709 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808416945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812183567 seconds)
  done (took 41.580652406 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813416935 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811798064 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811068922 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.809379757 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809472803 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813346873 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.812195612 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.812418759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812340575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813385861 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810418038 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81330766 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.810309818 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811343381 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811325597 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810332331 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810493603 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811428704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81424886 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810792089 seconds)
  done (took 37.976769435 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813825869 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81431591 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815662564 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815558368 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814256487 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815775732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815214565 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814966214 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815518691 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816503347 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815518803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816528068 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815458035 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81549957 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817435087 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8183976 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814639084 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817207094 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815876239 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81564459 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817243242 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816941539 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817202543 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818811843 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817279951 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81608888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818086329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816150831 seconds)
  done (took 52.596641549 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816169426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816679189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.810794899 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.81231852 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813419268 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812054282 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.814056765 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812268759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815045307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812832598 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.816007558 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.818159996 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817201673 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.81804489 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816072839 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.816894316 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816323456 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.815624575 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815178414 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815362464 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.817236763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815341551 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.81733896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814530894 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813190674 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.817668545 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813821561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816265038 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818060713 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815049493 seconds)
  done (took 56.205422477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.835545142 seconds)
    (2/2) benchmarking "in"...
    done (took 1.834749415 seconds)
  done (took 5.41708591 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.814841094 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818787663 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.819236881 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815219492 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.81374265 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.817570231 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.81560896 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815157872 seconds)
  done (took 16.278034736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.818308551 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.815494667 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.819611168 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.816343884 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.819227543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.820098768 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82820478 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.816372525 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.820766066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.820626351 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.826901277 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.828035319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.823913939 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819964095 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817679664 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820250786 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.816885309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.819866438 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.822099606 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.818571451 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818763092 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823005556 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821291789 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814505536 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.820311902 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.832959973 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825893952 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.81891465 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819685596 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.830413667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.820844612 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.816060757 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.819350148 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.8204394 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.819770582 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818582248 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832436257 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82300076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.828039209 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819844485 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819545037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.817142375 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.823849009 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.824284023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824151507 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820085618 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.82110373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.817277231 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.821051646 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.823955384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.825835924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820515494 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.817453316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828173169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.823920841 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829549431 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.821367589 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.825216903 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.831946917 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.835552787 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.837738659 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.831225686 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823811432 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.821574492 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833447407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.848151425 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828719337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816432559 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816372933 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.82029045 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.830941646 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83753624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.832136028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.819086856 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.820776687 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.823642205 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82228623 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820023839 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.829685265 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.823844632 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.82060322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822653803 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832169828 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846511622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.822000147 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.820458697 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.821301253 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.821393079 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.823712954 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834206456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.822253999 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.823742713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.824268201 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.822515625 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.828812472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.822069434 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.822963288 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82565919 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.818132502 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.823956668 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821707878 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827608616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.833482428 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820878697 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822616607 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.833629943 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.82271748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824439587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.832908832 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.820097429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823193392 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.825484368 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.83342274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.820269651 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830794081 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.834571134 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.822712821 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.826203903 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.821970749 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.824802662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835379377 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.852940627 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.820273668 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.823275452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.830116009 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.838529711 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.824351623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.82924289 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.823819983 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.823115257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819420411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825789815 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.824259515 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.827112238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823750197 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82849789 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819325552 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.823735573 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.824500512 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.82704266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.828167922 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824705779 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.827566362 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.827123459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.823429631 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.828337206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.833831524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.825834045 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.826823445 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.827654816 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820291352 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824220444 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.826508387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.825564177 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.82693252 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825482814 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824621878 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.825263123 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825490868 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.825730673 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823694547 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.827840865 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830264639 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.82927237 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.833807607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.826441583 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.82223448 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.82669035 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.825556435 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.827036131 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.825573214 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824404555 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.827421514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.836516037 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.826054703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.826236155 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.831483202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827156747 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826731067 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.827084054 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.832137202 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.836965462 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.826227481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.835488959 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.827183826 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828789726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.830112613 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.830838993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.8294398 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825242309 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.834545178 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.83440686 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845310848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.838937679 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.829954674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.833423992 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.830227407 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.833695689 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.836580796 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.828915803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.826869356 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.827260312 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8283199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827834116 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.832843567 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.827963394 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.830798358 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.828147335 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827064338 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.8296569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830045323 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.832951285 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831822416 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.826078013 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828816933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.827461275 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.828406083 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.826490841 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.82938806 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828336037 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828236936 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.828591679 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.840819754 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826226052 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830856875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830658746 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827624746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.827452356 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.829774887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832733459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.83053481 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839342787 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.833000697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.832167343 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838681273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.831731416 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829806082 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.834445338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.828857631 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.825330554 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.832268252 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.838846724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.830037829 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.82976475 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.829584189 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832294518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.829655544 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.839522058 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827699582 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.830169017 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.828742015 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.83326115 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827051788 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.833322741 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.832803642 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.832906044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.835101659 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829464102 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.830777839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835150177 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.831060657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.833740934 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.830737632 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837056326 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.838806376 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.838757747 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.832488893 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.836718827 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.833169622 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.835766397 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.833293589 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832223949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.831330727 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849359235 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.840282355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841945002 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.835022087 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.830687159 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841872865 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.83193435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.837462461 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832072675 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83464474 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832342154 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831575541 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.828399978 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836499971 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.829327356 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834337692 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.834171439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.836736638 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831344956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.836702479 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.831836025 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.832756168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.83299054 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.83385663 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.830992057 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.840024812 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83581421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.836155382 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.832567444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842385854 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833030049 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.837521423 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.832199422 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.833783185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.83372278 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.836483705 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.833638236 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837819624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.841362433 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.83635973 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.844187892 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833921633 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848485307 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.83248226 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.838645392 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.84282192 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.831323143 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.834138952 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834825578 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.833421249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.844332591 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.831656385 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.835231392 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.839973013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833265009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.835571869 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.83418661 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.834402083 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834816208 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.833778825 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.846694607 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.836083199 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.8402124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837983594 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.83199238 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.835481209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.833438804 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.834158005 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841284597 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.833455906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.836375889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.834402253 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.83623413 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.833222008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.83339203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.836007974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.829993488 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.835578162 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844087348 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.837489381 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839024594 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.835711178 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.849084577 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835790195 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845290628 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.836469441 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.838270781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.836265335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835353629 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.841217897 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.837697894 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.840611667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.837383374 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.839135197 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.841423388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.836197581 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.842750339 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.838815631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.836062863 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.836829833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848867196 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861170256 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.84026944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841084899 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.834496319 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.84007606 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.842224521 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838551004 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.837798637 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.840354557 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850100897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.844273459 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.839243049 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.835576927 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840575101 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837615566 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.837601908 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.836403382 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.838367117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.837409303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.841740376 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.838283682 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.844551091 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836725602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.838808751 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840491625 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839347739 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.852066345 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.837235118 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839785388 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839043202 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.838722435 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.839752185 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838895281 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.83637584 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.842418743 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83835993 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.841633341 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846557565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.847120821 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.84211151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.838504491 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.838567944 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.841716565 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.841794561 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839504185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839086672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84046348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.842639996 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.837733439 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.842967416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.838176984 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.83833476 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.841647027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839189933 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84127386 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.849445183 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84124683 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837098743 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.838551271 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838814413 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.840711644 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.841698878 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.851919114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842438897 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.851266236 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.850129076 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.845370663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.841975875 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842255055 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.853039883 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.839474465 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.841877379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.840403835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.84389415 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841797975 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.845929728 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839917241 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.850332728 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.84120233 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.841755516 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851197257 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.843706975 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.840371705 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.843301996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.846056608 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.841165839 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.837351371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.838504601 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.842626873 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.851267257 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.844965121 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841554984 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845082042 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.839491067 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844832209 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845155988 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84096629 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.84318612 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837957818 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.842068781 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841127333 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.841719865 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838595508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.842265345 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.842938878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.845127 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.851131649 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.837807362 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.846275717 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841622417 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.844467178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842586837 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841286082 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839436914 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.8391383 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.843033995 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84241923 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.843481374 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.846614068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.843961928 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.844342712 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.843876855 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843279108 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84856677 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.857246811 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.850703707 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.83925897 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.845113744 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.844168957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.847629616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843952255 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.845101189 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845903769 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.846548062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.843105943 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.843760766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.842895499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.847243474 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.865427032 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.841496981 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844240794 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.845764702 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.851175802 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.842231061 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840559315 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.842279411 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.848113872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.847669796 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.852548152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.845553098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.85246348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844977331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845421725 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.848191993 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.846978512 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.85496556 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.849672319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844492501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.844616466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851984743 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.865981562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.846892473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85649885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.879928397 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.846326459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.847058538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.842869828 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845616393 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.843960652 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.851526784 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.847505193 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.845522278 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.843438677 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.846758561 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.849887219 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853603463 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.84969153 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.845744909 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.8460707 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.847523227 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.851754402 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843249216 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.845418423 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843639678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.845710356 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.847218904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848631172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.848967413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863891945 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.860311694 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.845305994 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.846217331 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.844412865 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.853789059 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.851477581 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859520877 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.855359496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.847230176 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.847215393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.85015377 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847748945 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844472619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.84945072 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.848148445 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848205337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.842149816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.864436617 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855341497 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.856411896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.847305542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847939074 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.84799525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.850836389 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848412603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847930061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.852884112 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.849098658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852318886 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.847198144 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847658077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.852986599 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.85589928 seconds)
  done (took 1095.733811238 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845584287 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846124663 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845378066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844544811 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845920468 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846125607 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845034195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846148132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844806356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847080005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845523143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844444669 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845977008 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846985677 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847429099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849200363 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844499924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847019478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845639234 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84726744 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844095837 seconds)
  done (took 40.543551514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.849642327 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845779363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845764553 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847899645 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847575101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849098412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.846086874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85029007 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850351717 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847016579 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849800332 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848825758 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84792008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.847113934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848340148 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849773447 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.8495667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84785831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.849778956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846833642 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850273678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845763543 seconds)
  done (took 42.440377895 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.85057384 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.850474049 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8530376 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.847759749 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.850357191 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.848183452 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.850459455 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.852028262 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.850979201 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.854946631 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.851503941 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.853320606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.861240843 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.856144327 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.856198848 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.851321264 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.996297917 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.853557793 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.852822579 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.852698999 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.84976112 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859462425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.847324655 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.849079349 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.851616658 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.852064002 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.851504801 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.852565336 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.851352906 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.854142314 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.857896475 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.85380903 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.852542082 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855329033 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.852274318 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.853579512 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.856164996 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.852935038 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.849478229 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851403755 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.864730128 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.874112638 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852251413 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.862164559 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.851501064 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.850566796 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.855586705 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.862478269 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.851431438 seconds)
  done (took 92.756245274 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853280952 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.852462169 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.849884307 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851459746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.852580863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852894262 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.85204019 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851585357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.854026039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850335719 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.853551605 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.850955649 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851745484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.851811517 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.854056186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850327964 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851015992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.851699542 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.854781603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.852017425 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.850671781 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.854104018 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.852458105 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851198935 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.85418239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849655598 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.852272238 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.85748293 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.853476937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852127525 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.854336815 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854946435 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.857165011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.854461831 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851496555 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.855101865 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855251092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85360544 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856054269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852447009 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.856360556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856441636 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.853929415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.856047357 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.853917235 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.851722836 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.855071537 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.852255002 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.854408928 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.857596587 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.85852535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.852824751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853678539 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.852986855 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854767519 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.856101645 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853371885 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.853767305 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.855126114 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.851306851 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.853434239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858589947 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.855642038 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856096439 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.86068216 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.854168526 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.852966397 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855569597 seconds)
  done (took 127.841440759 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857624092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.861029343 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862898001 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858667211 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859007569 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.858859493 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858617001 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.857491013 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8587897 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85904866 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.858739275 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.858206598 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.860593143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.859542768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.858840924 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85814573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859882535 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859116205 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856177921 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859585074 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.857722365 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85992383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.862059811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.859943108 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8604112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.861047699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.858873585 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.858566583 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861716405 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.86108675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.859373726 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.860639563 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.861855116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.860183469 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.860566475 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.859577573 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85778434 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863506633 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.8606811 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.860240857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.8633492 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859631891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857568723 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.860921622 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861694669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862589736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.86009012 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.860444344 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.861969968 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860837673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.860981706 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862735028 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859704066 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.86219332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.862237365 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.862641701 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861849793 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.867588817 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858433102 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862436847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861338918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859779065 seconds)
  done (took 117.13429313 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85843347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85989707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.8563782 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.856646803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858751414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858935528 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.858010879 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.857500757 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86052058 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857831716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857909301 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855858895 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855166417 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857841257 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855172968 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856387403 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855373533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855534196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857600202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.855504191 seconds)
  done (took 38.937327167 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.856584472 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858896974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855234288 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856545031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.858267812 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.857917383 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.858678089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857563844 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854863836 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857145547 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857848373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861271268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856155604 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855643812 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859302585 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.856341173 seconds)
  done (took 31.506567633 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.862111997 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861856219 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.865476187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.86437519 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.861483197 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.856579591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861531824 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858535418 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.85816281 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861902443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.863784432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.861113486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.86001185 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.862861046 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.858733678 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860244623 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856968262 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.856983209 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861859351 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.860674244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.859856365 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.859880567 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.859238903 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.858558098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.857004033 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.856764595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.856693979 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.855657523 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.858168603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.857154838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.859146049 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85822655 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.858149282 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857693329 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.859855335 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.857206588 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.859363252 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859804286 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.859477298 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859124918 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86069579 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857122176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.859104437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.859540199 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857931535 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.858671302 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.85700619 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.857663485 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.858182715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857754881 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.859719656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.86049362 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.860699964 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.859746459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.858648762 seconds)
  done (took 104.062938813 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859820157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861702024 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.86007477 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861306829 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859404081 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858267985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860919241 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.859578743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858133634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862053886 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857494204 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861454513 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858381677 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86195217 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.85955065 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860239405 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.859002555 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857938178 seconds)
  done (took 35.270674883 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.860060319 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.862811105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.859489428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858926287 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859742043 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862564282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857437231 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.860238905 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860225732 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.857817231 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859018019 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.859842209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860595836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.859035283 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860689075 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860409977 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863854537 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86179057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.858631214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859320296 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861687382 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.860800435 seconds)
  done (took 42.722000973 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.864690609 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.862881122 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.882673673 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.906851645 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.893534521 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.861137377 seconds)
  done (took 13.068273011 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861615881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861328314 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853836321 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852752486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849191154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85151106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853031047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852203245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848989038 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846752574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850622137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848015389 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850077584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851377292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851555061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852347465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850092739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849657417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851063064 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850815541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848837007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851953466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848909595 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852138445 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847969826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848645148 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851972505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847931971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849255307 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851830515 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849989572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846706135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850427548 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849019321 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852413459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851266598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847994073 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851626992 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850316922 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848933268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851660492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85188201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851288565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849827984 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851062601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848820099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848122492 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848046784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848096684 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851869383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851833852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849668962 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851055935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850546205 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851307768 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851435498 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849684189 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848856594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851014063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84923022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848931497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851319664 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848613779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849101954 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851638172 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850657758 seconds)
  done (took 123.9385343 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848328493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850867065 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850021353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849715629 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849835003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850825144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848682469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849372186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849728797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849050294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85362981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849950257 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848865516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847768348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849972784 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849667164 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851067613 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848371951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848919358 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85201794 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848715719 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849332441 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848488212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849640791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849296175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850291606 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849222385 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849245989 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847436543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848670424 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84857516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849469676 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850450353 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848417465 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847037209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847662877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848236186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850096002 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847728907 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85024316 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846967546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850868491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847412904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847335511 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846680929 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846596402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846501893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84694129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848527932 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847164879 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846783684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846458305 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84665903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845537039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846976687 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845608058 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845888751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84533646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846449011 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848374798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844129176 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84499212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848021727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843651313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844013541 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842636791 seconds)
  done (took 123.768261122 seconds)
done (took 2549.952970372 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.896443346 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.938219139 seconds)
  done (took 15.613411982 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.007965657 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958908644 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.844211482 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.890142436 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.845015263 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.839662239 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.847915246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.845243948 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.844755185 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.844824592 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.845141068 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.028672128 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.847178729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.844124306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84401736 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.937380144 seconds)
  done (took 51.897283035 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.847043305 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847726223 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.858892089 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.851109649 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.846652102 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858551898 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.881042591 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.850097824 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882003288 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.860033115 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.916790551 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858444175 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.847083854 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.896821148 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861818831 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.861470153 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.93388291 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924844668 seconds)
  done (took 35.462374066 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.925586492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.845719141 seconds)
  done (took 10.556335142 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871762744 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.864395171 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851680333 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.840065878 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852416267 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.880214845 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.879179131 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.847416317 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877197907 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863204692 seconds)
  done (took 70.406163654 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.850864478 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.845904644 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844118445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.844554286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.835961656 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.84253126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.842801294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.842191551 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.53179436 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.88104606 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.850412209 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.848091889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.84292018 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.845130088 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.840765652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.866125977 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.959488673 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.841111508 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.841135119 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.847021321 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84350281 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.933616016 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855917079 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.842881929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873132407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531250664 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.853395275 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.847971842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.978945676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.841438293 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.841739061 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.842654765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.845038954 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.231804466 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.17785443 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.843630382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.852078292 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.851076357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.838625076 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.012463186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.843014752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847450607 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.837521793 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152516415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928886195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884342853 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.208071473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.846443468 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.842848 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.872228704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.845264526 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.844164869 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.856149395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.351637905 seconds)
  done (took 131.423012497 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836318168 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.41120635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001609806 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836447241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117399368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079330363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.83790749 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886440639 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835654356 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084718788 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012790903 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954962292 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835134633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834948696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837801831 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832776198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988498946 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.905795293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836901628 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833562744 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870809661 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099813026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962806663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836985771 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857282703 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063126986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961966254 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953913414 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.311154574 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.833418562 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904306706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837750117 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.833960061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833686179 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999984817 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944010074 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935010768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.836296644 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834545317 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834918137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.49959883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057671111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947812687 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.973671365 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085660219 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065478307 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480166765 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833380055 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.470201708 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033516703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045242056 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.091813143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965758992 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837998131 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.088904023 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83556606 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834757392 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098246957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064392743 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950202241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838483553 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835592697 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835725991 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151563328 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838890761 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947136865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839220547 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836061648 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949369424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954301095 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.06879701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081429237 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869751455 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.69467653 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.348250833 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121462963 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909279714 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101584916 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839294216 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836324011 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930692339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.587358999 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.010115795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152816248 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104097843 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879514914 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.441127645 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.835573538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08377802 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.087950666 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069626732 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083659772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003420389 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.165551558 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.83616594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.835671856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045321276 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968972538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839491817 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19953805 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088198083 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.571719364 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.870074034 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142615967 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976501632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841755923 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.462454749 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.838401257 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039843861 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.880927162 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.839853151 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840103784 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084451516 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.711371097 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837855794 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.622510844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908209158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842054212 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104677204 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.841983393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080629978 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841513219 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151552725 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.524580821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881948122 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.031297129 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.083265019 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.62811481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106996892 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.153569588 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963549494 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099485843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.665187604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840480564 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124052098 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840422138 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839196661 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008600357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840272144 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993649507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842726172 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099415851 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864999611 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010552592 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842781839 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112305986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885370748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892842858 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842659126 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961431428 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841953449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.884539118 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024238463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844400121 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839454047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.411922323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.839846323 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988801138 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.1386644 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865615289 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910567117 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365637155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841191857 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933609656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868309211 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.440368577 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.839260155 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.012273511 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.841924488 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776992157 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.840264097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.15155367 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.064577923 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843559492 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839469474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640545283 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.54604584 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841661569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.01673503 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.073849005 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.484288494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061290473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844615457 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976094774 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844643435 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.920780574 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194533092 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841016549 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841708245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842075417 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.843836523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.84188162 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070317714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870962274 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.525534037 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978885422 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086900933 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.155753035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104096267 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890705082 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846096892 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109482317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844372291 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.910187407 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.843726405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868523866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091254868 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845291545 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070832906 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128489409 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.897447581 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894496451 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844455156 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845650867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.842446602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987175313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94338485 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845397259 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8429161 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.960938641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971045588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032748743 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.430719859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.016536472 seconds)
  done (took 897.351838727 seconds)
done (took 1214.488986618 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844640579 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842418166 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.833390156 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844148981 seconds)
  done (took 29.146717342 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.850435512 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.849782255 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.850501903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.850012322 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85094951 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.849724141 seconds)
  done (took 12.88290847 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894537491 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844849862 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844984352 seconds)
  done (took 21.36666568 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.919216169 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.251372757 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.953090966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285638334 seconds)
  done (took 10.190938762 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.852080766 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.850338487 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.852425201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.853896245 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.85343012 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.853559695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.852041979 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.853550312 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.855241837 seconds)
  done (took 18.460179369 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.061237686 seconds)
done (took 97.890574749 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.281593355 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.424892831 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.844913095 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.871668716 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.065546178 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.901683645 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.034196455 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.835781611 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.25925058 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.871502149 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.004154374 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.848309102 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.88259806 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.861436937 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.884556666 seconds)
    (16/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170861008 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.973726445 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.169217455 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.876786674 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.84941926 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.869454302 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.866309785 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.860061184 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.468822006 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.174516106 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.91214155 seconds)
    (27/309) benchmarking ("sort", Float64, false)...
    done (took 5.632035289 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.982678193 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.415165003 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.512148513 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916315385 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359177059 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858767639 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.38468634 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.837536568 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.951904677 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.155474955 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.125653904 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.12080191 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.873741038 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.952643521 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64531815 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997125172 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.19371935 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855874563 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.932475656 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.877457519 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.961081749 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114090387 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853137533 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.024720277 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.840972204 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.009908983 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.838111678 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.968831486 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.203754693 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.941059359 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.86126312 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129618026 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.911423392 seconds)
    (61/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.01943167 seconds)
    (62/309) benchmarking ("sort", Float32, false)...
    done (took 5.617222852 seconds)
    (63/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.196788394 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877597861 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.838366248 seconds)
    (66/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.288237198 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.981149121 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.937082323 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.95465977 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.852473553 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.761848087 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.253373624 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.932447209 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.955837323 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.950235738 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.841829566 seconds)
    (77/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.241043606 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.785247947 seconds)
    (79/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.066335581 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.010695064 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.540774142 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.936371986 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 4.857544532 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.936669994 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.115927634 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104366507 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.239963314 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.860018695 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46568906 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257414807 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.854712147 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 8.007777228 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.053593091 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.861069065 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884374084 seconds)
    (96/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.37015998 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.030394583 seconds)
    (98/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.938910963 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.498507906 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.201922188 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961329416 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86479982 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.19369718 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.054995954 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.349561636 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.05638893 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.189690523 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204274137 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.069019967 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.020712148 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.251372294 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.920185472 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.20097098 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.159850182 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.862315159 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845842178 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.129324924 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.971062418 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.858544522 seconds)
    (120/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.373639897 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759648447 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.510824058 seconds)
    (123/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.86678185 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.314375494 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.88166468 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.85837349 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.116681307 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.992649595 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.737441948 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.076930616 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.139106096 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.15574785 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.167584593 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370789504 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.863275802 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.046174516 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.875549198 seconds)
    (138/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.247767388 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.086232925 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.381348699 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940847705 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.85892741 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.464091222 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860477635 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054691766 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.975977221 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08051047 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284167658 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.887165925 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.014456619 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.010004257 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960027755 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229246538 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078941326 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.94589378 seconds)
    (156/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080493752 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88849208 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.965169931 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15005478 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958775406 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.560918688 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.454341063 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256073915 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.925763358 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.880679965 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.462717661 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.702136172 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.184993911 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84883312 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.990486514 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.09041344 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.8896199 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.655036645 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.090084263 seconds)
    (175/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.885885508 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.884256992 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885390498 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.243626312 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.167702053 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.756495253 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.966873433 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.198567739 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905924075 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.947789683 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.245673017 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249992983 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.866796239 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.1683208 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.88840342 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.915848017 seconds)
    (191/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.84560308 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.869161335 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.993618148 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.915348766 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.030817114 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.427720283 seconds)
    (197/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.120468895 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.857040144 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.040424939 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.875127033 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.863509034 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.995166382 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8894335 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.163628568 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.592353956 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.06900396 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.967311738 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238243025 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.977711791 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.846614251 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.068535757 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868778651 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.781923432 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.391557398 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.219330931 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.943178683 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882962366 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.005365231 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917313919 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.944093302 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522875512 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983732879 seconds)
    (223/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.991659975 seconds)
    (224/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.893184085 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.096732801 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.468425037 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.158381677 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.912364195 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.862687341 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.851231607 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.546363044 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.518307185 seconds)
    (233/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.94045277 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.044673354 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.659328362 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.778491445 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.017538355 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.252914838 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.451501194 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.036452315 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.162522526 seconds)
    (242/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.795918577 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.766693137 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.388072987 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.891542044 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.838807618 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.87902364 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.104620291 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.125014379 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.971457141 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.000923446 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.868719243 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.937767293 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973448416 seconds)
    (255/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.059882234 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897805662 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.849937786 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.055740871 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.855207076 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.328197592 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.248182783 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223067667 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.868820378 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07754916 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171841403 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253014437 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.164513164 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.115743065 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.892638123 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.052870928 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.971318812 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.866837096 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.088750648 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892157966 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.989221731 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.173171216 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.868430148 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.934947549 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.865297457 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 4.767275352 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.953579675 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.947072492 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.945737656 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.097398737 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.066630394 seconds)
    (286/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.133879724 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.974101399 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.013852537 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.555597688 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.949979338 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.476830169 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87039194 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9219381 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.531075453 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.868987669 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.951716302 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.996375475 seconds)
    (298/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.043162272 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.160019662 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.06537705 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.009391005 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.888355648 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.314496741 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.017631528 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.757333216 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026211842 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.496506743 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.6501404 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.905592309 seconds)
  done (took 1021.752746217 seconds)
done (took 1023.552923637 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.903441208 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8952458 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.877594208 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.901406522 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.990281091 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909875576 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889965197 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880961089 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.926224284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.928075521 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876811627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.907351329 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88049621 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.877639963 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.879192063 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892627645 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193922813 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910450408 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.896842466 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.888567004 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.897730836 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.879190158 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.927364371 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.907882704 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.882291534 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.88331831 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883002687 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.90051137 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.992965234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.883125243 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884754707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.893167692 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193002192 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.907968528 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.875455808 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899644741 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.892215799 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.890820945 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.884462179 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.913130974 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335491302 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.887687737 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.883045125 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.881542918 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.878627256 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.884171942 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.881853903 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.887907693 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894310906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896796975 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.334687844 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904153631 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.886277204 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882493777 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892395057 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.882988503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.885575389 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89904718 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.902236328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897466669 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182731743 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.915089849 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.883297124 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.898920988 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.888809551 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366940966 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887068093 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.887326019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335696962 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.896900651 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367459667 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896951891 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.885207392 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.896515301 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.913965054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.192715853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905848392 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.881592112 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891022285 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.882601073 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.893814991 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89564519 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.888405046 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88481559 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896073288 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.912585576 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.894822537 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883811842 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.893036176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904720857 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.890507752 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.892957438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.887921674 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.878141914 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.893261043 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.887152681 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.886391863 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.887684051 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.888444199 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.894403029 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335415131 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906948416 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.880581376 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.880402366 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.88306327 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.897744839 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334958336 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.893353724 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.906157229 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.932075795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.885348335 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184408741 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.916276631 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901206506 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.893475032 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.886672582 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.880216375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186044612 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.372555534 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.906378319 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.886168251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.882000711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900667528 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.886382465 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88233525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.19820803 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914607255 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898784926 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.006128474 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.897953518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.916879483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.885503979 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.88888867 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.914517444 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901115898 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.917431189 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.888912466 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900956715 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.901280759 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.88245935 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.896587407 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.897090103 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.889035916 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.892803112 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.882791968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.919422358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89901551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899657349 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.905780654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.007390326 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.884124328 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186765043 seconds)
done (took 296.135862128 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.972411439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885404728 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.986947722 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.881394067 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.985381492 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970584471 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.879365501 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.880173343 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.879205874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.290482468 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.87990166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.879531171 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883081305 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.880674621 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.986883762 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.88361286 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.880364675 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.224427984 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.884513994 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.961416115 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.881936627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.880874831 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.882993328 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.266010646 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.886269279 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.880946774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.954332761 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.883042037 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.255583856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887558604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.879054231 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.230868403 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.973656688 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.900562017 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.89224021 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.891294995 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.970382265 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.888356966 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.970300142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.988560478 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.988349306 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.924403597 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.883934756 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.883952189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.888005334 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886551466 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.882376512 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.912620743 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.88514445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.882085164 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.251330915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.894356678 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.891611197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.882141045 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.884084742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.906344255 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.882803709 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.885680774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.98529943 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.886063169 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.94968486 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.296275842 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.266125945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.885425654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879700873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.882822174 seconds)
  done (took 185.545436303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.951506605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.960881599 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.954842078 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890570973 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.936296949 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.959392781 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.890939259 seconds)
  done (took 15.360414832 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.894369457 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884975744 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.936850715 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936359409 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.886433598 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.036477063 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88664872 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.899834714 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.884963166 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.940318716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.888748444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886223228 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.89153511 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.879404037 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937459846 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.898254705 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001723394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.888637939 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.886687936 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.044054847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.88425751 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.895669391 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94142282 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89781092 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.88834952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89501876 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470380652 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88883279 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885508581 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.88804846 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884681367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.931429671 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887647463 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.889477199 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885158923 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.005876323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.888549448 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885414779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.887691268 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884985799 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.888070094 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.889201014 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.887974072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.886726076 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.887252065 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.912459404 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.887610626 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.888464752 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.887509583 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888801945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.942266994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.888484345 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.886974912 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.887041274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.945115865 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.896355893 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.88954167 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.884586215 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.88788058 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885464877 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.046532178 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936876951 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.88853171 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.937403134 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888889087 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.888400241 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.888852606 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888130968 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944679638 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.889021546 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.938611863 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.88689168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.050794063 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.914453683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.890928703 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.892926053 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.894919374 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891996317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.887025001 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.897218843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.887297961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891809949 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.897123272 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887169543 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.32354554 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.002958803 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.00020535 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.886272987 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.904409076 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.898836988 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.887665236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.942909361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.890269289 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.887946254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.943295351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006694754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.94780054 seconds)
  done (took 208.1040343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.897719288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.901348191 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89369024 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.909025389 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.892521695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.891002119 seconds)
  done (took 13.208000825 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895685758 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.892627305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.889989835 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.88950029 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.892509186 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.893302053 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.893230861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892519524 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.896451538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.891117333 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.894060473 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.892576949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.894938765 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.892304642 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.89446032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.890727746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.892684657 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.88933643 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.890558967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893190477 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.036762695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893543414 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892729916 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.894916758 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.898376948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.892479357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.902993445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.892809043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.893752034 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.903188168 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.896457317 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.89445908 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.894338073 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.900729058 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.898478722 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.895348515 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894756911 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.893280262 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88964404 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.895326061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.893845056 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.893117762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.893268965 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.893729365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.896609288 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.899489872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.897994528 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.90248797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.894605519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.894288658 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.893502704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.893332188 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.89530695 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.894822824 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899293958 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899527425 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.89876578 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.895268813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.893981786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.896334418 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.895249545 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.895655995 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.897379853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.899064885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.901417827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.894650429 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.896196731 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.89851201 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894844748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.894087397 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.895430838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.892113061 seconds)
  done (took 139.405806495 seconds)
done (took 563.454664549 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.150935226 seconds)
  done (took 8.980911598 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.972955361 seconds)
  done (took 8.895540384 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.547342648 seconds)
  done (took 10.373768105 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.904041925 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.91771598 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.900814736 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.890990219 seconds)
  done (took 29.45110974 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.90186318 seconds)
  done (took 8.727719091 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.902769551 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.887727816 seconds)
  done (took 15.649414677 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.958141271 seconds)
  done (took 8.782737135 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.004270288 seconds)
  done (took 8.837674224 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.91136216 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.899831661 seconds)
  done (took 15.650526549 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.875447131 seconds)
  done (took 8.701277243 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.64985072 seconds)
  done (took 11.483427755 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.891072297 seconds)
  done (took 8.73029405 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.909274893 seconds)
  done (took 8.735195921 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.084851684 seconds)
  done (took 9.910562367 seconds)
done (took 164.735330804 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.894441665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.892573093 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892494455 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.890816016 seconds)
  done (took 29.394956884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.929207931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.929861896 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.930568897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.939427991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.93163626 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.928875526 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.920949347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.924155134 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.940078486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.932253385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.931143974 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.931381321 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.929830418 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923040098 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.936758549 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.933486051 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.941091138 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929364493 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.926499478 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.935808213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.896784042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.940177655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.932839516 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.898216117 seconds)
  done (took 48.119464447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094515461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.970180021 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.051336913 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.951490471 seconds)
  done (took 9.894017333 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.947856206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.950399118 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.962080533 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.000546852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.032222558 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959217757 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.923892048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.919373416 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.904990752 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.950558489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.025835717 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.964535948 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.0330662 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.897790125 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.08289598 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.896533207 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.897903662 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.950208828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.001126778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.015908688 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.897742603 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.950022921 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.953943665 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.967166488 seconds)
  done (took 48.91490505 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.896657446 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.905077865 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.902668602 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.89776954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.897474333 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.896485452 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.903119821 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.899476055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.917991682 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.898341753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.896391921 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.895650331 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.897351849 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.897677099 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.896304833 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.909760511 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.911130651 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897539215 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.900796454 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.903360097 seconds)
  done (took 39.849939578 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.891645672 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.74882398 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.245696693 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.149420676 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.894492062 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.894763591 seconds)
  done (took 31.656643793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.913704289 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.966960301 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.909699835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.957554351 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040012731 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.908840986 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.900297691 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.968814523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.01551524 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973303975 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.918724787 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.929076096 seconds)
  done (took 25.234301145 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.896419027 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.89805476 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.896333188 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.929544333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.913599149 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.910286366 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.908933885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.895049477 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.915442026 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.920239589 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.909738434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.913979879 seconds)
  done (took 44.741001603 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982871826 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.941603587 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.912602405 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574971342 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273301922 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108374597 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.499302855 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225767319 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.899663434 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168876592 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958906284 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000048152 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152379054 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416278342 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932154081 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348649254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191625028 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110770095 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923113611 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576114192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958886029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.109718765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.687397632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952828986 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108769816 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026511543 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.156229113 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897687905 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028354983 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933604497 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90500296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897434993 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172155305 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268488454 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001109278 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907311217 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517613652 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.61167574 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.884650067 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.669566348 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595288872 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.020828275 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909349845 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898307043 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831587901 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074546137 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276106578 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.903247089 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.609779841 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897847002 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910374927 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99186065 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.901776477 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.713022602 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821322728 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900643287 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.895486674 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906860236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471672816 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000279534 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099090382 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.876488135 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.990964927 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658866076 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273654063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.044040741 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.902212173 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901973896 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834226334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.58069803 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953247234 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22863358 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.920098646 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550470134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201201869 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.015040778 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84320596 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174931644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450605079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.874811998 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12908391 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89948129 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83501989 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.844860666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83556944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150272187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936556179 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.649501637 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940437688 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22813663 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910179191 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919577438 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923105021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124047098 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.785262271 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900898234 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.677897088 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045982842 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923458427 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237474689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836045922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.904889911 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158852575 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.112464391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001063993 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.387147471 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055203835 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489244589 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.954601005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.075284865 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950780758 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.170343566 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957849097 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.015565069 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953990021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901321581 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195672793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.502272175 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.03940878 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.914012307 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029268171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.208291108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928903445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9845972 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912566587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902877686 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.658335258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454733062 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.90324158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.905357237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.00110242 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952714562 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.90494843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847958807 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.52706472 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909866945 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.918187241 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127621702 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496626532 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218952675 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839602315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232760911 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961077326 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.128254292 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575887596 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.979242405 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164378496 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01396057 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035890615 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953291202 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922938896 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003361193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925126879 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.077236004 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20120691 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.909060819 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.908210236 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.672347534 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939802035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904945672 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.90998007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661183884 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168313351 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926646169 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911327858 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.793856721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.918142104 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97106157 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909989191 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915104385 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445714785 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620802575 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912008845 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.492251796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13041235 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915420817 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.658400163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020555434 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.988712671 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168094784 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961268201 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.838879155 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61759876 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.598832866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90672559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841681673 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906194391 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915091379 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916897269 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.105725368 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179654321 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947367946 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.57429683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.948340959 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917644658 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.912609256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907747544 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419349427 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.013840074 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115542608 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953834529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053040881 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.920849982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84079821 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911204269 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910349441 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907319633 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.908667179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941216251 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.595185043 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283733003 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168859263 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519864397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920822407 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.617869744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.964720475 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.905249728 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694975255 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102073063 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.946936869 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924812049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.921171198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.655825302 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.615636684 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47875177 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228430258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198481857 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330848517 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.142324281 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937124704 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249346367 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841993018 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465671841 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968450136 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249119032 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852423533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993126803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.548624737 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25061885 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924911897 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136967398 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286170741 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.635077394 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079514304 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119572312 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945050584 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.082981234 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873888669 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.434233578 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051380553 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.583599825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115614061 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240834024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573145891 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03250004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.911017115 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571298716 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993600567 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62111098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.082407627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.116955327 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885806659 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377342424 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917615923 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.136857186 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260928713 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104123754 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.033591557 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846654303 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921794751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.922545028 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91370414 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910583047 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.799599409 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.166374959 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922253617 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845711095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.044582588 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203986028 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.809713476 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.916948491 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912424101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193528887 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481123144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077817936 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.025309294 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441437803 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920900999 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.845401659 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846304607 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.604357449 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.916512687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885595905 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110551737 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.014149107 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825465082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006528288 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163952359 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169081952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.927317064 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.17358646 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184410349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.611762513 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939141745 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.014013259 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563562695 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.020702853 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913403709 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150585654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672195034 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139967496 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919090037 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.864764733 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913766372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127005526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913113045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859536717 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140739918 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.635559266 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.95844101 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225181707 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985956712 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.794952946 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.95717169 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.006327852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925622728 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993439733 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926027826 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.925722365 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925314386 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960618223 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790003938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035998569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.92959264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007829559 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031616853 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.447771154 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.921512419 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180337274 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269272744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239020339 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9713024 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915604199 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916334836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849019299 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063031481 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139298273 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18825845 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045022402 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.028013575 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940804432 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567957045 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144030521 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1605835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18991751 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.809987779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447685975 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960519399 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.916496082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927953852 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.126349173 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116976814 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202940166 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060551853 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027310393 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280724054 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190113355 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.917851391 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91429071 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51003768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.982262403 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576369767 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.955211738 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847214185 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190903839 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924981723 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29649357 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938564076 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.076920282 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.691959192 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591587674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207333426 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896664551 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974368655 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17818647 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.284295297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228262482 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98457413 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928115014 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.031245777 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06510141 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.827434561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919028325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91744118 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96564995 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.627445773 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927978705 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189735414 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22497062 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.916304955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.817281634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941933878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.928689805 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142418024 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181679296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168845122 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927996203 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924268961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732831265 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189352575 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972527922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853545338 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.922910779 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015239207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165786065 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938630709 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.371996674 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.630494965 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193909905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.916975307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941830261 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105008203 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283436663 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238039916 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.459336272 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137545195 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.504600643 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.548221512 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226497369 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.925807784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.095437139 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226841453 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.922191849 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.018566429 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964040907 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.178466481 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226003422 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.932736293 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585691277 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.888465052 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262925239 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485183078 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857743573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929515995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.980886751 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920811127 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050057055 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93286978 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.821475464 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094842774 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.707076227 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194224769 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.92698137 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.910911214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.625448704 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.22619213 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961331021 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063861809 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922723349 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.597231855 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.273478219 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178290304 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025753287 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.934750257 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.925767954 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921295855 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907780282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118818294 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.119776716 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188194397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.049593559 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.962847022 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926447781 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.138387528 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133892751 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.776497393 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05427378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018146419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968536169 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.829687686 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430567218 seconds)
  done (took 1693.68255665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944836073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.980012841 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.961281798 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.012006772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942079307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.062083214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.988312044 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996677503 seconds)
  done (took 57.745767298 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.923902289 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.143426349 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93405518 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.935337947 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.933131044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.925179888 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.09736262 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93844004 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.934809471 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.935466425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.925792839 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.924838372 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.236874507 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.951360497 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.926232809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.909993447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.933436767 seconds)
  done (took 75.387134613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.926382479 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.959374856 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.947094597 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941331149 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.981631837 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934017749 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.772147383 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.929572808 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.928975191 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.063950629 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.560536429 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.943209306 seconds)
  done (took 87.750482289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.933763208 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.932076601 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.932816983 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930459159 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.932049126 seconds)
  done (took 11.523394718 seconds)
done (took 2205.748910777 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.183268063 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138427915 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161357008 seconds)
  done (took 6.160099281 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.08477732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.132320509 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.250553531 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.269890022 seconds)
  done (took 10.613766991 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.226232607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.320688474 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.148818997 seconds)
  done (took 8.563041963 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.338231503 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.948239757 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.04847644 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.932561395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.935694094 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.935708355 seconds)
  done (took 22.674170165 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.938319281 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.942396449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.943127631 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.940931081 seconds)
  done (took 9.636097869 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.92042286 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.704522371 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.919490159 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.934335147 seconds)
  done (took 21.349427588 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.687085353 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.704534406 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.685023169 seconds)
  done (took 9.946008665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.496299914 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.846117084 seconds)
  done (took 9.213449988 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.20160203 seconds)
  done (took 4.071018493 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.070101289 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.199855143 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.41004859 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.42645072 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.494943093 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.814949216 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.253748524 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.184556075 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.326743883 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.374762322 seconds)
  done (took 25.428702271 seconds)
done (took 143.039439657 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.321278824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.179009786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.139989661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.279587848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.163684209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.142940917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.145935086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.265813413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.792706022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.787334962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.278125782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.171163342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.305370523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.178423865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.306637919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.180390426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160953095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.33909891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.975398556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.213870391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.149935317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.920063777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124703588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.936805037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158982905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0903912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.513412997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.17857502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133811532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.519424479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096389994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.366951662 seconds)
  done (took 175.388369917 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.710644834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941475658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.937078913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.939628558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.474430624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940976266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945019734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.940002436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.1257298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.104570661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.941922886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.458187871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939120854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940931618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945806571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942860988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.255990545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.727733366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941590219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.941185581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.94698677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.377415303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947879376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.40111153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.250025477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955380886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.934244793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958363266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947531699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943907774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955392754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941426031 seconds)
  done (took 210.52926723 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.939936808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941549304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941897361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.943425922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.945822589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945950143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.942751742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939869736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.726497735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.712148342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.945306988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.957881068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951015315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.942074411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943071994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942046027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947624346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.950143728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949812159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.948945441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950547775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.654112263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.969361704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.660725221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.969092946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.948876417 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.942762643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.950416065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.951280495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.954185372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.948824267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941863735 seconds)
  done (took 223.187890978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139843872 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.946826061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952097529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.880225784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95157852 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.948216473 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.944811758 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.136651175 seconds)
  done (took 19.79349081 seconds)
done (took 630.78702958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.387610825 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.230785085 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.12153836 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.97228551 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.21191998 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.007039781 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.969276408 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.031795536 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.690222418 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.038846894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.611880017 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.988254662 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70744759 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.991256677 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.099359201 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.028649413 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.54153195 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.629435735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148401855 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.050825566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.13935942 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93409151 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.043028929 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.728454116 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72679806 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973004193 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145388034 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545781977 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.980939148 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.137562003 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69828393 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.340744777 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.982378759 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.97256046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.021816095 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006136172 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.318267493 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.977681621 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095536733 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741147016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.035618673 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.574555067 seconds)
  done (took 106.456496812 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.940910882 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.939424672 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.939080809 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.938259035 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.942417223 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.939772437 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.937293704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.939653095 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.941394156 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936256312 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.936936584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.93970863 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.940476056 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.942886037 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.939384373 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.936749815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.937406115 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.940936504 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.938397371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.940426588 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.940180554 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.940609864 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.93881259 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.941108384 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.943319887 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.939858747 seconds)
  done (took 52.323936789 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.950539694 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097846283 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.175193783 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.973003299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.952680523 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.953244585 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.97140821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954511973 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.952378201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.955717157 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.045471192 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.959629463 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973525887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177224582 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.971261475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.95278847 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.950449586 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.956752653 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.098593409 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968901006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.97374158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.958676109 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.972923513 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970756328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.954829439 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951194236 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.956280217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.388202908 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.96605519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.049407722 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994721987 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.97698867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347658591 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191877757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00960111 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.958900941 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.953574407 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055163064 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.960821811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956465297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967141006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.962698221 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.1794613 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.4582208 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.967294525 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.95726106 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399227619 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059576163 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.997695281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.966838425 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184817002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.974255165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.955532874 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.952243887 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.98932056 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968365369 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.955825561 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.259761636 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.970236046 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.973782212 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.960898019 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.95624343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111327534 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.966018606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102234024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.965126851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.963007743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.958545066 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181645934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974011769 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.45706126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.969978678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.956523623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.052414177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109017535 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.423302975 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.9667494 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114061854 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.366567696 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.981946966 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965755476 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.382599701 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.985767606 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.965427102 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.955196926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.955677926 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.953828922 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.997265035 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.974955243 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.393330158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465131222 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.270624584 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.985217757 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.971736751 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.958969212 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.261841331 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.963864413 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.957951546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176101015 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.475113461 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.974338056 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.969335113 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446462483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972396685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.973436014 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.96781599 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.187192282 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.974953447 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.000492391 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.958006943 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.966603987 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.959122428 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.974586252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.96631326 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.958949804 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.43620042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072996952 seconds)
  done (took 241.834984112 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.951716131 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.953333844 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.955071408 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.954783807 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.95327599 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.960351799 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.962111677 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.951083645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.960192987 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.952035531 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.952705048 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.952688279 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.958018514 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.958343241 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.990182743 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.959446417 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.566949604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.955201285 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.954080625 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.964624606 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.604860452 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.960240714 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.956243087 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.965943502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.952106807 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95657362 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.956554776 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.985906183 seconds)
  done (took 169.99266426 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.960171437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075869739 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.980081535 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.990236629 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.966757901 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.958369192 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.988174816 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.979632225 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.966898284 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.958139937 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.9586305 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.023466349 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.968994819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.059377923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.994076636 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.993216733 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064901986 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.963352158 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.958144928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.956875502 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.988813122 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.956727601 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021259816 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086604462 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978649102 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077830395 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.966056983 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.963646187 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.963124015 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.079519589 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.975152317 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.021612281 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.987912539 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.981239752 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080916626 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072658728 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.062265565 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.986188958 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.966293373 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.959278942 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.95885466 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.946844401 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075849462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.979773833 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.963097977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.065032477 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.978780502 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.961932306 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.97029165 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.957385472 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973440589 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.979504972 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.027153271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091245749 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992376101 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.988003914 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986484062 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.259104875 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.971301003 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.062310433 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.956817357 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.074931953 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.980886217 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.94980167 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.960808151 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96895378 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987279137 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.99457409 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.067330379 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.968432763 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.059283698 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.9956626 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.9680519 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.963708576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.963382781 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.082193946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.083196275 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.992606541 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.99883495 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.997116571 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.958957551 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.963146537 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.950270109 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.983383512 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.971293088 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077084187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.081405787 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.967095227 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.966831875 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.966919705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.96565085 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.986501962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088078308 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.997329234 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061363098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029030779 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0409517 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.974933842 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.975926213 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.964853671 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025365674 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.974043313 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.975189832 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.313067371 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.036018105 seconds)
  done (took 212.331437181 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.059409191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.437744636 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.01689209 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021517595 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.260212712 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.387192243 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.765219351 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.011219962 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.013906222 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.043552149 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168209295 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.07286233 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026759148 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.004269549 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.435016703 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.002094842 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.010046977 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.03877546 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.015300099 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.560446257 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.339141989 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.136369002 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.012684965 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.137636223 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.99106663 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296598011 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.338929365 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.410644282 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.050657433 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.361249724 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.37329525 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.696432965 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.220146204 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.251978096 seconds)
  done (took 77.868018577 seconds)
done (took 862.686240194 seconds)
SAVING RESULT...
DONE!
