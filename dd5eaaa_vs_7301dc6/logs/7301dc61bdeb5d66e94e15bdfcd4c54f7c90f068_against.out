cset: moving following pidspec: 28745
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.283536176 seconds)
loading group "string"... done (took 0.63909159 seconds)
loading group "linalg"... done (took 8.148203189 seconds)
loading group "parallel"... done (took 0.172345672 seconds)
loading group "find"... done (took 1.235889082 seconds)
loading group "tuple"... done (took 1.913775585 seconds)
loading group "dates"... done (took 1.309466676 seconds)
loading group "micro"... done (took 0.202314798 seconds)
loading group "io"... done (took 1.00052062 seconds)
loading group "scalar"... done (took 40.589639446 seconds)
loading group "sparse"... done (took 12.510303928 seconds)
loading group "broadcast"... done (took 0.979873476 seconds)
loading group "union"... done (took 14.078762148 seconds)
loading group "simd"... done (took 4.813778126 seconds)
loading group "random"... done (took 9.400241949 seconds)
loading group "problem"... done (took 1.611886786 seconds)
loading group "array"... done (took 21.574047285 seconds)
loading group "misc"... done (took 1.671828986 seconds)
loading group "sort"... done (took 3.410708188 seconds)
loading group "collection"... done (took 18.343926103 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555628894 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129251174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141281358 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12394649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152548498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 61.785703263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126685431 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086659707 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.891622199 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155764231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117747643 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429333089 seconds)
done (took 67.181548668 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17644337 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088864451 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080396262 seconds)
  done (took 1.310204293 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06651904 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129262136 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067764154 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06896833 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068221257 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067723196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068822377 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06988249 seconds)
  done (took 1.681360025 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07410448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070256024 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066646092 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069955984 seconds)
  done (took 1.422204932 seconds)
done (took 5.817471366 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802090861 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211092715 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190557602 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415244231 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137931508 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180719073 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653828422 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317292598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204715833 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095246002 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113775148 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363950765 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124180637 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646441512 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079265521 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097089331 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142222211 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43853985 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072832748 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08561457 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093221276 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131285641 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092660178 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077234268 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150649477 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071502814 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144649982 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083897308 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069356171 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221477121 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175714243 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663921347 seconds)
  done (took 10.525992555 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102586105 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099507708 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069646102 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12639823 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098875647 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070660025 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076037048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068816585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09282847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129309127 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09191718 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108822739 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066557957 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07083694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083728774 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202421669 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080825801 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082354065 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069106583 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079555188 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108243436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079116133 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080237194 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080375965 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129362489 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170512619 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09727337 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098664809 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068532072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082036238 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115748695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127945488 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066886452 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066924736 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126609707 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095822191 seconds)
  done (took 4.65109578 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.01380036 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15225635 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092840198 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139677312 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066983697 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092992004 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116486342 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068161507 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086082068 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.386311298 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244879731 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632984856 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124164191 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120950816 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106561262 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071353772 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073748547 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070444648 seconds)
    (18/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067264728 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066334573 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110116738 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071375205 seconds)
    (22/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278826884 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074749261 seconds)
    (24/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081573792 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075102593 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097048414 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071833248 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066974914 seconds)
    (29/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101114521 seconds)
    (30/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08585142 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354946923 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126768706 seconds)
    (33/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089348229 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071052086 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.863156127 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170570088 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068973308 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109075129 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162113798 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095017504 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142621386 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068632275 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065135617 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299664882 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066316409 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074240771 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069548193 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087998426 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112520611 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123048436 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065926608 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067112803 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168526198 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065683497 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085923796 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.238102041 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152801536 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066054667 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296489555 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096176521 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074351171 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067244988 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193228998 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117886783 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069210203 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068359786 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069570958 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066378125 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374790554 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072398368 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067886283 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.919680871 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071771621 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080156859 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073192369 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072029504 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079745351 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079893217 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092112048 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068258419 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075292849 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0705168 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067971996 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067706532 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095048004 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393457937 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068271612 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07279519 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067077914 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095228146 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101358537 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102874831 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066927064 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067149474 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072835951 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069156931 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070194042 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122839974 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072641445 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067342355 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112532948 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172394383 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098178031 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070179612 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101579875 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077557541 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071209176 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.465324593 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066246474 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070692947 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068512772 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075156864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068786002 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081597659 seconds)
  done (took 22.042898973 seconds)
done (took 39.373526192 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247868715 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089291817 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086963621 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086898725 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086912667 seconds)
  done (took 1.829539822 seconds)
done (took 3.044067876 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126940544 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101183065 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068350355 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10113115 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066547811 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10738061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103762834 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08627955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103228069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066714171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10082193 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067042093 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066596725 seconds)
  done (took 2.398271916 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082770948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083233815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070161062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08389757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064879451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084704511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083147918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09070347 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083463548 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074331707 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06484138 seconds)
  done (took 2.076275765 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082632847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083507617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069606375 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083403446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064563668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083833986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083483771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090561964 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083914198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076032223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065010981 seconds)
  done (took 2.072490332 seconds)
done (took 7.751865379 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076426185 seconds)
  done (took 1.271340844 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541546554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.650952154 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078811893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100610274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193143906 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.10931636 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237468245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083513018 seconds)
  done (took 8.362569064 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095437092 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070506546 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083551762 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070974005 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07238119 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071230663 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071249118 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072519525 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073133852 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07125883 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072143597 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072100528 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071095291 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072100345 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072596208 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072606359 seconds)
  done (took 2.465637536 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098610335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098296412 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076352791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07793284 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073364755 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072455634 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075343222 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074549179 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071929641 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073771663 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076162571 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07394294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073594412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066187868 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076852497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079261609 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072933899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074799022 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075250561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076990443 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077615015 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066463722 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075818976 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077587986 seconds)
  done (took 3.145117204 seconds)
done (took 16.450094829 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116455621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079999767 seconds)
  done (took 1.398156482 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079417507 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080888206 seconds)
  done (took 1.371058706 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077818695 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063092542 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086320889 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076424633 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065897371 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065217978 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08556436 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065647428 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065634173 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066044422 seconds)
  done (took 1.928406097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065577811 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073419405 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069804475 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079265593 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070825905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064933544 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069413028 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066100788 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073719523 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063762924 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068435408 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08404408 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068534561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085482323 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068770093 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06846 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070414099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067804202 seconds)
  done (took 2.493102311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063924168 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064273681 seconds)
  done (took 1.344401061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067012298 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064313434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066729614 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066734802 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065221278 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064531831 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065558098 seconds)
  done (took 1.671259153 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410430193 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125499065 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33933756 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072958565 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083248365 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265853305 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066427756 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071754386 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071701563 seconds)
  done (took 2.765011897 seconds)
done (took 14.1904777 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081013483 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08689217 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098276656 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414032587 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095957068 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070229211 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115477342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184455198 seconds)
done (took 2.373863191 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211015884 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.07679229 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.491898858 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208875204 seconds)
  done (took 2.998882051 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348721651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081431406 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077311049 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066943037 seconds)
  done (took 1.805774167 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.181726361 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0704919 seconds)
  done (took 1.47785843 seconds)
done (took 7.721822679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065715404 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090850135 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06504863 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065875875 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066922204 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066736237 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066388801 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06668083 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066312118 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065084846 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065235719 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065501729 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.064621501 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.064746167 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065231989 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065793247 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065527416 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064950637 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065634584 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065057479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065375732 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065271288 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065509249 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065178241 seconds)
  done (took 2.859300901 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082391038 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067605922 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069428443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068720405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06929286 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068914093 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069111865 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067337663 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069589796 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067727419 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069593507 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069585483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066574016 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069848778 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067210273 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069554525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06900045 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067413875 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06719999 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069493071 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068919458 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067825882 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069905319 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068663714 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069874553 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07105478 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06882437 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06947559 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070341863 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071641506 seconds)
  done (took 3.315284715 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065730369 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061226947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061919989 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070592773 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061604247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063632632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06264224 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06355852 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063655449 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061601306 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062725173 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061389277 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06203788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062903672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062312557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066429305 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079052085 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062275333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061718223 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062360754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066154015 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061761759 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061857416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061550161 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064135128 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060991519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062197222 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061666539 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062074045 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062393347 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067041407 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067565648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063151181 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070367853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066290157 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062279609 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066562557 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061105702 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062209463 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061111578 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061300096 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06133584 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061489109 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071067961 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062250306 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062862941 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06179522 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063012289 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061946385 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063695537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061601016 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061953543 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063938109 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063248341 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066331702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061928633 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062856896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062884318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063913147 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063243071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062740804 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062775495 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066764707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062794515 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079043088 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070307269 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061392347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062658916 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062469026 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06490227 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063540141 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077218315 seconds)
  done (took 5.846716399 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086595436 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08836441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066760517 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066965319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06218019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062127531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070346381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062246765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067613873 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081333593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062642601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066583383 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066758575 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066703299 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062697739 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067186856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07163854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062693607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062389636 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066307312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062495291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070242826 seconds)
  done (took 2.754146244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146431341 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068345775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109524157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074331528 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073244084 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074997393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070011828 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070384236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070503078 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070698509 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07070286 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068118213 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070890523 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069378748 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069191995 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068748835 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068828351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069143435 seconds)
  done (took 2.62317664 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078829577 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068402121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086890137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067375371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068152546 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067419963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071930543 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072475135 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067314552 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0676905 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072991787 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067966431 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068800301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069225073 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0690739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069408774 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069285367 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069638555 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073975134 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073405132 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083158656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074683292 seconds)
  done (took 2.820282042 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079904058 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067193997 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082894274 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069922843 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063925525 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063787012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069697943 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068685282 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069597811 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068259589 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069072876 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063774049 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071467867 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069282495 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071635242 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068812524 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068503572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068896193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068357025 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062669842 seconds)
  done (took 2.631370024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083950691 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065073259 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065317535 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071294855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065316086 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065100746 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072207803 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065465118 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065181516 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086028798 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065888173 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06614588 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071747157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069293401 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06572056 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072017536 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074124905 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071563067 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065846922 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065643333 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086542664 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065613267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071629384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065014738 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06559287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065467283 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065773901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069358145 seconds)
  done (took 3.195616048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065559003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064868902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065679689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065289186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065845081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066587634 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066907967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066786093 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065090539 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065580717 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064809919 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064936366 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064799962 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065217173 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064939843 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064904369 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064927555 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065910215 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065084357 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065179804 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065492804 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065218935 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064836856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065102551 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065100587 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064825915 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065384804 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065484837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065345552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066104597 seconds)
  done (took 3.212707527 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075554008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07394077 seconds)
  done (took 1.401379692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063902917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079091549 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062814952 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074664398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072558977 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0667247 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073464619 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072924405 seconds)
  done (took 1.813442741 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08551629 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076354079 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065744527 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078793283 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077065597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087231959 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129660934 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066178052 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075841385 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067002021 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084215762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067851844 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076444103 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071162049 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075287218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079033446 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063935528 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070981318 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066187997 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062981194 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064667111 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077884531 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074849678 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06438484 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07168593 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094463572 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081690257 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063851359 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07137511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076761268 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074286966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061764385 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063973953 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06406809 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062114135 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075129754 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082552634 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07119957 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07712263 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064943862 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072172217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062622104 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072585358 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075126843 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08066287 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064068368 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064174748 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061959367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064959531 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070058445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062164314 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069179449 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061647896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076244415 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072007824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079524488 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062663556 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069699358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070260387 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070770254 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075507581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07014435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073811662 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063972422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079546528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073368922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075687579 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062162827 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061107872 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062558757 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077876876 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092832044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073424516 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064248279 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06471953 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061861461 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071626892 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064435677 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072996567 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075731751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063859166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068494738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076279969 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068944025 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070549277 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069878082 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062151105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067415858 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06525607 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083682615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063002923 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062000296 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065088867 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079137143 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073059392 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063140054 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064888164 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076118729 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061449556 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064484986 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064739751 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069693395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077749947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068379114 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068132181 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077536405 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073053143 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068901952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07061499 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061150074 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064679715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06601921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074908016 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060812353 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070497005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067551934 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064050502 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075342682 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062534677 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063404586 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076585089 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074994884 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062673674 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061296442 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070667086 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063890511 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066449674 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077318216 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062203513 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061618936 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06225466 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073012546 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064493586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072195697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068059815 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070864168 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.189143042 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063093725 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068902457 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076165255 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06815129 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069732252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073810138 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070121034 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063162774 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07634573 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070829984 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066965532 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073578516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069386303 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062859617 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066776778 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070803053 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062943442 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071579155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066985787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070630763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064397972 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062923482 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069547675 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064661206 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066767233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069642494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063060612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078709522 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070519838 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062559989 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061824857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071444013 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065823122 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063720625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066500725 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07059558 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064620719 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061900141 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063292103 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069708542 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071437039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066658298 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064462242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073095151 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080872766 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062968096 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070784234 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063211357 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064543279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064591205 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077897302 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074283298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068053381 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070569613 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061625031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073185888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076313465 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067158067 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062519835 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066835618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067802932 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075741524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067897834 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064548175 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062505818 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070053754 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066850277 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070940465 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064180218 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066936643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069035017 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062837443 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069725021 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064418095 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078411299 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070970158 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062268193 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066245353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062853954 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074858483 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062207132 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065452236 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066752392 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064780723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063425949 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070321463 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061310443 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076484643 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076824517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069561487 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067342097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063532559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075958004 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069905897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072434381 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071228081 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073520626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078798331 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066288145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071069195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07888635 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063944308 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061650963 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07362867 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065242724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063381313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062991177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062981729 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071006242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070782797 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073955548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061205658 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07054446 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062461514 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066678922 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062729797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072692772 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071178485 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068350117 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076127874 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064611788 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064420202 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07208235 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063868987 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064835831 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065345014 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071441842 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064538325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069820673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067352723 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070681089 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066342955 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063572924 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071634044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065033643 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069902159 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072987577 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063617249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071167084 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07074147 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064429191 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.20262187 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068958906 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067722314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071714104 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070342406 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068848241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070801598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062280765 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0762051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063529678 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076833675 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068945916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06193346 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069628208 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070897947 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068654964 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064047974 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065192501 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069570875 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063542541 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071244065 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076183135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06642375 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079752769 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075064101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06988979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071359684 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069582868 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06938584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066417077 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068836003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064731129 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069608551 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063326142 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073003709 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07128609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068609023 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070504249 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064424439 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069733531 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06529927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061814376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066623304 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066482698 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06376248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076414149 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064370809 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067129179 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062836915 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064777864 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063180066 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061528865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0710477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071499933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064866497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074997176 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066846239 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070332102 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079820587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061822604 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062987147 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062251862 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065419263 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076757186 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064513895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077738832 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069899646 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066666494 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061825015 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065385605 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062838664 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062075122 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062512757 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072474161 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066380145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064053856 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064252281 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07149931 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064997858 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077231014 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063441711 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068384311 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064439152 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061790338 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067515472 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066771659 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071497001 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065200996 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065431656 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062310487 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064136499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068622125 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070392952 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063984768 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069615962 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076264878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064520953 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071195176 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066831987 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062075714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071351755 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063987962 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064050127 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06672645 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071571409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071614349 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064522191 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078367167 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063876124 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072522475 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064275103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062352907 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063850796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064000632 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064202017 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067037362 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065404586 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077046554 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062104368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069792293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069332302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067345967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073829529 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064221239 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069759807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069394948 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065197683 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069764066 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07740897 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067419912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071060641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064321074 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069653325 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07350264 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065992169 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075391522 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069061513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064376714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069795466 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065204955 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063536564 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063508797 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064366885 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073677017 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.198565209 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067897789 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067400673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062698756 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068434504 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066373832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076896744 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070803321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071238859 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06217592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061365814 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064818181 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065724444 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069918502 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071087723 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073831717 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071223054 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067853481 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063869491 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078718441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074106742 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072225899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065945191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072204363 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064547907 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071305831 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068958309 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069229014 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064695605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071926066 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069899185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066731517 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074320194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072357345 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06505354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069688323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070061328 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069421728 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062409796 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064773572 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070985435 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072834855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070939163 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063624192 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079412079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065648426 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069091221 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066714731 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063548606 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072707071 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062129236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070612719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065181994 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06467933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062377209 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066852251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065929352 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071169249 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066803346 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062280238 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080100212 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07880446 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070193995 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06343096 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062764259 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062756231 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062646334 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067254593 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065724821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069957525 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079347883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067019918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066744769 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062558753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064047172 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071410572 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072082052 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061815802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062883068 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066820499 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070171351 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075724191 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064060017 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063635855 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071301041 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070808882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062305159 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066902227 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061422936 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072009487 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081120107 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064823256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070372171 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074474579 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077391823 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06429977 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062448444 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063939371 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070502531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069579586 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064960424 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065093858 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083287663 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070802919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066670195 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06300152 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070690167 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067100499 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077821693 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064896816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064450644 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072977148 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072924661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071587916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074148875 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075626759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070013283 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070142927 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063486642 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069474454 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06275649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066939029 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065308061 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064619475 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068655518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070770497 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066974014 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081611287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077913387 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066799467 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06203266 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066900208 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066835397 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062384925 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065177797 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062929525 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06307608 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062562234 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063159102 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069890613 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072822532 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068694536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064581153 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064801276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061839666 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073856171 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071241346 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070145387 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061315329 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063553927 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064129212 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072530013 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066082348 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065484111 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069326921 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068983615 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06906724 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061189046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07445958 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06230214 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068769856 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065433699 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063086321 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064027381 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070453221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066610293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06461624 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069519576 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069244743 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064634582 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061492408 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061045946 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071774536 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061443227 seconds)
  done (took 42.571233071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105835216 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064066369 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063397187 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063532015 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07303166 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064398086 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063136335 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063985249 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064193505 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066308679 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062930807 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06312085 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070687596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077616916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073094322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066866666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063311927 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063626764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062709654 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063878001 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070404436 seconds)
  done (took 2.797695244 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070326162 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078318995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075315945 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080403424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072022159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067506231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075313239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067451785 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076163789 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073900165 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078270054 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070131055 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074921365 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073856331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073175099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068447213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076314938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071863202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068054762 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075366606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0679088 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075343434 seconds)
  done (took 2.918151724 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064934798 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06416085 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070674103 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062530431 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063197032 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062113873 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066590032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062127505 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066356266 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067041843 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06676539 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066530716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070732824 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063235215 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067538256 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06216931 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109566818 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066474425 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064201286 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0650348 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062482789 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07129532 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062153269 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062757532 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066239607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066561761 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064472663 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062302938 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063728304 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066258653 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064047355 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062111304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070556133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069749235 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066663971 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066636356 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063304437 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063926297 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062171283 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062496868 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070018419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062934885 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066937754 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070877672 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062421316 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062287453 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0704087 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063937667 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062555093 seconds)
  done (took 4.55505044 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074607757 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11135745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070084464 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092332271 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077428151 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070150122 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069026067 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093495722 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064337308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065319488 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078527361 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078234771 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065947326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067688353 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070483781 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066321142 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067215873 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065122289 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069432657 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065196442 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069163984 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070669334 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076723883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077571721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067256825 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064986113 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065420397 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067455127 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07755744 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069568797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068104578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068588929 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077910191 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070951147 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065773467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065555968 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078297013 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066276818 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064549951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065658287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067644789 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070093415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078746481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06621572 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071035999 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065901765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063733051 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077525866 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066103902 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070717949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078666509 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0674718 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066539258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068321861 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077482755 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065964178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065238554 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066505601 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077379467 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063815039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066914218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078317671 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064976089 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069494786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078773334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07069795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067803083 seconds)
  done (took 6.288159226 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074121863 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094747164 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09719275 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079949008 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073808486 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074183014 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073752645 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073964335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074116455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077523409 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073533016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114750503 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069449917 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075216105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073607403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073570133 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073846457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073542305 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073455246 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073122932 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073249112 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080259805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073291209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079771306 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076528143 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069672868 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073060073 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073514478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080118651 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073329919 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076868291 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07316622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074172623 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080439452 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076974201 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073265224 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063287823 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073291314 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073542872 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074117075 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069829362 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080225717 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073789037 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069641 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073673642 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073230918 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079651205 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076660115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07541637 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077148833 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074209837 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079665994 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073623294 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073247532 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079859588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082662806 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079831074 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080220236 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073525484 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080160132 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079610498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082406377 seconds)
  done (took 6.086742155 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078488769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070765373 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081933644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061996355 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062410299 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072180313 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062540536 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062415635 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070476849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073937986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072534915 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072375107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074650926 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072680062 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072659798 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075279873 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072277856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072076896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070783142 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072249982 seconds)
  done (took 2.781271071 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076789499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08140846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067703542 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073525732 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069320434 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073944638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069500531 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070071925 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069960702 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069554574 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075971076 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075792444 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068385068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072584839 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073585658 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072448258 seconds)
  done (took 2.50067856 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083950807 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070177773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07779428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06421349 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067320738 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062740378 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063769292 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0616665 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063178642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076708335 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063574507 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07541893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063669609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062643241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063302639 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06965412 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063113836 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064303097 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063359963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07688034 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070462103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06485515 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067476543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063538326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069173488 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07079107 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065194982 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067356133 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063575228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063930176 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069903327 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071022758 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063350186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063861579 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062698911 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063867507 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063778289 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081912379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069304865 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063461228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062035843 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068982725 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06348333 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064877481 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06329449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063939021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062693059 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069324669 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064369108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069138867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063628908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065925793 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064246209 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070845607 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066012009 seconds)
  done (took 5.020045384 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07872219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067920699 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061861715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062234956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068452619 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069155704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069399445 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069768891 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068629035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063045722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068458137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067340101 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068868441 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068071808 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068381025 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067979676 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06207599 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06799015 seconds)
  done (took 2.572882501 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072799075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067288412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071408079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067258623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066916177 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066802343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062668781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062202854 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062328938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067067367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067248074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067123473 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063621618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067269051 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067149861 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06756299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067693059 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062998441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067349244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062936739 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066843908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062461213 seconds)
  done (took 2.803607889 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096306971 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083529278 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140717189 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079573481 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087675105 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.0724684 seconds)
  done (took 1.908702014 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092669495 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09840507 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067167762 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067235922 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073187645 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070489793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070282266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071103411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075163183 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075794659 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071086872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075746477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075297414 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077408587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073057024 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073201009 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073484017 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071168366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067537158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08008203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070668963 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075277808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071129994 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070761121 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070412179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077833535 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075533443 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075574845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071101982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07552726 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073392535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070925769 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075760498 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076127036 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067382575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07585657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070890139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080652232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073218516 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077585139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067724693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073281199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076125701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074885911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0757656 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07078472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074661078 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071146902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071256145 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081947037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073377159 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077071697 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073505118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076178309 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075632824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082582906 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075910956 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077440306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07373188 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076058351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073400985 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077275114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075877652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073460765 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077628371 seconds)
  done (took 6.279679953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105538789 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067837118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071467898 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075922429 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077162374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071003354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071199969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071110914 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071231238 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068243827 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106784504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071636616 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077794128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077970221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071443565 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071146938 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071209343 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078149674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067757234 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0821715 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071619092 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077289616 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077570169 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077288349 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075928349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073222611 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070955298 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070849367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070824426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070861978 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07522327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071615357 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077314456 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068420447 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077369077 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071362057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071206396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074798318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071142709 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07341027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077741212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080812714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07069559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071317682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075850237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071302694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070844486 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067747902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071108555 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068757223 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075784954 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075835578 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075832445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077545809 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07128479 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07126107 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071074235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070900978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073013299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073039741 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076980344 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07089943 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082496783 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070648185 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070916746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07764196 seconds)
  done (took 6.277702675 seconds)
done (took 129.063231912 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209537605 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185073904 seconds)
  done (took 1.732360009 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074202517 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105189305 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082780968 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133550837 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071397322 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105394482 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104797382 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084054202 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071661844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07142057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071231889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074504616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136380872 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072201814 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071487942 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074060415 seconds)
  done (took 2.761088569 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104971554 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167165959 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108896993 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069195978 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104511735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077414501 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069533795 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081947785 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076126719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071480959 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078452997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075412119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070790994 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078432136 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075802551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077391551 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071347851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077375412 seconds)
  done (took 2.895475572 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103085062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094853141 seconds)
  done (took 1.558808753 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17290784 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134148998 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202181249 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340080128 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151136014 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.425840311 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139099831 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138708626 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112639309 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13518767 seconds)
  done (took 3.307501499 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103605511 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193619617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293933688 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120858563 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076248323 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111404893 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122689804 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082442978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0802869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079894265 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079507432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078151397 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100848886 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076828242 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07645444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078522458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103623775 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075229835 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076483221 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076495331 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104053413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069941004 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076756896 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075061675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077917173 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077531022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071169151 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070210885 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076227339 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075982635 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079471281 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108668213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078145063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104396955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0740207 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105152754 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078383443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074484483 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075709828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074613524 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077513083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077366161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078453843 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078062471 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071468225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078484428 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071783239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070170479 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080946576 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071506527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080439621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079203971 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104180481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07180371 seconds)
  done (took 6.191765452 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108203534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10737791 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070911361 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113294818 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104307537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070563569 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105802037 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099290475 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107863122 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07114652 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069304292 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071142269 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079532002 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081782723 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116019623 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108032385 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073546894 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070526429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108416138 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108101166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069757897 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102336916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098543515 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107143229 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069088219 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071035008 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069865301 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071431149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076595213 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078143874 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070369594 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079316736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084010844 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077315754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068487275 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069523839 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069637403 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078297549 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079412594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078652812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076909538 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068981966 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069230332 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070323938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070058057 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068159998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077666088 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079954005 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077244123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068868859 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070772591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069440082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070089625 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078599262 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076582921 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079130606 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078610397 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069654119 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068922575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072144438 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07969585 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078292897 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078388523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070056383 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079479438 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069536472 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080083834 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083441585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07216843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070536827 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068896368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069104239 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07031226 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076306803 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076426252 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070913556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070835111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071126234 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081494709 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079565612 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071370279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077199181 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068070034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069304414 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070284972 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070426823 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076352685 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078034605 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070571759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069455344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069521392 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069232984 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068290177 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076000856 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078118973 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078024192 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077865204 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07023537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077863113 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077521831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070070901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077811742 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069150888 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071049335 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069900749 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077798699 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076904737 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078317688 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069109195 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069416843 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076963016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079578779 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069493316 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076477978 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078993017 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076843616 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068466745 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079994869 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06947109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078245066 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069448751 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213074685 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070195469 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079110884 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070628537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069153316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069630854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078861209 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070834802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069795393 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070409504 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069663228 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0776239 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080799035 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071338385 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077905205 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077500854 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07050134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078092951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070092462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078289416 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069865321 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070296458 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068645685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08090952 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06978312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069543405 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069737724 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078820421 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06957356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079185483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076321552 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068388579 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080742078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079053059 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076395781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079353897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070530085 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068975638 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069818921 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069433958 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076551528 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078420568 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070895539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069707031 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076947674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079466078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069706987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077605327 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077829461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077894349 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069818693 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070192984 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080716409 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079802022 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077540486 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077608969 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077483809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069995749 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076887191 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078103014 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06926826 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083065843 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069652986 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081936401 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077815816 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076123201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078395965 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079317289 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079138821 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079837987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081798909 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069013692 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069319682 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078055073 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069234753 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069601022 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076810575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070667583 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070648415 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08200455 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069727546 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079423722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068715834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07770351 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0691121 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070606438 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082147568 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069584485 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070752204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077835688 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069272523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076929195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079307804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077362836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07194683 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071120883 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078238663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078326713 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069740234 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069662054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070411226 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077155384 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07627004 seconds)
  done (took 18.582119248 seconds)
done (took 38.40186294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211533165 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153233941 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185041862 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114982763 seconds)
  done (took 2.122271784 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107417456 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098268202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087821193 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065692855 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093844325 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066093431 seconds)
  done (took 1.91072558 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.339499262 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210823352 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191789559 seconds)
  done (took 2.132710883 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223098363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211553557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462977338 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282303692 seconds)
  done (took 2.667196538 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144598078 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083136141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064935704 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.078080076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123661865 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.174496477 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093076049 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127908951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072307177 seconds)
  done (took 2.405124886 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146282368 seconds)
done (took 12.794491907 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.208640292 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107714025 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180366531 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077428727 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.23074496 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08593244 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072714756 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.169351478 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069023566 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.256624733 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177205622 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.179277324 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.165780777 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.206443482 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07662639 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129496087 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089305067 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169232748 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.42831181 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.170919232 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075614977 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.130147241 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075428518 seconds)
    (24/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.176506657 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070464617 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074864676 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078437763 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107955701 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104675717 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084947883 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.161521858 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.181562022 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088056772 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196307194 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137845978 seconds)
    (36/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074751668 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.20252315 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.2379114 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.148596825 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07440021 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073967262 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067652131 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174282856 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076375675 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064885929 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13699319 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119512258 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08416429 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129061565 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065719236 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.156513865 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162901269 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192703642 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173048161 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07615837 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190915103 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.066717668 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072236077 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083027317 seconds)
    (60/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178027385 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077269844 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065995679 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066184813 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074360493 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.100326576 seconds)
    (66/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067128021 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113491802 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064794772 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066843409 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134670893 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073288576 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074696726 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07512293 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099824833 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068639626 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093181815 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065611868 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066700143 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066794838 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070044617 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077209476 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.093525317 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179476474 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090421273 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065518214 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.22832882 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065941704 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169890484 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180752288 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.339718741 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075792234 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165506622 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067499786 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079008725 seconds)
    (95/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097022053 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197135729 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 0.134032873 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.173684303 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078955547 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088969796 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21696403 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091985885 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121570061 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06628467 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077861245 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175031676 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181230629 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1715425 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075098134 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066698896 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082848898 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07643922 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073155565 seconds)
    (114/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067080006 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07981714 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076947215 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066541944 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179663991 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074117512 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.211643375 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195721706 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079209804 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087653703 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079403938 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066969173 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087446093 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066305994 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07808893 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069111006 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065929484 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066813102 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067458597 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066637359 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070640599 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067124828 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077271351 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070683363 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065522202 seconds)
    (139/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074094417 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075193479 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067259488 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125462614 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065705885 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066071656 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073432926 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066310688 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120246381 seconds)
    (148/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.128829974 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114921214 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085314727 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066698079 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076092285 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216370609 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074812903 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 0.146196981 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075053226 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084046346 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067122328 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131862238 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066217343 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075145266 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07386809 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072736257 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084752216 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089909288 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073186749 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117462184 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0736851 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199946465 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067011829 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073766877 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066305902 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087334088 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170126086 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125291122 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067255813 seconds)
    (177/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064989287 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074282956 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065669136 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217129339 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067237949 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125574121 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123677919 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136591434 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065859352 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129579657 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067451321 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065626245 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153803004 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07369955 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065830711 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174765953 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09051194 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169758097 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077367031 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070801473 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064820869 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066127988 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066712477 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137576941 seconds)
    (201/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068302069 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090789855 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06941938 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06667112 seconds)
    (205/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078740471 seconds)
    (206/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076085111 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06659661 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074310248 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065310005 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06554966 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.259773349 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066738092 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074148206 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089281745 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068014959 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115502166 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068434246 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089506831 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067051648 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078948465 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090459706 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08746606 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06673141 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072474792 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066761922 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173808181 seconds)
    (227/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073735603 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066857422 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067616108 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.136809183 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072636434 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066636651 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066418798 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076041643 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074077305 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13381271 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13356812 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137413012 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090514546 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171395342 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.132963926 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074424122 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071648156 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066892298 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066884415 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112827072 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086615764 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143737852 seconds)
    (249/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092658741 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088370036 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078080762 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067299316 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065418088 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072985022 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0673618 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06629938 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072701366 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091161483 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067170882 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066924916 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070664569 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069885323 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06842612 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070467785 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06652221 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192210405 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.0881496 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075116943 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08678043 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074645312 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07531515 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066807274 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068687936 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072786454 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065535843 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06647672 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144153158 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095991776 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077134439 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137086938 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066417677 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075288476 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066894701 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06663653 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06994795 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066415258 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069611886 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07853549 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127259943 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065743519 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0662374 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08310483 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066668565 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066790937 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074803041 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080277095 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066591435 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066231195 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07296081 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091014763 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068040247 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065830251 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066434399 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068146647 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065631897 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065579419 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065333304 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066343053 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121324791 seconds)
  done (took 32.986325417 seconds)
done (took 34.388940403 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084119324 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097479626 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0728439 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09259866 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081030739 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095019742 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073979186 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078574293 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081239801 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080349856 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07916694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072217097 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075073922 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075703603 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073069864 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097346634 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080303693 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074757599 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074583676 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066134695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074109538 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066864309 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066080865 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072634396 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07733737 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074050917 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076223581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074962555 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066595051 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06627438 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071012294 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07498092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0663666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078784435 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075270125 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074463514 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075767711 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078336529 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065875605 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066318101 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076028331 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066486398 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074293401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072876812 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071165786 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072721376 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074272834 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078429305 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09662685 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070634271 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07579882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076477255 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077635202 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071487833 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071103885 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074544572 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072113036 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096768492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07470249 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070954921 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075935606 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075466185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072416847 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074273428 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074383466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07660789 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078119264 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072673357 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076410958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073086209 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066034979 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074118142 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071003934 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066451725 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07711981 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078577096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065727241 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070053937 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074617139 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074763429 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069415041 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070728341 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065940981 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070762733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07081325 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072315375 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071205515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073076961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065425966 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074458945 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073408742 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07367851 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065650031 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079246636 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066196102 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072322877 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06618244 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066294929 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065359194 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071222049 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065816726 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070513675 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075146386 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065075017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070620691 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079219889 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065856514 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072883455 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067578041 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06743875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079688525 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078464081 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067407837 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071252781 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065603427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071281903 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065171289 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065670075 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065646709 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065753658 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070680341 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066192544 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069926211 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070979626 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077895373 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065836572 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070297797 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070316323 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065361907 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07217298 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066139675 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066186539 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065362066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07908078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069995034 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065857888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071400448 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070373509 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073880646 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065134473 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074933268 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072293273 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070538436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072200756 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065451865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077148798 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070881682 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069973955 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06519387 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065780598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065309681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065580397 seconds)
done (took 12.569616484 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068942003 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117049987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092744971 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09255182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082148703 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067660404 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074078822 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091837239 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06807201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096946354 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088163172 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088328582 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109713267 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065695998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066618756 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06789237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068294928 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078180753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093540162 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088822885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105893736 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066928205 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085894188 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086701598 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083416755 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088137148 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067965877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067877929 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069567305 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089570889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091974221 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069687656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067488952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090088215 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084452936 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079899433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067302241 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075404536 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067794128 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066313071 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068341304 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087807836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075106837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074954959 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067916599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074757929 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068159957 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083344045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087392841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075447479 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083069445 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090935097 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070435948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083366861 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067035073 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082172511 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075942153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067196892 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068093509 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072029318 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067163337 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069612972 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078156176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075884609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07170628 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081408793 seconds)
  done (took 6.654062808 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084257476 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094041444 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083240675 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083808679 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066211113 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066962409 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06702193 seconds)
  done (took 2.033711256 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0697086 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08730172 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090550544 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090477045 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083165728 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091246288 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07482208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067697362 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095229251 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066249073 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087189014 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097259235 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071048166 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078979102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091782494 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067285569 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091539169 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067271267 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06777737 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091091899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07188482 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093705699 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078661761 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067907928 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079910784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067315688 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099311472 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075265443 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068746912 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068426809 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06851238 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093942023 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079628065 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079176258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068646611 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082493911 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081130998 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070692251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07795262 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079900648 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082846868 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071105529 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06686034 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068839287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070836325 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078729974 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066249598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069413117 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069810662 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086564661 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066026518 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079171283 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070904237 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072721853 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073053662 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072524597 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075476083 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068747676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086426025 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068575788 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08444245 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083260157 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08090338 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085625311 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069771502 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08236381 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083272205 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070503207 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072144834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070019614 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083996259 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070699871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069256963 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078849942 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067062355 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091307416 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091514469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067237773 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080453161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067891778 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068566722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079166535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090870773 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072372181 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068080123 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07162546 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069567961 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070269533 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066248574 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070875383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068411214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072612622 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068196474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070989942 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07008712 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083584133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066263139 seconds)
  done (took 8.897980861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069807903 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068787713 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0711632 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070141234 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070101281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070621019 seconds)
  done (took 1.939209087 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099257601 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068327882 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081474333 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070465447 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106168628 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083219766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083837277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086140003 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081445432 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080010466 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084129053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086028735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087410915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070478634 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083395088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06927334 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083621986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072623364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07906993 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07060853 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08093448 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070421412 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070445907 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08804889 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071789601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069351353 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077290478 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079474138 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079314519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092815358 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069926965 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07138108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075973983 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085652588 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084514034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076220991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068226431 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074885972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071148877 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072171914 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086263056 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070586527 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070903902 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074597214 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.088759038 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075845668 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07506193 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076528359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083068176 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074451526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074100125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069352754 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071572582 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07447804 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07621272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085668006 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074230377 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084399706 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069921464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075516858 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068240864 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071469023 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087602426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071218647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075566594 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074419613 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076000538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070316319 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070459055 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067911168 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074321107 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06849137 seconds)
  done (took 7.054720615 seconds)
done (took 28.084644701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538254567 seconds)
  done (took 2.010497633 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622798244 seconds)
  done (took 2.124213451 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.610818583 seconds)
  done (took 8.103342048 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417115921 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.642984196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748687574 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134926297 seconds)
  done (took 3.474668299 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704406171 seconds)
  done (took 2.209074692 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23591231 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22635332 seconds)
  done (took 1.974113107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347546051 seconds)
  done (took 1.842581425 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.052643108 seconds)
  done (took 2.547518402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.253502091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169261296 seconds)
  done (took 1.925384021 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444522714 seconds)
  done (took 1.942141112 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.252893902 seconds)
  done (took 5.751312716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218043738 seconds)
  done (took 1.755528847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235153099 seconds)
  done (took 1.734311913 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.860480427 seconds)
  done (took 3.363769407 seconds)
done (took 42.270295597 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083668247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086057397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085647225 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081849429 seconds)
  done (took 1.822765888 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075131975 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071262012 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075257911 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071023327 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075211061 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070960982 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072428302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073725566 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071479502 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07138972 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071264283 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071470647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074146648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073186755 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070169535 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074503106 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074970881 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071313416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074524101 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071189196 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069510941 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07397065 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074090639 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070497878 seconds)
  done (took 3.24709554 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079205185 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07364773 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076054046 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072367148 seconds)
  done (took 1.813050673 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077030634 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088455264 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08656115 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077816604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089223332 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08441394 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067463692 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06794039 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069453937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076752979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066701203 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093130773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086540148 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077178544 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079162206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064202185 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066207553 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085761175 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078666356 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077655912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069395866 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077332479 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066703404 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087540964 seconds)
  done (took 3.369059265 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08704612 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067238543 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086474815 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091982122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09338935 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067071006 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085471914 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09450602 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142136913 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067555279 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072402551 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067264392 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10539705 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067137531 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087084249 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110416301 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113677381 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070661472 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099384328 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069818201 seconds)
  done (took 3.261498223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085443105 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070281521 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071267437 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067637308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079785085 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076378693 seconds)
  done (took 1.968669889 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069239245 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069219611 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068736111 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06845537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073936027 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06848937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06797599 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069734818 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068473244 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068654869 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068263265 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068249329 seconds)
  done (took 2.345536535 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195795677 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070732684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071891326 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067115979 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07314309 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068425514 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082883688 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070154438 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095144095 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06774901 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068450511 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069790324 seconds)
  done (took 2.515898848 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194918206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076999957 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224008692 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145238519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102653318 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109902866 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111490869 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108220483 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133157412 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098049523 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154686199 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159814038 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104660564 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130356535 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087916093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120518744 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144915249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156123861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100199428 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154860418 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135778319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122648638 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142870035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097662303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103003657 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113005248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072309684 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077606493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159223764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123007352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135813471 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105157871 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090480077 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165929988 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162207051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133060608 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142448054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082187811 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118395057 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129801094 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194130649 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087508557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152717492 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103912629 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078328961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126854644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112374396 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117016502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102062114 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087310715 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276511586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176709652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129216635 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084102051 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11763065 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106092475 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108901691 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11418688 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216991822 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150303089 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121656936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070332153 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107139442 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142651623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126220036 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104729906 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118468853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090201272 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124722697 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15198504 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135718999 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134300233 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.13610755 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085210373 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115353879 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131211294 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123194073 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162875702 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119192042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07179813 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116143446 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095913666 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078906344 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143618688 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07443742 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165747824 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096699266 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121523649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126302547 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105951619 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105743004 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150841762 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135545648 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101521408 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085014948 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100109335 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114927186 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142540385 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085400247 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105263205 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110806237 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078374265 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128668013 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073924744 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1172821 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093555816 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114479313 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269531302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079619286 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120408904 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101002606 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100212026 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126111634 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149507966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085884207 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079283398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157059762 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116809888 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10033116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135615864 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150156839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11868318 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094233552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137543575 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164662536 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088538214 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153472184 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100000614 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082076353 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10382279 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119591879 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107251144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11862538 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079824278 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115969991 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159218437 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073358151 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094184195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128221548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080045953 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078927375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102148495 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100998211 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094501879 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098682524 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101553634 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130952353 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11852154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103273059 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119141281 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097496883 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156994352 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08599982 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100910711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101503252 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071595597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126894596 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147573847 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077199324 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151897979 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117375393 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112446578 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114615444 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081876531 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131141999 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077591641 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071380593 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132605514 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256610223 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106346995 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145460113 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110355826 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118933261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115266129 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124847562 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123229861 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1235443 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110872185 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086796364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111117261 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159551899 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071771801 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0898051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080473548 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099888454 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091103837 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082455099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132877447 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119111113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107318705 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111117305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094668086 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142569871 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077955093 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11962674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117833885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093981902 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146700973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144914009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126935202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097987563 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130628999 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07268515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073774631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086817545 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118068964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082288457 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08200836 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109797197 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142274725 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123709817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129594163 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11876057 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115857539 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149541726 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071740525 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116786854 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13680356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116185194 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102146306 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088644831 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095127366 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136187309 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100167545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199582596 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11006166 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117743477 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297675197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100796256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078497883 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102032605 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126229407 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098530044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136034518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09589526 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084467745 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103900372 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076691688 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096161154 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129293972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112047384 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129581774 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108697992 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123017679 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076155291 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108319324 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118146899 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118375695 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082153941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115413114 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157809362 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10188541 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112659983 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143288823 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077378972 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13529142 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163265819 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136369935 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082931614 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101815125 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118037211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120531606 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117221925 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131679086 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101119547 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131102174 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10798745 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083017281 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084426316 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09251213 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100053967 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10942157 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101520096 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110306371 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093700189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129864728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099538956 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107561614 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11369052 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09750109 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093758999 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094285001 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164566557 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11380254 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160412271 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097871689 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134402248 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299542117 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075103293 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077960381 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080499869 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133442325 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083911804 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124300653 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108954073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111632942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118060694 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131023851 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093810446 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070966364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105449519 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127209532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118390781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094542474 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100341283 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154004175 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115007906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077218047 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108904826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111481794 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101227482 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165710234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080514009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106861202 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075920517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121730436 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144060899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08194715 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10157038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115540181 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107265783 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121368905 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096057889 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108545711 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12631635 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139256266 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121247285 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087811801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10729855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124142847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146459694 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100670073 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097670769 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164411133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143881557 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153317911 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085726468 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110151968 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110557616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106899701 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128533816 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083070023 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152384482 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079814877 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127543544 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09743492 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086611369 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123663351 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108214263 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085192975 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13913023 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111006027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080111145 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076973545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1051808 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112583165 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097188086 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072533301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133135063 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071632396 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125996632 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157016364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076908799 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099079888 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090881378 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078609615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098670126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099935844 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083361825 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.094934188 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154233446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.083468975 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137991525 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122647043 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105400303 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119981745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095540422 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637445348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075467784 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134583603 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104435142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157114574 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091604191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107246902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102532376 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107867179 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125007059 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09273914 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171613956 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115267066 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107885557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075047241 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093376848 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094818732 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082687341 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098514511 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10394463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102256906 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08741656 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107282575 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109182945 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078333914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089381428 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137479941 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105162512 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130969713 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.399490067 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085935563 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118663524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131066008 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081149993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116929748 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146529669 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105360591 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123156546 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084030592 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101131441 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1671825 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074530866 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152806936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118783412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109401057 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114896277 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108492501 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127529107 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101948303 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11909662 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092213957 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143387591 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112175218 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08398378 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07917384 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104226986 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108646723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097412607 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096698009 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098757338 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145045839 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071889204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096591202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112911532 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142917575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162933231 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105008642 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082677228 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118314331 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153313824 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11145789 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11734084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080648364 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079909128 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080208473 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099903715 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122398021 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110469205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115796673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109433056 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153380334 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082271334 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223473233 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093393325 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102359539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087885267 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079314614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093307956 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093705788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100211031 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107217346 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321452974 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097655322 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089770045 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091270129 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073850199 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081862331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12089269 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106772157 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112749704 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117451375 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080856485 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100099017 seconds)
  done (took 57.275760828 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120033469 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098905916 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100755866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144202519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122195431 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200370835 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151259317 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190073426 seconds)
  done (took 2.758210962 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069001568 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094519386 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104272464 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082967761 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06740704 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069198896 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226628034 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082354833 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068290432 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091742274 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078404336 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06956658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.464078419 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069219362 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070501205 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077387162 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068191501 seconds)
  done (took 3.472248766 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384421313 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613975173 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356582997 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076633925 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.054191329 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090767968 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.243440571 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139037729 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083100695 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537232011 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.372037367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133306195 seconds)
  done (took 18.715753833 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083158601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07698554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091623026 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092144082 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079127141 seconds)
  done (took 2.051151879 seconds)
done (took 106.174456847 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082202426 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442724332 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069912308 seconds)
  done (took 2.173360093 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091231866 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089950841 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089582311 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087897346 seconds)
  done (took 2.003493283 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075419258 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077370851 seconds)
  done (took 1.788314217 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.208526388 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175773649 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097938835 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083903691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081360039 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081698163 seconds)
  done (took 1.886173663 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07345965 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073506575 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074337623 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074291357 seconds)
  done (took 1.930708393 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06879385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067749129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069880834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072557926 seconds)
  done (took 1.915015296 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085173884 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085854932 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079810898 seconds)
  done (took 1.88672435 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101404884 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091305014 seconds)
  done (took 1.829122177 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081576664 seconds)
  done (took 1.719798057 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090533453 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101264385 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130882226 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115747523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136988549 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116204396 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089013186 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086404015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07961528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093087788 seconds)
  done (took 2.677961216 seconds)
done (took 22.003335937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079546985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372219657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360568947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091625088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669909784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358641191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995223099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093836613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144629826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070684266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08707008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652943678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985806987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332258636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973758668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330009702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652304055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06969412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06906982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070113831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979382406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068952407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06968668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0697013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650317101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375385077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07176924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332409555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070014223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074191684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35956174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071327379 seconds)
  done (took 16.270775682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071269882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122728238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073889733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085489216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071544602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071436783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073346083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07003393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124014332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070427272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087721952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069423825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073529507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071029743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090127269 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069534635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072387679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07141508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070933281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071305189 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08945923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070453402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071658752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073456859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071082382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084119192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072111764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070396714 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070751471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074963767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075796037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071760241 seconds)
  done (took 4.130976376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11802851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126914638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074952811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106957057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113656315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071929559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148124963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095075518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131722725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070386054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088117602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069648373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10503718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072094015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091758217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070877201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07403551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070601083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070171624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071740196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089965191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070043689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071820629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070960024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071853213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085980645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071728605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070604507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070790129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074631822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076524017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071727891 seconds)
  done (took 4.390063592 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071026486 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07415398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081345053 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082344525 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06973056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070802482 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072026513 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069061099 seconds)
  done (took 2.244887715 seconds)
done (took 28.680450154 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079054247 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068712697 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072963848 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088052743 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074793368 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080174932 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066510539 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07589193 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073276013 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072939336 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074501838 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068377877 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071123399 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066727028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073739817 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067187164 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082058384 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071491366 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080682704 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081847995 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070995635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073648004 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076279119 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081878085 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08165935 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08143273 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077925486 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074346653 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069334821 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071226101 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071685593 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080418769 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082353813 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082274845 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068224546 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068292724 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072635015 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06980559 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083384767 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077179557 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070367662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077819772 seconds)
  done (took 4.780351528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085773773 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089609291 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082934379 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08136112 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090804672 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083525784 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087833127 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078938908 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07820057 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087189955 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075374901 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082013398 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079418799 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073955476 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078604887 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076226581 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081444987 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0758459 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078979738 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079496257 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088947922 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073786405 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088880138 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080339664 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075282444 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081842808 seconds)
  done (took 3.781576981 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073952735 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086565227 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09302439 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144898781 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113187659 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08086576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082609424 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092585711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097447071 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069324362 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073819055 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093502352 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093834334 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075158025 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069365214 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084809202 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084528612 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071310336 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076217606 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097769253 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090301229 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086148896 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094381256 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085380991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068646405 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071367751 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073390724 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087649083 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07146363 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080337801 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071331542 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072987442 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070060044 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079351698 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071036148 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067818856 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093343687 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079690555 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081153758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069564133 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078383729 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070226052 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09394546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128782686 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067833308 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072493812 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072306708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080131319 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068142506 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096602704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081082562 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068430343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069442421 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068259394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0678304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071684561 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070290794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071328553 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078572354 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075695711 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090642511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07355365 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086529882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068009588 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079135438 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067773922 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070140257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067532383 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097092765 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070740369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113422327 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069593323 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06757041 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079782353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079227461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075154733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068658472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086094556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080227092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07313659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077188043 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07216694 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072094246 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099030677 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069191144 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068235386 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0676919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072578734 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072927182 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069452539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080600377 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067882181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072295535 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086841958 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06849073 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069630317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072856039 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071086226 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068305899 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080234161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072728317 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07069135 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079439757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06936116 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072234331 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081761587 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075499326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067755846 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070727979 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072588216 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069970808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070009012 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072110501 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07063112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075535925 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075111212 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074360226 seconds)
  done (took 10.821264845 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165198934 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157038768 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071283494 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149494698 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077373764 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081711739 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152786347 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096506547 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068923256 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071371859 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069275054 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111037745 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110038277 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122696756 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084884931 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07315805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095243149 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120430778 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1566217 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151662604 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092735139 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077664168 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072561387 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071153194 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07159837 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079119304 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086038445 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07809011 seconds)
  done (took 4.512884196 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078283248 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104747218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073656757 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091889889 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088748559 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069535257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071031066 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071423076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085614401 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078883618 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069831945 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074740803 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073560204 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072961467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070366273 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076076473 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076964809 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068883732 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073601394 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075414676 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079597538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09448952 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073093281 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069766778 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072687713 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069785551 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077648733 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08200389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072472638 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10544054 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06727196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074404889 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084781928 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070236859 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069089804 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069542623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069362081 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069397617 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07081723 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068600524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068337453 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073179998 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068153351 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077569555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082497035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071184298 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071806465 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072270173 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072548131 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067381538 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072425081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072635067 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072134804 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077261811 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074048964 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072820945 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070252212 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096116634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075460788 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069080301 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06848438 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068045149 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072083991 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078997622 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085139724 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071980844 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068179169 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069861028 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082162823 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08207573 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068685323 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074499168 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067568951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071449521 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072105026 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071888762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073946158 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068410384 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069064773 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069699505 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070463675 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069500105 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068493253 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072759033 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067600417 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068204124 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069568588 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071163154 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078115383 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068943576 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073305057 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070397044 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068410087 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072075956 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075040946 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072591606 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080018123 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080287118 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069905441 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067920004 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083482932 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071832853 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068794067 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07487926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074003437 seconds)
  done (took 9.48486665 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092424976 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069738968 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086007188 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092759594 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079579943 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075123503 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079842968 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068935627 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08539576 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073930947 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076954255 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067936448 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080663282 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079628398 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070319467 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080036349 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072498555 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087035686 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084192537 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068436517 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078796913 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082052957 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081703457 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08380799 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082704961 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084398625 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081845262 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079214042 seconds)
  done (took 3.93268607 seconds)
done (took 38.961789759 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.746240735 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.987741355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.729024197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.962263435 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.800188561 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 80.847557632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.812520347 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.720469596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.977140073 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.773974214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.967420944 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.965531393 seconds)
done (took 139.09421708 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.753534537 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.87442852 seconds)
    (2/2) benchmarking "String"...
    done (took 1.974353456 seconds)
  done (took 5.511017168 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.960018668 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.516773764 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.958663582 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.71976607 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.726291644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.995348025 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.48874942 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.16468276 seconds)
  done (took 30.233763103 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.943590497 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.946917905 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434076666 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.473392291 seconds)
  done (took 15.507936075 seconds)
done (took 62.721966734 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.741723584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.758203729 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.727379864 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723150431 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.811141975 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.731219331 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.884444784 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.779904773 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.722914139 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.734338387 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.726059847 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.143909081 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.728479647 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.887173639 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.728520067 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.723001972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.775766244 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.19736905 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.875244585 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.737721127 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730541727 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.75764192 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.724222203 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.723520983 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.762448191 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.724908461 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.109938395 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.730669166 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.56302888 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.726786078 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773430933 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.128310048 seconds)
  done (took 202.254808837 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.722424069 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.698513449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.762765933 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.747351499 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.099777592 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917825595 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.82587678 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.150708766 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.730066094 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.72826866 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.920626604 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.727402833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.941356217 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.670645694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759652741 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.824237301 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937683745 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.946948635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.768115805 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.887591229 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.73966913 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.909058508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.841131935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.901090752 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.740407181 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.815233938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.747079282 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.731339077 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914788711 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.897594015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775782215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.760758011 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929533162 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592613518 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748687463 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.733715139 seconds)
  done (took 168.210708199 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.905045242 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.724388903 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.723235045 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72296691 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.728630499 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.724869515 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.723846747 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.845699327 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850826988 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.145443014 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.391408152 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777371377 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.724212945 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474819065 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.723222547 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.737023966 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78950024 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.724283983 seconds)
    (18/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.722369319 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.72336665 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.72404532 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.737022079 seconds)
    (22/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.739801767 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84931406 seconds)
    (24/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724482822 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733762944 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.725168274 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.730979401 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.724673535 seconds)
    (29/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.751346967 seconds)
    (30/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726573337 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.907638471 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.726745796 seconds)
    (33/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.110129991 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730449775 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.965601166 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.726697221 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726502577 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546687083 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.280234586 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804473376 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.727101749 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730870061 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.725544071 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.941809168 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.726139993 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725550362 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.726044146 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.725983804 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832689761 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.729835756 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.848312995 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.731008811 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.201360673 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.725971754 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727254696 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.311821094 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.294346255 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.729625698 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.728018419 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.725611527 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727857384 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.731436303 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.201258083 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.797094789 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.728707813 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.727803218 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732136927 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.727385967 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.914112007 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.731789944 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727145964 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.388134078 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.745001242 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.852885342 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849893741 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733271317 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792367605 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81953635 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.727604519 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.726828448 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.727026412 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.726935041 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.726957655 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.80743371 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.808562524 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738414452 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.728997535 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.782195259 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.796885934 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.728632318 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545579253 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966592868 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.727057318 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.726701764 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791123811 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727873824 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72910582 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.807292676 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850236661 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732974255 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437968918 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.466720279 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.804722005 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729088544 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.84191358 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.734533703 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807949114 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735297978 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.729947317 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.741580968 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.727025859 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762758082 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.729265366 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100133917 seconds)
  done (took 395.878655525 seconds)
done (took 769.971277139 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.359211048 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.329293035 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.418812182 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.340531392 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.316824482 seconds)
  done (took 13.43321697 seconds)
done (took 15.101372277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.803974693 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808797875 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745660357 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.807654188 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745913127 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.806229177 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792007134 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.749420081 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.775910848 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.748829024 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.776954114 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748189525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735017971 seconds)
  done (took 24.714212747 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967236677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95791139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791750129 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95389516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766853835 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947879937 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881631224 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869119083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86521759 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.739597623 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738027145 seconds)
  done (took 22.147805086 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958181053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.955501519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798323421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.952900601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771383673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.957061779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891491135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.87243892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876263145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738157469 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737871901 seconds)
  done (took 22.180684489 seconds)
done (took 70.713099689 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.732954338 seconds)
  done (took 3.402339957 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.752942184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.904648933 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.731511168 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.731205567 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.731215459 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.731922571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.731157124 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.732320903 seconds)
  done (took 15.717789993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.731769941 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.730840168 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.733197848 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.731123865 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.731158129 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.735110898 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.731953693 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.731590053 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.73162211 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.731362416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.733279427 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.729617965 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.729867509 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.729125549 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.729573107 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.729393449 seconds)
  done (took 29.370085132 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73131059 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.729318277 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.728282791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.72768784 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.729236366 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.730060571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.729131379 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.728748422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.728563326 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.728814813 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.730880424 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.730071746 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.727617271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.728497237 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.727992466 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.728767775 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.728862533 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.730051434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.732300732 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727557866 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.727965885 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728013611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.731590216 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.723928109 seconds)
  done (took 43.167274088 seconds)
done (took 93.325942208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.457461205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.654555782 seconds)
  done (took 9.774508695 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.725403409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.723698627 seconds)
  done (took 5.192732245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.72101758 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.72008358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.720572701 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.722143874 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.723358324 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.723701908 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.718173899 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.717242511 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.718259156 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.718119696 seconds)
  done (took 18.865918702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.719173337 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.718847335 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.719216156 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.718573466 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.719355832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.719160488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.718778348 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.720472158 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.719968938 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.719642001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.71917588 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.719219215 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.719545493 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.720562633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.718902547 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.719021137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.719373046 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.719651867 seconds)
  done (took 32.606362408 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.71988912 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.720301854 seconds)
  done (took 5.098432989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.720131292 seconds)
    (2/7) benchmarking "second"...
    done (took 1.720663096 seconds)
    (3/7) benchmarking "month"...
    done (took 1.720341397 seconds)
    (4/7) benchmarking "year"...
    done (took 1.720001901 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.719320658 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720163609 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.72021839 seconds)
  done (took 13.700191134 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.723348159 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.873743353 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.937444997 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.411280274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724184906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.722339721 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.629647445 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.72351267 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.723786116 seconds)
  done (took 19.12960719 seconds)
done (took 106.029771375 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.588337806 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.721533222 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.998027686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.791428744 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.789708899 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.721133483 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.737765272 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.001933741 seconds)
done (took 42.0073872 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.753521307 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.443776885 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.458602653 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.754996204 seconds)
  done (took 15.318422826 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.720484465 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.036269683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.747569827 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.544287858 seconds)
  done (took 21.711623444 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.083834769 seconds)
    (2/2) benchmarking "read"...
    done (took 2.072132504 seconds)
  done (took 5.817859364 seconds)
done (took 51.261243914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.718515416 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.716840628 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.718150489 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.719303395 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.717006889 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.718543821 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.718557583 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.717943504 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.7177357 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.717790118 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.717183903 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.717267495 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.717363035 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.717744896 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718613981 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717327633 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718470238 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718231925 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.717074679 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716961829 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718285683 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71945892 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.717852083 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.717935199 seconds)
  done (took 42.887557801 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.718415983 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.718285557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.718681907 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.718517548 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.718373633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.717940453 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.717967187 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.718771316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.716940359 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.717916347 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717756891 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.718506823 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.717800768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.718973511 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71784373 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.717764894 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.717448451 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717445234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718094584 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.718118647 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.71795586 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717632212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.718346778 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717797037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.719052259 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717609314 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.718854165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.718512827 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719250268 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.71815084 seconds)
  done (took 53.202350664 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.718910732 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.718736215 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.71892651 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.718647718 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.718892846 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.719266272 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.71808274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.718581819 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.717833957 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717781857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.718884367 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.718927316 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.718632664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.716920402 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.717540371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.717590842 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.718977918 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.715459752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.713784937 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.713304854 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.714779319 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.713920122 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.716634877 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.712440275 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.712346063 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.711782465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.711499515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.711839067 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.714482275 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.709983995 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.711076642 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709217988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.710618902 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709946072 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.711736088 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.708774308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.709555949 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.709328396 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.709063525 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.709273983 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.70960509 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.70857477 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.708131723 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.708162933 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.708603388 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.709074306 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.709313765 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.707407817 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.70784584 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.707124267 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.707631219 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.708710118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.708949466 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.70718626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.707222496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.706912215 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.70743419 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.707838796 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.712570245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.707102589 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.70699922 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.707031694 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.707127931 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.708048303 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.70924566 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.708017051 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.707438857 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.707972839 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.708445654 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.707986818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.707017382 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.707948695 seconds)
  done (took 124.902462692 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.707604143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707972498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706432598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.707268687 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.706943518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.70682533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.707504387 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708680887 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708884188 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.707498251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707471547 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.708149575 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707844013 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.708772965 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708513238 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.707948627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.707729346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707702787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.70820228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.709061457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708440854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.707307811 seconds)
  done (took 39.219859892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707229743 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.707495102 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.707101131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.70828499 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707720751 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.707457723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.707250499 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.708374168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707286598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707534871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708597614 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708479128 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.706815088 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708595368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709976375 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.707573385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708644161 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707691024 seconds)
  done (took 32.387314678 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.708578575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.709630229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.708399837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.708942358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.707193429 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.707885712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708388834 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.708942274 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.708163771 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.708744016 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.708769645 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709082725 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.708864511 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70905164 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706654072 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.706957034 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.707507707 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70743852 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707917246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709579458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707213706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707581608 seconds)
  done (took 39.22875201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708945673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708020403 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.708600149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.708755432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709042845 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.710259933 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.709892818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.70936106 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.707721128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.708383863 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707836559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.707757092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.707919164 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709707239 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.70769597 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707459245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.707314622 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.707714698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708415048 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.708956231 seconds)
  done (took 35.817399087 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.707490082 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.70813007 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.707819643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.708553574 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708817745 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.708224887 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.708231584 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.708282703 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.707932891 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.708477866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.708758607 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.708525901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.708057906 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.707996731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706933289 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708444217 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.709750586 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.708299165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.70854905 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.708992148 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.708765126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.709298807 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.709068639 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.708463682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.708551949 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709075556 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709340813 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.709485212 seconds)
  done (took 49.484987777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708448224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.70757122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.708887577 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.709265813 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.710382307 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.708214724 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.708080782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.708735664 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.707556425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707780964 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.709160201 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.708870049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.70859373 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.708322387 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.707691582 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.708353074 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709946295 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.708259516 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708548652 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707956789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.708621624 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707834164 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.708231488 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.707105066 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70772768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.707142502 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70791119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708374129 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709878615 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.708920749 seconds)
  done (took 52.900643359 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.728106181 seconds)
    (2/2) benchmarking "in"...
    done (took 1.728898222 seconds)
  done (took 5.104138194 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.708656999 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708745049 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.707719295 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.707618401 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.708336193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.70855782 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.710325361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7082973 seconds)
  done (took 15.314833391 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.7096405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.708331814 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.709994351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.708072308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.708807744 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.709331456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715142062 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.708816739 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.713229209 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.70937238 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.714513437 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.71419798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.712362163 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710941291 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.709744046 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711055218 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.708663732 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.709491815 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.708548453 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.70841769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.709436534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712337074 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.711255483 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.707980618 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.710714864 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.719439139 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.713586716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.707869894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709314583 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.712651641 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.709536146 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.708352815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.709591819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.707530293 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.706712961 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.707192319 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715802006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710037303 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.715379838 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.707533338 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707484623 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.706808026 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.709858239 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.71059143 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710549404 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.707291032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.707421236 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.707645329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.70838796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.711769093 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.712590018 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.708241516 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.706809194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712707201 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.710928019 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.716553551 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.708811554 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.711094999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.716092329 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.717855515 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.719053296 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.716640285 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.711271323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709162067 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.71681732 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.728864975 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71618918 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.709298201 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.707714176 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.708500854 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.71653005 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720146081 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.717545313 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.711330498 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709315438 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.708412678 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711521917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709577806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.718357381 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.713555436 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.709024059 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710143685 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717613046 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728028773 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.711152581 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.708967142 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.709019091 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.709367085 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.710213596 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72016838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.710307282 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.70915868 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.709425616 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7113349 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.711328456 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.709697088 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.71054902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712198458 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.709868958 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.710022251 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710241509 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.712950024 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.718919068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710392757 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711126805 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.71694542 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.71078853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711261516 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.718900664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.709904772 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709921581 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.711550975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.715444799 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.711435377 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.713952655 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.717661628 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.710598217 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.713447144 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.710985696 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.711340279 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719233127 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.733563959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.710428087 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.71019759 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.716717312 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.721746206 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711189788 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.716212136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.711901879 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.711017989 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.711315032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.714922804 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.711563041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.713131877 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712213487 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714266256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.712473012 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.712693282 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.711210823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.7136387 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.714085973 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.713469782 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.714704397 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.717122614 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.711791251 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.715783455 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.718457336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.713532885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.715407981 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.715404729 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.711442649 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712284641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.714327162 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.713241574 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.713615576 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712304258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.713283566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.712515094 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713293221 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.712422745 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713920555 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.713843502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716942487 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.712546709 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.717779434 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.714088217 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.713988732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.712844617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.712981985 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.712761763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.712950318 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.712252901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.716845446 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.718426797 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.71287007 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.714658849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.717285181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714512421 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.714565102 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714165461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.717393612 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.721914426 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.713586565 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.722036456 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.714800208 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714251877 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.714239571 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.714949978 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.715151666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714067692 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.716642779 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.7194659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725882899 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721791079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.715907022 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.717583666 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.715361998 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.717167619 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.719295353 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.715116291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.714668082 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715821194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716002031 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714522732 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.717561082 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.714248659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.714786459 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.715469152 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.714024765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.714818385 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715240321 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.717636883 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717671633 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.71667322 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715970669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715755592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.717125094 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.715376183 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.717357214 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.716057947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.71616202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.715699702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.722627107 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.715877345 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.718878548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718849089 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.717253578 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.71560779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.715103104 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718959055 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.719060886 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723397927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.717174114 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.718052393 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723441627 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.717743405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.718158925 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.720563057 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.716056743 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.715858253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.719493879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.722425201 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.716981617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.717393683 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.717292751 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71973615 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715857116 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.726752229 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.716608461 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.718521508 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.716679742 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.718242177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.717223634 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.721525494 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.719772674 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.718053406 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719821234 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716357294 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.716493915 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721010119 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.716654372 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.7171062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.717489233 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719822908 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.723835387 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.72327391 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.718636711 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.720227533 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.71881123 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.720347098 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.719939358 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.718602013 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.719452264 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728469264 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.723277221 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724927561 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.720985527 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.719706268 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725262572 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.718987651 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.721903287 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718958289 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721056181 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.72158729 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.719352024 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.718497043 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72052362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.719789876 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722375645 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.719859519 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.722275744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.719288813 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.720496691 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.71917477 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.720151066 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.718771246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.720067651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.719767206 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.723017767 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.722931399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.720799919 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.72134695 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726920052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721436571 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.722300517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.721117205 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.722172581 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.720706125 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.721411437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.71860274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.722440224 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.725858324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.722633428 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.727946623 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.72153996 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72803892 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.71926529 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.724790413 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.726376634 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.719384456 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.718959752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.72029324 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.719849058 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72880976 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.719575784 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.7201948 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.723409429 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718679116 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.720808997 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.72135155 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.720346042 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.720012885 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.720187365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729189674 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.722052863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.726562636 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72385265 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.720383435 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.720950073 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.71995314 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.721366275 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72615708 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.721199573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.723312973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.722308661 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.722623272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.720875849 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.721839645 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.721631428 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.721490029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.721193686 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728233831 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.722996695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724359341 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.720978798 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.73005607 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.722364264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728653539 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.722847146 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.722964421 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.721247215 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.720697337 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.723633714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.721921635 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.72652758 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.722923807 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.724132754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.724473543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.723083924 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.725787777 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.724141083 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.722058269 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.723774652 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730946957 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740077319 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.724653119 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724813096 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.72287123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.725004396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.72738072 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.723250988 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.723744525 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.725811833 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732868725 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727758979 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.725225197 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.723013765 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.727011365 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723042002 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.723375804 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.723237017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.723648078 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.722993591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.725712877 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.722814017 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.728318911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.722684713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.724034456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726734372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.723740173 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.732926721 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.723343876 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.725174338 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723561381 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.723626057 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.725271045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.725537255 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.723728519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724764607 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723833088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.726533078 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730930423 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.729264448 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.728275899 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.724813826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.724763678 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.727701174 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.725630106 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724450119 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.725304147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725919997 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.728035695 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.725958342 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.726362809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.724439139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.72461645 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.725805835 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725620862 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727603189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.732345277 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726478456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.724859931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.725183764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725395361 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.724389218 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.727124384 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.732927481 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727841907 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.734862412 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.732031759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.72865194 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.726919863 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728163695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.733187239 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.724785177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.728785739 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.725056521 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.729867865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.725901003 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.729677407 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726239362 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.734644746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.72769255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.726429785 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733784094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.728541698 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72813241 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.728556749 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.730702225 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726986008 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.72615927 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.726114458 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.728277498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733737837 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.729553502 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726707313 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730481265 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.725892029 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.729490448 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729719815 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727074784 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.72943338 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.726598175 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.729208454 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727606199 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72694363 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.727138262 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.728042338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.727144751 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.731857115 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.732584504 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.726266128 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730829258 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.728818238 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.728239302 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.728912328 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726969375 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.728294039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.726929566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.727955765 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727925345 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.730823689 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.731304634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.728409348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.72830562 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.730922577 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727944857 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.732201002 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.736049178 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.733432167 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.727309397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.730370921 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.729204247 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.733087298 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727799848 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.729604974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730318609 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.730199945 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.728753284 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728935376 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.728334491 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.73050823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743045346 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.729056794 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731966009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.7298165 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733268391 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.728507183 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.728773802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.728938146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.731594233 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.732061022 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.735250734 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729549412 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736167311 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731939751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.730126673 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.731435642 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.732488589 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734607858 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.73336716 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729313979 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.729986423 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.733954651 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.74479589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729619075 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737676866 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756348512 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.730631679 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.731215962 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.730260646 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730283605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.731006527 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.732589803 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.7312992 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.730261005 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729723948 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.730362658 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.730780789 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736782407 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.733278961 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.73066922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.729472155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.731302764 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.732219789 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.731111264 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.730498399 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.730482322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731349112 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.731240102 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.730862129 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.731955275 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741199817 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.739690953 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.730188956 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.730895539 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.731892266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.735700898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.734787138 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739094441 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.737203306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.732217515 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.731983747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.73425208 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731473522 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.731152555 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.732630676 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.732837332 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73342962 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.732274322 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.742769231 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738491032 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.737485814 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.734988954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.732744634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.731588969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734760782 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732039842 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732682381 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.736180536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.733472509 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736420826 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.732725079 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.732853981 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.736558309 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.739083691 seconds)
  done (took 1027.675000095 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.732471066 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732216575 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.732115984 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73259901 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733813144 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732523662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733519357 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.73242561 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.732639171 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.733163573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.732809953 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733290413 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.732292848 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732477221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733023715 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.733666114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.732601635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733138912 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.733539 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73350001 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734403272 seconds)
  done (took 38.063455882 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.733199391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.733666559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734218708 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.73372982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734291105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733847428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.734228828 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732817887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733523506 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733538524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.735130022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733777881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.734424384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.734162128 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733532494 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734014564 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733965648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733859844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733870223 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735006508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73386475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734719905 seconds)
  done (took 39.819682846 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.734669466 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.734483227 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.736521338 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.735048874 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735025002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.734695428 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.736065754 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.734403811 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.734989192 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737450766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.736109493 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.736040565 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.741677837 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.74134401 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.738800887 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.735004426 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.880685764 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.735841603 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.737044996 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.736041238 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.735725956 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.742187203 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.737224488 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.73537103 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.734794665 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.735266559 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.735814261 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.735729108 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.736086736 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.737398079 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739350116 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.734934272 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.737184485 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.739644884 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.738341302 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.737094583 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.738914486 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.735991428 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.735068069 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.737144544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.74464665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.75318914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.737999426 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.742685021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.736649559 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.738468244 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.739940814 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.742081984 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.738004085 seconds)
  done (took 86.959103674 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.736402433 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.73859125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735867649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.736773645 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.736454506 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.736632141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.737182522 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737788373 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.73769395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.736165432 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.73779318 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.736917687 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.737858273 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.738645812 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738056793 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.738170129 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.738092604 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.738032917 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.739249278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.738157062 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.737942393 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738582984 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738741241 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.737599579 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738708377 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.737869374 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.738187554 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.737404647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.738772402 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73926233 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738880809 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738912674 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.738241492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.738819831 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.737653741 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.740190889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.738658147 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.738581813 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.738700642 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.739191678 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.739074119 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.740626119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.739312398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.738836001 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738596759 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.739244485 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.739986754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.740688185 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.740005106 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.739893968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.73933101 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.738937678 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739366751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.73990787 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739173372 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739414272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.738982265 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.739042721 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.739733697 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.738473272 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.739688225 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.738315928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.739163567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.739751939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.742207031 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.739510123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.739408305 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740124207 seconds)
  done (took 119.90496344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739667882 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.739989323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739398166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74024602 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739823925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.740125719 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740233343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.741155916 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.740131666 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.741217082 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740709249 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.74120096 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.74034547 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740792266 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741380226 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740748581 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.740883278 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741620659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740897064 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741132776 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.741085582 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.741059048 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.741196603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741274681 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74210823 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740839916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.74174709 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.741202506 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741279476 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742102764 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.744235917 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.741208737 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.741725182 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.742263199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.741278484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.744135483 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741629828 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742805895 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.741675159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742265767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743160136 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742875078 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741596011 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.741762479 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74141538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.741919989 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742590175 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.744788388 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.74180849 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74228311 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742666799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742470289 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741693614 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744169576 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742567993 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.741620275 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74252483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.742822061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743687295 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.743903134 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744059482 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.742324349 seconds)
  done (took 109.667723328 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742836602 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742660666 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.742551633 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.742700984 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744228436 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742692143 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742688335 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.743664723 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7425814 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.743903066 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742511511 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74297423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744117331 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744462803 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742972048 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743932504 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742883486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.742458168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744343957 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.743699998 seconds)
  done (took 36.545438405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.743298818 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742528702 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.742726739 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743737269 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.743761616 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743494502 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.742293109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743241852 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742859761 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742472554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.742515892 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743374259 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74251663 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743350501 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.745335465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.744145935 seconds)
  done (took 29.57165328 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.743069783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.743091476 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.744268994 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.744571827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.743689558 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.742914802 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.743675143 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.743338266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.743450346 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.743640216 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.744308748 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.744283595 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.745218881 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.745765468 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.744030554 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.744723747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.744279556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744046985 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.744031375 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.745394173 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.746174805 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.744265382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.744241072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.744171093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.743253258 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.745551025 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.746891521 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.744304718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.745141476 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.74622173 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.744995802 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.746105889 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.74593454 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.74522111 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.745374343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.744539965 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.745732774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.745555776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.746006198 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.745422789 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.745317029 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.744378265 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.745169758 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.745848489 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.747259038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.746383011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.746014154 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.746417155 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.745754083 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.74744782 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.74625646 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.746784155 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.746140538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.747873596 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.746878196 seconds)
  done (took 97.664401595 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746411891 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.746888807 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.745586004 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746086068 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.745696888 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.745533495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746316587 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.746398922 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745920301 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.74627385 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746850996 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.746867034 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74678791 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.746132416 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746343253 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745335795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.74741283 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746942458 seconds)
  done (took 33.118314135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.74713357 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747097489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.747931133 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746618397 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.747690793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.747211998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748421193 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.747817283 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746997026 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74968358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747792086 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.7480996 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752113142 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.748193899 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748681643 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747888679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.74945642 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748043434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.748146941 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74875312 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748717643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748589648 seconds)
  done (took 40.146183225 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.747491044 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.747731133 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.761056991 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.765387332 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.765689054 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.777619299 seconds)
  done (took 12.250683272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747685996 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749014104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748737268 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748893253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748292087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749729005 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749042507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750163339 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748576129 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749196263 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749278613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748705317 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747552756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748398433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747661885 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749222549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748127011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748781174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748998512 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748966328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749593375 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749352067 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748619391 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748113402 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749162549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750498577 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749200299 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750209434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749543849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74951957 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749849793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7490649 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748552946 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749172392 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748996594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749439497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75013017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750295629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749416431 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749329274 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.749128372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749337692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750056478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749803966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750166505 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74966106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749892468 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750187933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749983959 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750479536 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750115754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749036499 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750077896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750484648 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749610954 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751019334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750119854 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750518559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750528048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750784848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75121282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750379526 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751419342 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750869255 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750910431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751287774 seconds)
  done (took 117.157472289 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751109443 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751261507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750859479 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752677501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752131329 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75219564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751418518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751152333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752415435 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752313582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751924084 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752231391 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752443532 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751504711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752751007 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753663079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752181248 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752304285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75260191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753293263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752704617 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753905564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753256761 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754077829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754053361 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753086377 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753073332 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754132872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752894549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752874344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753545343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752892339 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752701299 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.753419115 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752686471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753202338 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753492673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753095495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754361304 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752847336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753138176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754180837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752929578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754455339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753628314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754089224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754554534 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753314767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753979969 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753721587 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753780384 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754364563 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754295612 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753434071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753811916 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75380961 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754270484 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753525297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753945196 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754405832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754898594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75454974 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754177885 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754714967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754434405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755205365 seconds)
  done (took 117.404978869 seconds)
done (took 2398.058797854 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.768147952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.872812168 seconds)
  done (took 15.333674982 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.92260192 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.873231309 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.759838149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.803715855 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.757487567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.766074602 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.769002716 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.758904417 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.758119024 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.758182644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.759433522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.943797729 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.814162531 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.759419704 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.759771325 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.852600305 seconds)
  done (took 50.517792328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.763203141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.762463377 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.773948498 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.765140112 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.762344956 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.774592275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.792380402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.767166593 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.796534763 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.772767974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.828604191 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.770698625 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.762828987 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.81168404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.774297827 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.777604465 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.85939136 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.83548682 seconds)
  done (took 33.844867356 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.836807505 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.772374075 seconds)
  done (took 10.310093746 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.756179451 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.822404828 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.820728303 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.768189399 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.783474833 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.768888475 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.763376369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.759958909 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.796329628 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.795986653 seconds)
  done (took 69.535929523 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.771179583 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.76892416 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.765843935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.764689741 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.762478281 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.767801767 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.764816963 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.765237498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.413045257 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.797712024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.771670038 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.770632192 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.765986787 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.767051689 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.76423818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.787061259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.897750921 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.763904989 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.764146226 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.771584762 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.766628841 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.817749553 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.778363508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.766836867 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.794736319 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.414111547 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.772611248 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.771565776 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.870387056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.763918457 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.766610834 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.954829293 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.768826666 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.226782573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.02025198 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.770702221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.777771034 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.772793384 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.76348806 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.88321538 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.767185692 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.771825687 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.710308906 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.002042856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.859683532 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.808273509 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.065938714 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780237589 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.766602718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.794685443 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.768570376 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.767228555 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.77883525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.278934887 seconds)
  done (took 127.008997953 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767030667 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.110888297 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931743349 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.76404482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046571782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969332345 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.766457259 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.811612655 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.765649663 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991481554 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015176381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866081413 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.766524829 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765447247 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.765902242 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766666842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.917435409 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.834558464 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.76825877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.764363116 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791665646 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003983081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.885989218 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767851485 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.792862078 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973796535 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.885238914 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.86607398 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.480156928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.765714636 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827931128 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.766680111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.7653007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.765899206 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.919128508 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.857055544 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848936258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.767434902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765374399 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.765088717 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513965291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964427083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859269801 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.894756497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015944995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968026627 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543364368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.765819569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.500910648 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927249946 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.991811673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992795722 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886802352 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.768906976 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.018822713 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.765657542 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767184852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013898577 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994041538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.860843504 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768751865 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.768247206 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.76601099 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053856392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769811969 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.861727356 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770032487 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.767461572 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.86224253 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863101782 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.998568783 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977496521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.796055502 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.099789062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.275747009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.01161104 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.831653037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014167886 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.770132312 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.766350669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844657148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.611320347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019691152 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046847154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010213115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801964276 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.481366218 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.7679179 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.992228724 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986057528 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.025595478 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0118454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.008618643 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.091177226 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.76844829 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.767853393 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.031551633 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.891287772 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769461356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.116721485 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998894644 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.300774741 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.793559701 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068667258 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89825164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.771357197 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.396060391 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.768346128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996203211 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.807517223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.769902905 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769884375 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985851904 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.753061174 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771306102 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.659846135 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.828776924 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.771290264 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000618387 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770376561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036130012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771828745 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005630781 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.745755273 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801900861 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.9428891 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.016230921 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.774113673 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009204616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010630067 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.883510954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0425148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.674719306 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.77469855 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056997157 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774556581 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.772054349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.940139802 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773365511 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.913851423 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.776217151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062266705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793032405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006358331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775170724 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024948877 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.803978293 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821667759 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.774540884 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.903244535 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.775651284 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.692214408 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.929063488 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775857641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773603026 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.319805478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.775793006 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.920980994 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997716489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794330816 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84179308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433785446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774209986 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854974 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.795799358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.171586856 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.777685511 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.023455745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.778163142 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.187583236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.773317027 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057835433 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.007153696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.774784568 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774196322 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.678102781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.774354739 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773666985 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954655244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.118650096 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.773954267 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972706497 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777786195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.899664506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.775611233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.844686214 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.105722612 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773822572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.77336546 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.774693853 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.775185375 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.773829749 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976750035 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.797162133 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.266575213 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.910210405 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041089071 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.082672919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.01015768 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.815964352 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777504114 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033064222 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.777189451 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.836074304 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.776217609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.794417192 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998438464 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778508806 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.982741765 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041825247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723966806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821106596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.778373599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775978627 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.775381918 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.918724132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859917821 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7775605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.775627167 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889912927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.894414174 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980234945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.777937317 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.87725825 seconds)
  done (took 881.75071754 seconds)
done (took 1189.99372494 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.773780268 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.77577977 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.779370021 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780706227 seconds)
  done (took 28.821640971 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.78599666 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.778356245 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.77800467 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.776479415 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.776784207 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777042583 seconds)
  done (took 12.38582717 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.790034551 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.781773592 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780026099 seconds)
  done (took 21.064451104 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849828668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.159204589 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.909198542 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.203943122 seconds)
  done (took 9.834480306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.77786112 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.778383014 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.776415233 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.777080463 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.787305089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.786426696 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.777781783 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.777470123 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.78623469 seconds)
  done (took 17.739060442 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.819509865 seconds)
done (took 95.376835482 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.899091271 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.77886604 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.763454231 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.860390438 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.12088381 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.017599966 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.84465428 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.867338002 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.8800061 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.778897615 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.964583633 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.861907924 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.059068295 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.781891424 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.793868485 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.779906532 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.030325602 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.890763623 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.932369172 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.962134601 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.93651561 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.385758185 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.802863891 seconds)
    (24/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.911529279 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.838689414 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.907567006 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.902766467 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.772866261 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.511881895 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.865158746 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.014280199 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.779288375 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.109896455 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.147506702 seconds)
    (35/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.979932042 seconds)
    (36/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.802704242 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.551829588 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.779061646 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.383165144 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.374770766 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.925177801 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.775709514 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.879642898 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.795327741 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879272115 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.024623466 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.783741348 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947322742 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.877991155 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.961808718 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 1.996866804 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.777781133 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.232514816 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.650535872 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.778144611 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.777511271 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.466926103 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.78097117 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.023926525 seconds)
    (60/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.004916942 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.783180474 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.238466573 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.931359012 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.795139728 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.852515996 seconds)
    (66/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.860359765 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.788026153 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.86299973 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.77583138 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.889620144 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.097357545 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.801508549 seconds)
    (73/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.786209899 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.053706599 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.99624318 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.779746918 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.142038381 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.960152659 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.000574388 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.79432316 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.790220851 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.597008013 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.782998711 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.777395798 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.182053085 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.095420254 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.130960849 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.883411722 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.779096483 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.075009322 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.863143524 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780328477 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.040405645 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.778105435 seconds)
    (95/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.903892356 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.090636298 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 5.56867039 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.002990966 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.781673523 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.200636581 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.788869989 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.999828071 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.798959001 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.226153523 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.784892264 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.972573324 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.783016585 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.02292132 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.782742156 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.190478025 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.870624608 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.011207875 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.792931017 seconds)
    (114/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895260739 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.266678375 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.786617122 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.24980663 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.994323687 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.928254476 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.088395196 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.971698509 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.430017181 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.095988765 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.980278659 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.14923095 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.665041839 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.786835657 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.113169699 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.923969243 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.233427719 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.12834244 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.991696625 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.949348837 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.888906976 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.149617248 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.10851944 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.925204896 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.793775606 seconds)
    (139/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.004611926 seconds)
    (140/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.812783343 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.792752885 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.067228413 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.946884461 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.249782997 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.979149352 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.759340989 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.797508305 seconds)
    (148/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.955204128 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.922983537 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.191190738 seconds)
    (151/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.90090408 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.824716243 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.793929733 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.827377653 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 4.68355643 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.818683948 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.041651514 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.791054399 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.039557482 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.10395503 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.820433112 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.032720183 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.804694848 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.635476181 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.477865176 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023649877 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.802851343 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.166620872 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.563774917 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.569873065 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.817772456 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.121867019 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195144229 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.956871134 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.102829502 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.095077044 seconds)
    (177/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.819435414 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.791969861 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.068226794 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.136868972 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.097461422 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.904382057 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.925850698 seconds)
    (184/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.959909729 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.045712502 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.835419796 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.796894923 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.986688046 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.797860081 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.82473275 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.966252471 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.990717952 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.796613826 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.962844767 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.182390628 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.899819118 seconds)
    (197/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.873725817 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.147024421 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.798858887 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.076561403 seconds)
    (201/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.879654651 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.580981031 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.964926052 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.802832668 seconds)
    (205/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.131761601 seconds)
    (206/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.255223555 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.971866759 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920127303 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.004947156 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.930581697 seconds)
    (211/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.679533028 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.882831986 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.799143598 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.196936613 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.908361592 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.937444304 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.794714366 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.78267983 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.251795686 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.940120309 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.123462852 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.935866203 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.917025321 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.883448276 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.903388761 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.916028159 seconds)
    (227/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.868675935 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.048387644 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.805012682 seconds)
    (230/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.334592174 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.039076193 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.88175332 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.423590472 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.500513853 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.017822812 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79866001 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.801992427 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.797370396 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.589296532 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.928502563 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.543876355 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.830161707 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931287946 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.797982272 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.618864323 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.938644074 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.704867064 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.80199232 seconds)
    (249/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.827963057 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.694662762 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.293766633 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.809251008 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.034538915 seconds)
    (254/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.816617234 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.015945035 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138025312 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.815315779 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.414825287 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.894738519 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.804623785 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.322166418 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.082827276 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.802839136 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.203857877 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.064112922 seconds)
    (266/309) benchmarking ("sort", BigInt, false)...
    done (took 6.801961167 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.750913237 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.907122115 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.743945806 seconds)
    (270/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.841795443 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.140922699 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.959849345 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.849281773 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.905090403 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.95142742 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.801849048 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.886772106 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.787642533 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.277321175 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.94251632 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178464432 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829203615 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.201658727 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145164588 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.867769602 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.19626384 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.864878123 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.321615552 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904736428 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.130612143 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.064740374 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.807673933 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.574923735 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.293758054 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.595606132 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.3588931 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.561314813 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192884984 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.834253938 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.472064786 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.815244745 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.729115111 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.922574497 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.81178219 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.794235323 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.185366662 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013719531 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.132716666 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.941395105 seconds)
  done (took 982.323776356 seconds)
done (took 984.103792485 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.829505677 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822578153 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.805392422 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.828084601 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.919149135 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.852162384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.819857862 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.810293822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.856172425 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.856342344 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.804548751 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.849796716 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.807091465 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.805850005 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.806519882 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822266755 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.12030214 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839395105 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.825410171 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.818875259 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.823870421 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.805450905 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.856562758 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850954632 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.811198436 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.81149335 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.808719178 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.826138015 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.918580684 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.809998792 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.812979028 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.818550855 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.11880639 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.835807561 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.806288012 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.827173882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.819905347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820403692 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.811271879 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.840271529 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.206522065 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.849303419 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.809562563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.809316971 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.808056463 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.81488473 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.80914964 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.816700158 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.822073467 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.822841857 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.197390027 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.865359563 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.810093214 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.809096787 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822177471 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.807895556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.813403755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824132137 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.827190478 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825497055 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.102583043 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.849108578 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.812900277 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.825664973 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.818234803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.232767838 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.848246963 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.81775519 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.205056781 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.858767978 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.234496174 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.859508183 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.811684301 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.824515403 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.84081531 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.119364946 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.839021526 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.809312021 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.81805313 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.808017832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.822273758 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823632957 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.814962693 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.809870104 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825051619 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.855820688 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.821813937 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.809746986 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.822535553 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.829067498 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.818968187 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.822164084 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.813363671 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.808697735 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.822989693 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.814694325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.814042868 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.811355401 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.817409149 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824112754 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.204585005 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866510311 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.808219928 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.809072397 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.810776558 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824830462 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.204857389 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.85201109 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.833706203 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.860818232 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812680062 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.105187129 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844750725 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.826766347 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.822517778 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.815292297 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.809854388 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.108183182 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.235383986 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.868189565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.811874207 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.809512848 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827598983 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.813102319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.808382593 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.123795316 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.845425924 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826470577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.934605829 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.824933458 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.843987838 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.80968247 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.816406007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.861070181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826995802 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.845451923 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814070016 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827405279 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.829832942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.809763683 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8245179 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826110432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.812663912 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.820939366 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.810426351 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.862665903 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825316584 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826299682 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.83442691 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.935031781 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.811467037 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.106928692 seconds)
done (took 284.916910448 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.891259134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.807890741 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.902572735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.80873057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.901260228 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.886382165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.811867018 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.810042798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.808906861 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.295269451 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.811652888 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.815115258 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.806753596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.810680259 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.882314432 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.80980898 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.810810225 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.246637622 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.8112407 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.890438977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.810364024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.809644846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.810221109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.29886433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.80880752 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.810297025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.891492418 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.811304387 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.247928036 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810271856 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.809878887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247704974 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.891105384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.837355558 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.818540448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.816489639 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.902074344 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.822841462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.880278452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.880694706 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.907893229 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.84490467 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.809300272 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.811346192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.813841735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.812537452 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.811221728 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843903857 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.810676515 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.817325063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246612691 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.819975704 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.816181658 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.812016444 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.812950721 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.838687902 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.812421191 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.813037268 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.89193266 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.812204547 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.881090866 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.300350174 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.298875632 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.811616086 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81160477 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81237299 seconds)
  done (took 181.25753705 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879003857 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.889337019 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.878377506 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.817367229 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.862012572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.880344159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81772727 seconds)
  done (took 14.771469242 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.82013553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.81298036 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.861787452 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.862969213 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.81368891 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969470482 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813710173 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.824015519 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817763753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.840120989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.81523652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813778049 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.821367874 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.811961835 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862494791 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.823891595 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929123666 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.815335829 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.814038438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961962839 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818943838 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.821486846 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.839826333 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82462059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.816788731 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.820525978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.385236844 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813380091 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813750136 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.813809887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81459958 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.854065078 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.815665048 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.813913677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.814574842 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.92848604 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.815074877 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81449891 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.814668332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.813351142 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.815264079 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.815148113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.814421027 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.81520422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.816746393 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.838169745 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.815736133 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.815832581 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.815063721 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.817612477 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.840195011 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.815951188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.816031966 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.819883756 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.857771719 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821632864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.816260095 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.81481886 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815726132 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815921422 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.964856006 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.865912262 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.816710855 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.865786633 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816589041 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.817317979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.815574548 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.815352594 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903248694 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814583543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864198481 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.816810199 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.97386018 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.839342149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816507343 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.820052038 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.820801628 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818501902 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814628936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.825113737 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.816638664 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.816946158 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.822666131 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.822398686 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817847047 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.929646219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956655596 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.817240659 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.819120508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.825697885 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.819204853 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.86181639 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.818116503 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.817766878 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8744531 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932628034 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.846652582 seconds)
  done (took 200.45851658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.824536432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.82588412 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.818802297 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.833617246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.820340978 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.818124005 seconds)
  done (took 12.693593813 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.819425126 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.821537281 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.819750505 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.818354786 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.818752548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.818820944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.819490636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819541811 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.82269621 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.819610142 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.819951653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.818669062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.81728543 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.819182099 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.818334705 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.817792319 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.819215497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.818296886 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821443091 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818452026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.070637859 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.81888127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819733977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.821615156 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.822783511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.818251339 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.831458061 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.81897929 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.818665348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.82459415 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.824107625 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819734672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.821627157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.823463487 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.823216675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.82247345 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821637744 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.820380226 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818735197 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.81913583 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819203794 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819262221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.820237551 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819632364 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.821419894 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.827071536 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823860826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831536317 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.820453682 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.819998653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.821370177 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.818775014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.821500186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.819155466 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.823235625 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827082024 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.823334056 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820119843 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820290737 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.823801345 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.824007469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.823850569 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821266266 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.825047903 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.824980487 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820526572 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.823117994 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824092622 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82062506 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.820041199 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.821389001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.820658724 seconds)
  done (took 134.131899359 seconds)
done (took 545.075769182 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.094012948 seconds)
  done (took 8.848381004 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.834892301 seconds)
  done (took 8.650177171 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.350742449 seconds)
  done (took 10.113087933 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.855401314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.84110659 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.838365594 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.830014539 seconds)
  done (took 29.151221937 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.004593484 seconds)
  done (took 8.762923832 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.844438785 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.820108712 seconds)
  done (took 15.489650885 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.954499815 seconds)
  done (took 8.712618816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.212321304 seconds)
  done (took 8.98286523 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843336674 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832992603 seconds)
  done (took 15.454554989 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823555708 seconds)
  done (took 8.579196082 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.040435615 seconds)
  done (took 9.892207075 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849355883 seconds)
  done (took 8.673911769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.835324519 seconds)
  done (took 8.591616083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.906996667 seconds)
  done (took 8.661508827 seconds)
done (took 160.318122811 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.824751033 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.823358443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.818037773 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.819498153 seconds)
  done (took 29.041550827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.85529974 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.854791585 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.8541703 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.866441238 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.858878001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.853986292 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.848007748 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.847097617 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.864260256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.856685251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.856790213 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.856487065 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.855010492 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.848479881 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.857355253 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.85785535 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.864521605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.856387521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.847420063 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857123193 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824203911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.866057179 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.857930628 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.822193834 seconds)
  done (took 46.244305402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.013311535 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.896176202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976569774 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.876061674 seconds)
  done (took 9.518979343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.874667756 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.876097228 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.886583448 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.925159486 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.948261617 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.884461756 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.849638044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.845028369 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.831125381 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.875073701 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.952030914 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.871013511 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.96374783 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.822036796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.006823073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.825150769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824842687 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.87521317 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.926002147 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.939693192 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.823070012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.875397386 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.878443687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.874202447 seconds)
  done (took 47.010875121 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.824027677 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.833212566 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.831282287 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.826372711 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.825057736 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.824800077 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.831392332 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.826475241 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.847417997 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.825921239 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.825474915 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.826775754 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.831586148 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825742583 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.825291853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.838288609 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.840052766 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824631433 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.829490592 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.832438574 seconds)
  done (took 38.354438246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.822673716 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.669544106 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.168066106 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.076699907 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.823959504 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.824945439 seconds)
  done (took 31.144229736 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.837901092 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.831368296 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.82343594 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.883154219 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965958694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.83360811 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.825214656 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.837691683 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875041202 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.889244189 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.846908942 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.855718387 seconds)
  done (took 24.063357911 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.82469822 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.826867601 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.82744741 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.840138066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.835336384 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.835327199 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.834224144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.824364954 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.839740704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.843326424 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.833056597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.836846067 seconds)
  done (took 43.765950759 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903133986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699055082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268240054 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285788058 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349479591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027775855 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.8237751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908995297 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.825480678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09642668 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.131195854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036238719 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067876683 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.593335223 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.833778734 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.301581028 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115743058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032362692 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848916623 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436993459 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930967921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366946971 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.497039238 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933939415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028341918 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.945616483 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.082967947 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.777731197 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874542657 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830212027 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830634995 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827605823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097368942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946505462 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897503945 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831775117 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238740117 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.533075459 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829227802 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.502957755 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.356209899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944739221 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828974087 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826717494 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754033 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365350569 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921316187 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.829985846 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.527058574 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826705485 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832441424 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901884628 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.829226316 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.635421147 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51188381 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095422743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827019435 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829957021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381141214 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81665755 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465060313 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.7654966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.920876609 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496401861 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276014073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.980659288 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.82931904 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8306314 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755794098 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.496828664 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940024584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965489194 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.844249973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467830183 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131283895 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.211055655 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88053203 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091078942 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.645696785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.766193297 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046240078 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.786997586 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756137374 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.659006731 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754514428 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031860437 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858710959 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.408828267 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859026835 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.917432113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836609597 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845371657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832116069 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043435894 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.725319281 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83020653 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.088728696 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083011632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84551027 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915925463 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757976822 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.83139674 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076079525 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.034233697 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.095597623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.307019323 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918707447 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801509248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.850566799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.78596361 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843729151 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.094563989 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891232577 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828411541 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946500894 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.781634901 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067207247 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824904545 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.937318572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.155134932 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071979557 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.157981842 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.072923258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894053758 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836940603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.833689592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512457243 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439231877 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.047774897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.846323746 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39549728 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845371256 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.832841902 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765475542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.455936048 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.167097598 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.917891263 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047293744 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.815166137 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114696817 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757168163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968826096 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.843259707 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.047255026 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.470050623 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.912446551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080145635 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.099209873 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.098509385 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849115332 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848649403 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926047761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851208719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.295914636 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085831536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834640412 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.836905366 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507305238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887905113 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836065435 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.838036499 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360377727 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103840234 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853731265 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839306361 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709108071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845748847 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895712566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837611534 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.837293794 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.351284999 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338168962 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.839663872 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.480674241 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049919182 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839221537 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.495784339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01508483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.847748686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099599001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898664455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.761684752 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.535297731 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.535475961 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835046583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76240168 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836560726 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838124161 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840128299 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.02247484 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105708444 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885247547 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.450003274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.938114194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83944209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.837809549 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836154111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350687845 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835876402 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47839991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848824714 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96448213 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.846467497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.761612507 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837091521 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837949436 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835523067 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.783322419 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883716822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.451281297 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035623006 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084144855 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.24058481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844640228 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.452360504 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.950149101 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868454253 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098327484 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581255742 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.855091865 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918163105 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.841646975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.448279464 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.564805472 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391324129 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144627761 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144906274 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179960754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.361100346 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.057068364 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921783753 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060256726 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355757899 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891864655 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925344608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769831393 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847874057 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.464601655 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184923327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847659006 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051087112 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122107561 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.160045379 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969682725 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040420123 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865269752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.781629819 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.762121243 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.371804756 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851148962 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2570456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037619261 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919329552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098419356 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914875945 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.834325637 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171284342 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872238144 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.53756228 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18929663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413482688 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.164592225 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057111063 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843524319 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275043752 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180020592 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.158021407 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.854932818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76367466 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843311676 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839980585 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849560236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.808421861 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.680169738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.084451896 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843018162 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06401235 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.099023978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090977813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.737208424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.836995459 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837765891 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072063651 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644546735 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891323386 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.288476261 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.307193266 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849071645 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764164677 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766426926 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.537326664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847910698 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.803340586 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039266767 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.937586568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518989685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3650538 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045480241 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081793309 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.850910685 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104349989 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11390298 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.328984784 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858840832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.934911112 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090561242 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.52839647 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.057356692 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069506496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371727328 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060713231 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289060318 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.80888507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.841762614 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048913169 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.057264293 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.173801802 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014360578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.553075966 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.857422824 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2191987 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904574256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.176980732 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029504523 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.928826068 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851073752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922238729 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84769894 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.848875058 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849245286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853663598 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.162451339 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962342284 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.857255794 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921907205 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842368814 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.413227722 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.853034768 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109579396 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193835617 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173121056 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908088083 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846258859 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853930962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772127252 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974505298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284265184 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117444222 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963536478 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.981316241 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8668386 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108011915 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.114834745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17695202 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119045751 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.729442957 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559646533 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97134929 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.063856076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853223954 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.049439626 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052563264 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144794771 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414988712 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.990586957 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043534256 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117037401 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209952584 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848366154 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424500946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.862096753 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256671356 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.882086457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.171219256 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105607829 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851867978 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974333368 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850419026 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.050647043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.29651328 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.506914747 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191049662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700699322 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851742805 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118162512 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169018232 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15081794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923890173 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854466314 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.539134811 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980754445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.712033101 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.076194398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847737079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051704345 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.55923639 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85217744 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114398757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150707576 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.849597204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.74545197 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873461988 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.852624456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062141692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056450526 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089017719 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853207408 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857808254 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.656323708 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11967705 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906537814 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776078836 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.850707963 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89434543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075810078 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867096822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.365042349 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.549621992 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129230173 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.75224285 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866271073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262145401 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22511281 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176885118 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.371683877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052418223 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391621654 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697768214 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226227434 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.851533953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293154436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228590516 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.848743138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366163263 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960119765 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.111444814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164744188 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.852822379 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590402329 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.877650782 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062975288 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204787785 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780839927 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855748929 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.898030951 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850833253 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.833708802 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859333401 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.777088251 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298939503 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.697171915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407155955 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.853002801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860602773 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.166103201 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426220998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960389824 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867123678 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851941605 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.551552927 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.137886108 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0935749 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369222271 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.950809934 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.852767674 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851221959 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77008095 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034158531 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.037122877 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127929973 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.200360256 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.964161539 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853891862 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.058265233 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054157462 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.182182112 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981399347 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993091835 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968848626 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.790580247 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.555638014 seconds)
  done (took 1645.650682569 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.85850383 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.872741429 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.880957563 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.871502991 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899291981 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89314693 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.914075444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899787116 seconds)
  done (took 56.876309764 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.848021444 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.007964314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.851097354 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.849263968 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.851728388 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.847844314 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.019616683 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.867042869 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.850318753 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.852484547 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.849866276 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.847863312 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.13326869 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870210613 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.850898828 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.848892198 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874447181 seconds)
  done (took 73.927964045 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.850270074 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.111417632 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.882456901 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.851538719 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.816794051 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.863447783 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.896666499 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.868176632 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.853335958 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.096970367 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.145902179 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.855267166 seconds)
  done (took 89.873782351 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.859102101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.850351169 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.850104117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.849146572 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.850773346 seconds)
  done (took 11.05084018 seconds)
done (took 2148.302898947 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.075272788 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.056486421 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103003525 seconds)
  done (took 5.941377849 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.993175202 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.04396793 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.156404336 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.179611795 seconds)
  done (took 10.162459246 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.157919431 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.229390512 seconds)
  done (took 6.173080678 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.168927718 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.870681241 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.240271896 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.856164447 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862267111 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.85895166 seconds)
  done (took 22.368936947 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.854204863 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.856013251 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.854380517 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.855054492 seconds)
  done (took 9.208807784 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856525915 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.559437669 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861896319 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.873060706 seconds)
  done (took 20.939449832 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.038331303 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.971031723 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.998448347 seconds)
  done (took 7.794962721 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.999606235 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.063653167 seconds)
  done (took 6.852011513 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.016530933 seconds)
  done (took 3.805779053 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.885208744 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.126544306 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.352359402 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.908005098 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495974893 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.116033238 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.194734909 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.079823379 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293661591 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.326579364 seconds)
  done (took 25.567830364 seconds)
done (took 133.950649466 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.433430866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885960637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.057745454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.229216376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.095430036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.050340472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.067923234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.209833638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.894485755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.8847174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.222522943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.084852369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.007563838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857675758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.008466813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856101673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.062155037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.227456535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.966182132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.132495169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.063216298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.842154606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.038075265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.853666704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.06640904 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98168732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.383787731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85052819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.009410707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.391163402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982119318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.25237809 seconds)
  done (took 167.736129691 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827575545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828491113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.826157371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.823320353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.402309185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.820435733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.823599518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.822662525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.26110845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.255291339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.821480268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.387759784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.820885436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819768924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.820549866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820705565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.442629812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.819458429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.821541198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.82016855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820559811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.229761502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.821631693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.228162605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.430529475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.82095082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.820487304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819648727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.824405014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.818801729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.822176739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.821471071 seconds)
  done (took 208.122474692 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.821626016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822504995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.821423479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.839210956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.820572802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.823176878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.820675296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.833638847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.587381742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.575233831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.841389527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.819698732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.825174545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.822450067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.823086626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.824122711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.82233222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.823351922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.823574792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.824966441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.826174091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.48779579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.823079146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427989628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.824013804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.821791383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.822741357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822658024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.820969057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.824097359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.823347568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.822799408 seconds)
  done (took 218.917806747 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.06653876 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.822880119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.825016772 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.811768324 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.827883212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.825534391 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.797916225 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.075877884 seconds)
  done (took 18.810066739 seconds)
done (took 615.3810244 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.225517814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.056937842 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.999120002 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.854222522 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.08230896 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.893280496 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.843735997 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.911851037 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652408491 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.919395958 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.508642967 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.867136057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.602916898 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.872052341 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.966404049 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.905518874 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.437680062 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.541975391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.018737854 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.915001307 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.025484553 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.741810491 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.927401196 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.686395361 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.631506759 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.788159577 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.88184992 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.441985023 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.855588312 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.00095163 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.522122597 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.092194644 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.860749895 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.843158712 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.896068717 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.87648515 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.057745097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.856845294 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.967980152 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.545317648 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.902412335 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.565175723 seconds)
  done (took 100.799814748 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.837622592 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.83441904 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.829976279 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.834045772 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.841460869 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.831299908 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.832864824 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.832141858 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.828743306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.83150789 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.831565157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.839336885 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.832373168 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.840103734 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.832247676 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.831532165 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.833554861 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.842907343 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.832039845 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.832681308 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.830193926 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.832271765 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.827346487 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.835037391 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.831054667 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.829280385 seconds)
  done (took 49.441643774 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.829324082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.980870416 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.075822121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.849683906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.826955393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.831725275 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.846495842 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.836979111 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.830391289 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.830004917 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.93236066 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.839860428 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.850432604 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.072028968 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.846731773 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.827587597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.829410089 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.832029213 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.986842102 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.84813558 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.849238229 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.839292449 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.849439873 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.84828149 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.833421652 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.827646381 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.831766322 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.303623299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.843323137 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.932112378 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.895707364 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.857363958 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.249664869 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.08347541 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.885883413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.842788589 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.83288548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937960608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.836929606 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.830333854 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.850252275 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.835980384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.073908869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.361225489 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.844721366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.831198629 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.315745784 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.947698369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.869651385 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.844728964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.075298592 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.850152166 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.832757185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.834744317 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.866584815 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.843004663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.830967759 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.197155892 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.842799843 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.848161926 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.835471427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.832303648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993894454 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.840807313 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.985089327 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.840794774 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.836101981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.830519477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.076974643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84801031 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.371870557 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.847497538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.831747298 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.937527119 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.986736486 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.338433085 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.844854794 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995529099 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.260519091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.857178358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.838794751 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.292465863 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.86035185 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.839333431 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.835707602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.835841989 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.832185987 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.875416547 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.849581065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.286997564 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.371376989 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.214772996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.860822551 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.846498181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.833306837 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.194509944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.840105059 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.836460559 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.069947439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.380918698 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.847660055 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.838758588 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.351475835 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.848033882 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.850886778 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.838779256 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.082102035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.849568041 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.875537643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.833601897 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845043835 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.832709089 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851264004 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.839462102 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.832596017 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.347210112 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.956915045 seconds)
  done (took 228.08243743 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.836942831 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.838293272 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.83151137 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.83737149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.831841059 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.833505054 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.831898866 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.832474999 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.833271865 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.832153756 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.833696576 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.83564335 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.832853427 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.838625349 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.838040965 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.838039782 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.443240426 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.836327626 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.837919943 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.832544232 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.481569082 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.836486164 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.835576142 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.833862255 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.832899325 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.833655104 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.838279393 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.834861074 seconds)
  done (took 166.400578205 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.836949177 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.94834335 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.855528414 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867219537 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.842076216 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.835835213 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.930289212 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.852873493 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.840377027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.836072669 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.836456671 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897542426 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.850178742 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932260951 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.864943397 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.942034106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940483398 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.841245443 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.840292607 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.839260559 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.866328828 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.846160696 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897347478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.965778023 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.853275518 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952128725 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.857274027 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.836341994 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.839544951 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.952048541 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.853067926 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.899942286 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.866941206 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.853921181 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.953449238 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953085565 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.943579694 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.940073607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.842051512 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.839391404 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.842847802 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.842886457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950604465 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.856076406 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.839522981 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.954560096 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.856777611 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.841137969 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.836236366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.841961007 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.853435004 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.860397739 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.902950786 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.967660768 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.87228945 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.862074315 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.93760286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.959345661 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.837357305 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.93843833 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.845794522 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.949638029 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.856640285 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.8439298 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.838873848 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.840883771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.86824943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946628005 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941912929 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.846538728 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.933338588 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.872720581 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.849024305 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.841015552 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.837818787 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.955066246 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953152249 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.874534013 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.877827824 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.867703298 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.852818901 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.836185234 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.842583638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.85593935 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.842666336 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.951899674 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954236578 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.845672473 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.840505458 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.842369398 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.84092712 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.86561773 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.963702984 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.872484023 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.948945001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.904816712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.911611586 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.853986104 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.854452054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.842608747 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.903196395 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.852210769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.853299348 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.130840063 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899281416 seconds)
  done (took 199.471771524 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.210887811 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.889602331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.901232286 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.155469263 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.192683933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.798884061 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.885645178 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.890731379 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.909263803 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.067266206 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.960077865 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.904337301 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.875642356 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.860753574 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.885138492 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.910525678 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.892353301 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.222944509 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.10520651 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.040549593 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.873903862 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.187659788 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.196874082 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.480686713 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.93572596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.291008892 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.445170673 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.019378223 seconds)
  done (took 60.767240356 seconds)
done (took 806.718222283 seconds)
SAVING RESULT...
DONE!
