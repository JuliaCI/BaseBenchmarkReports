cset: moving following pidspec: 3827
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337527739 seconds)
loading group "string"... done (took 0.593624059 seconds)
loading group "linalg"... done (took 7.784079392 seconds)
loading group "parallel"... done (took 0.172044507 seconds)
loading group "find"... done (took 1.227906398 seconds)
loading group "tuple"... done (took 1.915678611 seconds)
loading group "dates"... done (took 1.302064816 seconds)
loading group "micro"... done (took 0.200947839 seconds)
loading group "io"... done (took 1.00576954 seconds)
loading group "scalar"... done (took 40.849447246 seconds)
loading group "sparse"... done (took 12.958084034 seconds)
loading group "broadcast"... done (took 1.021180428 seconds)
loading group "union"... done (took 14.774232206 seconds)
loading group "simd"... done (took 5.185591741 seconds)
loading group "random"... done (took 10.017470105 seconds)
loading group "problem"... done (took 1.684506255 seconds)
loading group "array"... done (took 23.323463586 seconds)
loading group "misc"... done (took 1.790395102 seconds)
loading group "sort"... done (took 3.641497729 seconds)
loading group "collection"... done (took 20.036604797 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545171847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129021559 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140364028 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123701733 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154385687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.464753242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124568213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084834867 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.907141499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151671161 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116294102 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422610613 seconds)
done (took 67.789427066 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17423534 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088065751 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082886704 seconds)
  done (took 1.262100261 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067848401 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128178849 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069413215 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069247997 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068977414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068707914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068762632 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068269913 seconds)
  done (took 1.633057705 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073466824 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071575937 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068740035 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070661399 seconds)
  done (took 1.375720127 seconds)
done (took 5.623892866 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809307019 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213442983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188962958 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418638183 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140312369 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18384894 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653513383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325083298 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204886361 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099114402 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116674733 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.369921216 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127568086 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647387872 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081046051 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100309556 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142836105 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43594347 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072002229 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086270159 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093069856 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131051103 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089154138 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076913908 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154243502 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070696618 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143872886 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086391565 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068950968 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22618573 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177558666 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66587444 seconds)
  done (took 10.528200909 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104035617 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102953024 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070942931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12843073 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101888825 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073183412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077907352 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070342445 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095801914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132980012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094871486 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111903577 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068984529 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072402174 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085733278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200576097 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080203562 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082204972 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070993253 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085612416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111335848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081328146 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083142134 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082710495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131859815 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173217312 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099489676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098291 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070039219 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085542332 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117275125 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130917866 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069315777 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06891892 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129080115 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097421733 seconds)
  done (took 4.671760687 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.917533473 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15479935 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093908079 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133614478 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067208179 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092939086 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11544674 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068207178 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085969713 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243330694 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.394166843 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.631361095 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12679583 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120398142 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10739805 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073685849 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072487036 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070079142 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.653522171 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102333276 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109034517 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093528471 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072816216 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071946889 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072058809 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07448291 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065887301 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074166966 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09153106 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095354688 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333620011 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.136038469 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070822641 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.422186288 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.173071777 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070802255 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108809924 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163907507 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094954422 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066301353 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145402801 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069824148 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066197138 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155200403 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068954555 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072334634 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067316583 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.068379455 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110372716 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121308075 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066515938 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06734622 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.089686083 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069655087 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082263801 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.363383441 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152621307 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069868708 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302010387 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095704399 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074886793 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067365802 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193339672 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095031915 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.091393853 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069662263 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070643461 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071186564 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070759046 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368556123 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069451098 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.89258823 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072424348 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079507768 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073003729 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072042764 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082081778 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082841543 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094772233 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069732198 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077852838 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069690986 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069037343 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073566349 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096430605 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070225417 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399741056 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070431416 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075338676 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067394097 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095484727 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101440369 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07093166 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068428549 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105703581 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071415538 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072735242 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070498536 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122668732 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073102821 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115552614 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070018957 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.078511289 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097568938 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069812536 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104614477 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080248853 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072726079 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.462041689 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066496052 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07408847 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067620924 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069310333 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.164399264 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080629067 seconds)
  done (took 20.83384618 seconds)
done (took 38.041958126 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248495525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085951091 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085783828 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086262301 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088593268 seconds)
  done (took 1.769673275 seconds)
done (took 2.924312766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129364425 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102099666 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066387221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100528774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066495456 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104299969 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103613164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086073112 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102977226 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066820843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100129388 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066848218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066622248 seconds)
  done (took 2.336802521 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082684522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084875449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071300279 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084034882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064513387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084376904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082986512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090565379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082990057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074499659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064887354 seconds)
  done (took 2.018165996 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085568991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085587189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070722755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083810467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064403409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083531213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083209696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087198193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08413585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075240072 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067620336 seconds)
  done (took 2.017610167 seconds)
done (took 7.518316718 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076970494 seconds)
  done (took 1.212758866 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541925149 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.591387621 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080142954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104138123 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199178617 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11152292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240031758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086156446 seconds)
  done (took 8.270129094 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098082382 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084796724 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072416631 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072143202 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071857881 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071065808 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070746193 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071837675 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071414563 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072410143 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072441504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07149332 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071346763 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071570563 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071256471 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072549639 seconds)
  done (took 2.411832497 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100322412 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098136562 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076066884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077443054 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074718881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074302535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077247449 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076527013 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073259914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074855021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078079866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075811177 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075627713 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066311205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077131578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078761081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073510022 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076385332 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077882252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078337208 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077287945 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066280001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075248525 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077109551 seconds)
  done (took 3.10920638 seconds)
done (took 16.15027737 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116211138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080708712 seconds)
  done (took 1.337942199 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080537187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081906077 seconds)
  done (took 1.315458286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078458256 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064496433 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08668517 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076509789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065686452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065278589 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085236624 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06582854 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065309216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065905956 seconds)
  done (took 1.873704942 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065670575 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075460459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071376143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081432026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072673172 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066733221 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072007592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067565116 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076577827 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065574162 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070617175 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08578669 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070247195 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087357583 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071252581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070132154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07199854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068896518 seconds)
  done (took 2.467526468 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063522992 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065344807 seconds)
  done (took 1.289804794 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067174044 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065207872 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068085057 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068147602 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065528015 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064680784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065414831 seconds)
  done (took 1.618702113 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412210296 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124807405 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337752669 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072778827 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082552357 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26429549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066118668 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071624261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071596138 seconds)
  done (took 2.702807242 seconds)
done (took 13.764949226 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080948071 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088393154 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101117813 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418290144 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09547724 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069826664 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116014749 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184147434 seconds)
done (took 2.323948224 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210204181 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.084904385 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.495910949 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21427238 seconds)
  done (took 2.958089239 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348501466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083563454 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079417604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069043068 seconds)
  done (took 1.755868245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067029383 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072037824 seconds)
  done (took 1.30831694 seconds)
done (took 7.402585059 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065437964 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066307644 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066950658 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066930337 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066914381 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066733728 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091999784 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072172341 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066466125 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066145971 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0662785 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066557738 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066326436 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06637783 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066700429 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066694579 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0665036 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066965702 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066774338 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06719197 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06651612 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066593668 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066498821 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066239828 seconds)
  done (took 2.833512202 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081745516 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069850928 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070709314 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070635465 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071681494 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070453482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.186017276 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069849809 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070871438 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069114268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07101523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071743304 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068281556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071139256 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068980302 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071606735 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070610768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069180724 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068520558 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07128891 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070400928 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069372927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071319279 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070475552 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071199167 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071149204 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068623855 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069052812 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07064434 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07131187 seconds)
  done (took 3.414801718 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065585451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06288954 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063467831 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072052598 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062793947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064068796 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062513145 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063172695 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063511147 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062641148 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064042669 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063267385 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062763353 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063264907 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063282758 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06721709 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080528121 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063506696 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062937689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063173831 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06698732 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06281989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06276179 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06245746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06539603 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062397692 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063212419 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06267399 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064132787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063207946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067228482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067466806 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062735775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071302027 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067111949 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062504441 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066465932 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062320125 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063372008 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062475808 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062557815 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062682001 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063108523 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071695325 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06290567 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063804674 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062826722 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064219957 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063218661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064743284 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062639633 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062267928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064699872 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064100667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068312841 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062362641 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06351711 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06259877 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063420131 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062617564 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062549722 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06301213 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065812191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063199613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080201673 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071878241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0628684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064431162 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063722408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065982809 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064562132 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079144453 seconds)
  done (took 5.851198227 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08595185 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090150828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068489093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06788373 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063496999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063276875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072172439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063381668 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068244018 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082991019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064045372 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068048189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068227276 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067871529 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063889686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068592555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07233428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0639804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063397553 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067974626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064140619 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071899102 seconds)
  done (took 2.722458264 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146593839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069431009 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109077382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07473508 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072346046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074723884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069729678 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069719351 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069547545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070036529 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070152249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069642667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072567103 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07000644 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070164988 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070211594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069622155 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070325645 seconds)
  done (took 2.571020417 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078946141 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069046094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088813082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069016132 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069255907 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068794305 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073297951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074121935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068569923 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069713521 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074089486 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068689041 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069436797 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068928848 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068657634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069189871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068692759 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069272359 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073741972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07344243 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073287229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074182969 seconds)
  done (took 2.764579378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078522511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067704285 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084117451 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070310134 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063759411 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063539977 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069763889 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068760709 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.078901473 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068800164 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068263423 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063531698 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070875194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068579977 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070760528 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068345587 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068136449 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068571679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067829355 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063613922 seconds)
  done (took 2.579377846 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084519001 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067126817 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067449221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073140126 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066507467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066608642 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073329351 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066693102 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066524235 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087534367 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067303557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067493437 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073312576 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071542534 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066751528 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073421983 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075936466 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073628412 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067038418 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066833917 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08764798 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0673686 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073458988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066635675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067016735 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066748398 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067044014 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071005932 seconds)
  done (took 3.177804612 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065970003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066705027 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067095204 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067048123 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06719277 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06646115 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067632534 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066710233 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06620437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066357861 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066738714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066626299 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066747067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066687564 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066482576 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066667352 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066517045 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06683303 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066703196 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066590666 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066417529 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066780803 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065854934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066611816 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066410114 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066063316 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067126732 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066485319 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065804389 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066481178 seconds)
  done (took 3.190349089 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075545456 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075703904 seconds)
  done (took 1.344177913 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064072262 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080797931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062896209 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074199459 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072464617 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066908613 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073256556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072666515 seconds)
  done (took 1.756470871 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086339492 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077321212 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066378732 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077881975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077216824 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086365252 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12923623 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065984289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075977887 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066311651 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084549904 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067670294 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076699245 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070786318 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076552951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079523665 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063332287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070802098 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066793179 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063988656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066037181 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079188297 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075427958 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064241273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071210002 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093320438 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082451063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065067271 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072491967 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078074586 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076057986 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062617694 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065177093 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065716593 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063739642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076425733 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084631451 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072411084 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078234779 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066105104 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074069865 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062929357 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074101104 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076281436 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081111186 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065283922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065381653 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06291695 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066120496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071488189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063099321 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070029277 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062936545 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077728305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073169349 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080600333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064047417 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071191246 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071864055 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072407037 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076814978 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07136677 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07473007 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06514124 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080958813 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07491164 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07758988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06299693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062191521 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064154658 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079317049 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094947081 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075323706 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066019802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066484919 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063400335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073168556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066269259 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075147796 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078236871 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065496446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070106509 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077654819 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070175604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07176828 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072319387 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063622967 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068478532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066207112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085704228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064036174 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063330443 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065954023 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080740193 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074977018 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064658543 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066165159 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077060298 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062502115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065018396 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065599684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070474877 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078756523 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068993888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06962061 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078771811 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07448892 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070531417 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071932586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062342156 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066396858 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067629199 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076927921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062844771 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072204501 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069692125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065689534 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077568525 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063181415 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064517307 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076965808 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076045349 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063350968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061766638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071389839 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064610923 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066745058 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07761096 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063276362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06252242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063150023 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072238566 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064106785 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072011669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068334552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07207534 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062772662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.192576032 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071618702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079632274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07025733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072879685 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076456362 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072905787 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065241654 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078286067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07283625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067442557 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076255363 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069647812 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063593065 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067665497 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073107696 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064316763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072746068 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068668203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072419826 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066326938 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064710431 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071810713 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065885097 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067828741 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070754214 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064971781 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080651768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071788241 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063185287 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062971319 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073051798 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067357184 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065290759 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068069157 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072639053 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065648159 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063760256 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065484735 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072183516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074002184 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06881264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066311454 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07536351 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083579413 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064958206 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072577041 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065070703 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06655796 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066145893 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080367732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075962304 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069853221 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072271525 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06323049 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075181375 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077625619 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067939468 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063700093 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067956516 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069322843 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077146348 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069525569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065880196 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063670615 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071397755 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067962191 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071990727 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064973039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067838464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071297428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063708654 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072024002 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066281088 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080196973 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072912881 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063449105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067781335 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06393063 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077267535 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063571833 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066785759 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067854841 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065816603 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064616687 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072022061 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062557209 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0778419 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078195769 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071170861 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067926925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065093259 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078266384 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071023335 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074343716 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072426328 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075447626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080915494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067949315 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072570285 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080875999 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065551708 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062516329 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075199104 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066834874 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064084565 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064420442 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063910114 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072230219 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072323578 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076078633 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062282008 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07175992 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06377761 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067579278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063357971 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073992261 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072418132 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069500447 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078198376 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065869168 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065684236 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072820854 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064605944 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064878894 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065767665 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07186474 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064778126 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070890338 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066767883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070676752 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066445839 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062320613 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070908449 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064084922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069631245 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073070145 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064011804 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070425074 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071043203 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064440394 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070462154 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.200212128 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069271212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073946587 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072354139 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071568626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07267944 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063723876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077624419 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065266726 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078910894 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070357526 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062844071 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07134472 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072285344 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070533218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065803819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066218985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071181983 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065729545 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072508147 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07810144 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067413828 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081731461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077188661 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071517363 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072739033 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071335492 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071930215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06758868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069923382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066331982 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070885767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06544735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074478598 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072955697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070926427 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072548179 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066540597 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071595859 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066552563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063405261 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068271594 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068345264 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064942221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0789764 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066239799 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06857956 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064564539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066283789 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06557669 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063365907 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073045095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073497592 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06631819 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077103177 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068614295 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072228078 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081851279 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063232162 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064387559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063936863 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066950838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078101817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066169148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079880855 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070696198 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068346596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063009565 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066052689 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064229634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063431293 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063785169 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074197217 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068300849 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064844735 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065649501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072637122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066606279 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078901321 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065186804 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06994271 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065939778 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063330777 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068090438 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068094412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072894726 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066848111 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06710663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063673165 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065511072 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070291559 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071789882 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065305767 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071073533 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077932444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065389444 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072467702 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067473684 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063574418 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072286774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065138262 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065525372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067921677 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073161999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073041583 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06590786 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079898761 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06499896 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073978619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065373302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063541368 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065335701 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064877213 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065600679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067505524 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066093521 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078743556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063052281 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071251092 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070738885 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068442773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075359941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06576094 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071294165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07058411 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067245302 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071433791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079045607 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068862787 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07358192 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065276143 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070452082 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074158003 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066921346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076108872 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069917951 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064725882 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070292772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065431172 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064414035 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064756177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063707962 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07438535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06486844 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.201474383 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069352198 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064259912 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071410318 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068558851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079399298 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072803787 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073017599 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063667455 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064016498 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066647215 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067877158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071613785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072347857 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075886702 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073317652 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069557187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064854492 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080067844 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07593781 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073441319 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067052279 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073989779 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066788662 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07295755 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070207482 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070600837 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066618078 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073867774 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071563397 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068361805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075877772 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073827929 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066588555 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07116774 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071909276 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070958292 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064359394 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067380531 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072245865 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074562645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072306815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065843696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081357165 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066288806 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070592899 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068154788 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064981391 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074186747 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063534293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07207786 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066849482 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066593446 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064073478 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068826015 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067367122 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072675589 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068469517 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064151568 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08250434 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080675076 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072124871 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065285796 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064868865 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063793398 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063685301 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068253446 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066993888 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071962901 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081632112 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068497187 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068279125 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06377555 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065732541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073018764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073356168 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063393126 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064018115 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068072759 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072153164 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077389372 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065027789 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065464953 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073255803 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072254205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063811197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068961787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06272328 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073799284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082866841 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065891253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071892722 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075676763 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078747753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066068914 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063878115 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065650708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07187836 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070897035 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06640193 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066592284 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085463982 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073180785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067706935 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064384097 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07276588 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068046673 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079649894 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066394063 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06613232 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074530815 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074660249 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072976665 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076017107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077021275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071561946 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071784716 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0647593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070437946 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064332145 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067483683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066445119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065780349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06941118 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072276215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067886323 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081264248 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079678091 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067413726 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062345523 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067760245 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067962439 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063274616 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065881196 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063747776 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063132281 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065151684 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064429032 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071166961 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073906214 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06939103 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065028219 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064977996 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062074988 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074376017 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.206041373 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07310842 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064534656 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066389035 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067172675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075280399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068861905 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067632457 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072365867 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071723236 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072306078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063478791 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077666689 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065314465 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072137181 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068262083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065730166 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066505118 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073483113 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070637848 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068169163 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072942738 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072887041 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067590179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063958816 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063744693 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075176437 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063866938 seconds)
  done (took 43.48488333 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101587931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064934806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063947912 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064062078 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074111062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064963984 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064246251 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065200373 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065133612 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067139715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064164957 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064259784 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072168508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080006968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074898441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069161667 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064329144 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065764133 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064339807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065513706 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071833271 seconds)
  done (took 2.721702232 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071194493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080286432 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077555916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082033303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07416982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069606119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077263413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069058607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077495336 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075003407 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077600496 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069618834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074978519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075337594 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075044574 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069792024 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07762629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074368988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069710938 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078217226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069962077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077405883 seconds)
  done (took 2.903432942 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064797679 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065494906 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072039483 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063453327 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064867709 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063501329 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068268694 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063475453 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067695982 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067501558 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067440854 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067742906 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071803422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063512765 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068762169 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063420161 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111887587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067905064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065242455 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066335964 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063483234 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072332584 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063271796 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064059726 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067122711 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068000495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065670797 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063577792 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065646007 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066883103 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065230626 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063245197 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072004558 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07124667 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067341943 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06748779 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065198324 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065137259 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064263147 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063639374 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071796151 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064518933 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068517298 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072324008 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064035182 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063434761 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072289074 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064961751 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06386832 seconds)
  done (took 4.568866426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075134771 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113444335 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07018826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093606746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078793951 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074919902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073195153 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099031647 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070899407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.07133569 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084028339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082727569 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070681704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071897857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074828973 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070493626 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070917992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069439934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073497452 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070045384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073620132 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075115956 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081930924 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082093414 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071397624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068998417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070219988 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071863258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082417687 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072686623 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070110868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070599736 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080764933 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072101864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066970492 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067241201 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079859796 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068062024 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067134677 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065572695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067310311 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069247744 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072204063 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080896587 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067577683 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072871346 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067506642 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065016071 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079582544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067524293 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072043032 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080497804 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068429868 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068395608 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069572532 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079284967 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068059852 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066410298 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068168859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079327919 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065833573 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068552715 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.097766263 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066470358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070955462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079794594 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072641325 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068500644 seconds)
  done (took 6.441453577 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07257231 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094400302 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08175736 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081731908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075197143 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075398941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075621811 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075530766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075710579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079532754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075604658 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117044432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071050784 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077128178 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075492047 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07552829 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075765694 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075839498 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07526654 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075266357 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075221571 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081220537 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075264456 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081422551 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078904843 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070925216 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075092151 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075084668 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081503142 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074984553 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078551755 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074791769 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07574259 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081702596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078485901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074937999 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064693575 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075275372 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075278449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075210018 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070643217 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081424361 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074625853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071039922 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075098419 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074689584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082084659 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078457204 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077240853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079208812 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07523902 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08163688 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075582737 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075743503 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081820475 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084734215 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081946649 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082360219 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075841355 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082054658 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081884996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084775558 seconds)
  done (took 6.139818643 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078131034 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071861363 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084061113 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064049998 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064017687 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074623144 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063731346 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063826831 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072545426 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075864191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07480135 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073971953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076649366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07422368 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074069442 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076988916 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074072629 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074454628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072597915 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074288956 seconds)
  done (took 2.763855344 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076463551 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083074822 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069996495 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074148908 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069141642 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073956524 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06906772 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069629178 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070663929 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069483076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075717196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075784595 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070459483 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074322688 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07545137 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073855122 seconds)
  done (took 2.461283153 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084082908 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072806522 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079244918 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065565327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068813773 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064921184 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065248044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063651385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06402747 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078105108 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065210447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07725295 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065005045 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064037871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064570624 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070830874 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064183952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064850615 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065242258 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078657877 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072570968 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066152412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069020999 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065616335 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070687165 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072655521 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066605404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069460231 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064940093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065418359 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070771994 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071966051 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064696551 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065449727 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06395759 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064936558 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065187247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065164123 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070929086 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065098595 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063186443 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070075461 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065123473 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066114056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064773137 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06549966 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06440012 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071485799 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083997817 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070951774 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064919662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067550213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0661359 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072662227 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067736896 seconds)
  done (took 5.053303479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079133009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069715792 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06378184 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063194309 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06918367 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069996969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069311028 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069676204 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070027998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063807666 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070101575 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068947925 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070374188 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069683554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070285278 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06925586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063767582 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069948746 seconds)
  done (took 2.545488716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072631462 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068503019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073217989 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068545011 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068340678 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068405311 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064018291 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063846379 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063741968 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068711664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068298374 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068333026 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063903817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068345804 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06862308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068215409 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068088329 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063857095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068606366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063945924 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068107312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063706222 seconds)
  done (took 2.778351891 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09665974 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085126789 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144432081 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081451892 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089901048 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073816546 seconds)
  done (took 1.869969549 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092705924 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10045314 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068958161 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068997941 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075002659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071872238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072119452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072279021 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077008664 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077318526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07230798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077436876 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076793427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079124045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074891162 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075351652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075095771 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072529309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069529014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081830221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072406555 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076932474 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072725557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072302555 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072587014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079095998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077343366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07788185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072301193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077377947 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074744966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072307243 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077532941 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077489305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069434757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077498009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072731985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082712769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074959834 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079189972 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069208894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075001086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077501116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076614612 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077429486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072747327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076799876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072667178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072762239 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083994469 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074983202 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078398915 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074785547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077357841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076791965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083556593 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077765857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0788219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074701196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077389203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078752127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074869121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079191602 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077002206 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07462622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078868934 seconds)
  done (took 6.334789467 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103843755 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069303179 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072423892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077512851 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079195681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073098176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072557047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07272589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072827743 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06957924 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108356556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0732115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079183571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079301693 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07366496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072916203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072932963 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079379632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069881412 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083985704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072845254 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079025204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079521314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07939839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077819117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074871154 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072535309 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072384376 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072371643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072223697 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076365691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072499198 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078893283 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069565974 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078733322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07280862 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072108023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076543378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072823903 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074714401 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079115577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082572148 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072928682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072490414 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077662788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072402384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072562737 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069696377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072672639 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069367444 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077748373 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07725784 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077674823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079096391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072441484 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072450355 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07245269 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072331846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072339485 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074736832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078754378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072206343 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083499493 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072620293 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072691839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07881297 seconds)
  done (took 6.325681188 seconds)
done (took 129.772223307 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210135641 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185634361 seconds)
  done (took 1.683209234 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073792583 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107849185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084954643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13612062 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071352453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105557218 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10410103 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083614605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07393984 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073330552 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073323427 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075421566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139535285 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071772597 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072706987 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076310747 seconds)
  done (took 2.728270941 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104175708 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172758045 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111209367 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070929002 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10717511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079324759 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071189495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085057173 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077856725 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073033658 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080085919 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077757535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072675759 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080194672 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078372065 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079350923 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072906973 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079754895 seconds)
  done (took 2.882928454 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103405689 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098042808 seconds)
  done (took 1.512426045 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.335937883 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.203827598 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201346325 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.969237669 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.368011344 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.430954566 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143167679 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138335168 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113677214 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135153242 seconds)
  done (took 4.345611179 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104690937 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19614903 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300718348 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124790469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07877737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115276298 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126293696 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085441573 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082555194 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082260481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082054009 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081052526 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103800622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07918372 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078138727 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081016591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106662893 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076899162 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078136281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07856394 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106816899 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072327146 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079300854 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076954481 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080443458 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08048818 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072904114 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071598734 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078628793 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077643189 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08193092 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112150384 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080066128 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107003822 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076142065 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108747664 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081189892 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076647583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078107145 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077240983 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080124016 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079797529 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080632346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080672447 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072837709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080524461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072604835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071460401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082476378 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073094645 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082904074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082190657 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107136252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073369278 seconds)
  done (took 6.30787615 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108457404 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107285728 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072669986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116228263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107140888 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072757011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108627364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101971339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111317685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073599468 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071454294 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072991654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082201685 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085276389 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116267021 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108500854 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072926069 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072313669 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111084118 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110753926 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071899673 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104672069 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100891114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1110652 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071521921 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073031107 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071922308 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073053783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078578911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08062466 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071970215 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081986624 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090327783 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077402819 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069034742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070917836 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07103576 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080800605 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081475407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081389072 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079520042 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070384035 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071135765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072493638 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071633856 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070251215 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080307498 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080978038 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079783088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07115382 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072281329 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070851575 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07149197 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080234847 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078974716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081973522 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081440562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071394626 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071010049 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073937997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08217374 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081162311 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081213732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072138396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081078654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071736756 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085710129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08475801 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071354595 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072290561 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070824123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070778021 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072038765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078588264 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078778602 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072608576 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070982936 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070850068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080999396 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079334169 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071165828 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078543286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06983011 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070497157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07213303 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072257221 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078103376 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080257996 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07256908 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071016462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070683041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070540133 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069795772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07889664 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08062774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08008265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079591415 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071720612 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079704263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07903168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072134802 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079856051 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07089518 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072095398 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071879884 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07916895 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078488715 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080499967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071352842 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070885957 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078768348 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080897733 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070889612 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077691803 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080244937 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078817964 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070335479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081312266 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070993773 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079808065 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068055251 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216315485 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073380849 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081842564 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072719014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071214823 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072242115 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081062428 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073316935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071607918 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07197176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071296913 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080250453 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083980705 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074017333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080400243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079681075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072656486 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079832115 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071737415 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081236306 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0723132 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072347056 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0703856 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08293408 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072019953 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070817873 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070976804 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081844152 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071690512 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081479622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079632425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070831218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086136588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081761147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079615471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081780047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072880972 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071192101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071304641 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071311869 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078784984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080846061 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072980752 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071198284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079048917 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082366943 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070822399 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080101007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080205874 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079911512 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071961667 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071946585 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08247907 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083052966 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080261864 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079829406 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080666828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072221595 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079438696 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080122121 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071660084 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087466742 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07228456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08441368 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080355225 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078765468 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080836061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082233123 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082139976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082540306 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08498502 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071251345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071147279 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080202359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071241821 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071430793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079694622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072966327 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073357687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084667821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069844236 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081179694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070548971 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081127268 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070907345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072354174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085174143 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071722466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07268662 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079899593 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071181304 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081935136 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083124167 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079141539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071310905 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072633209 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081289444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081075345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071350039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0711143 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072459161 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079903538 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07899429 seconds)
  done (took 18.998943801 seconds)
done (took 39.784823361 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214671007 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157277714 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191776149 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118536984 seconds)
  done (took 2.096556183 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107798871 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101602448 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090783717 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067754398 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096875811 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067957669 seconds)
  done (took 1.881699714 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335173682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216473447 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195777978 seconds)
  done (took 2.090453864 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246456623 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210119586 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476008978 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28849459 seconds)
  done (took 2.661846674 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147436719 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085461302 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067026473 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080615288 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127505291 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178259751 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095777397 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130042141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074113809 seconds)
  done (took 2.385618041 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150745301 seconds)
done (took 12.635562964 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.24585275 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108490823 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100211527 seconds)
    (4/309) benchmarking ("sort", Float32, false)...
    done (took 0.135866373 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163816768 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071142849 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098906791 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107517562 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078249169 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109858431 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075937959 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068611734 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078498962 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077409242 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.204896779 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197371896 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.182810542 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098209354 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078028064 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119906247 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.185093254 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077791271 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.237795677 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077201671 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080114115 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07729409 seconds)
    (27/309) benchmarking ("sort", Float64, false)...
    done (took 0.358507951 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.204896957 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102943687 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.183479955 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077663972 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087104303 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142815592 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236875874 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09520417 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105730104 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179994236 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122892943 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076678121 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179321495 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087089851 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075970617 seconds)
    (43/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.130598155 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066829002 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197497913 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200503354 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080959694 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.206057953 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.160858242 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082815244 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080297071 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067984478 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078815955 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07835121 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.068839276 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181934767 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067210132 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068356028 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074527589 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071915867 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075412524 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178778629 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067715558 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07677741 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.230031197 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08856182 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066684274 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.168265503 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105199263 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078736593 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079060286 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233423743 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195255566 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091810575 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.198773242 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174439107 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167860545 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067228191 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.214652977 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.134516572 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075894693 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068110225 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074293813 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068048173 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088915642 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068530533 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172013964 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126293218 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078459278 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130830813 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094338044 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.221219153 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08676974 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.252429061 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070335537 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076162814 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138857671 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075983208 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.209088069 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173752866 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079920474 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.104188399 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091256236 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076820072 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076643244 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068098529 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077508479 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079805751 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086780388 seconds)
    (110/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130957802 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077025826 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068505481 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138297878 seconds)
    (114/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.131307592 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067487353 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.13120691 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068568018 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125363075 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080610272 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14297993 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068961112 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077446008 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069392488 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067600798 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086582217 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081338458 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.17788367 seconds)
    (128/309) benchmarking ("sort", Int8, false)...
    done (took 0.161886795 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134223535 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075813789 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07742705 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089657738 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075917442 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139930848 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185192018 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069412532 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069185433 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068933471 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076460145 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07715398 seconds)
    (141/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069484022 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076782356 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091751374 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085275429 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197544894 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094810355 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08135226 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081514091 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067361633 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068162275 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068213202 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078434342 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.22175042 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089182647 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068056609 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069069993 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139427494 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069291464 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080252514 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069117015 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.156504129 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069453217 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184748693 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068496967 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069540267 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072766749 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141778073 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079244871 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198152165 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067507943 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183359429 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171555688 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125357323 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070563602 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074490076 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138008477 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145031329 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173405078 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079678792 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120057881 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072010241 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074373903 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069858138 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068404722 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080879093 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066977758 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067803066 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145387679 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181868663 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093136536 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068738217 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067663903 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.079579517 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093944715 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076010826 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067567449 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067423105 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067852899 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075567005 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215095476 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.197549084 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074537603 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089443146 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068388432 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06830536 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218862365 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074111364 seconds)
    (208/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.080407884 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073484495 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067567406 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.244497676 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074831932 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069898681 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071268096 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080390816 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078263382 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.204652127 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142716553 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070127197 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068316399 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073806843 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187316075 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076487583 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176799523 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068571226 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070742119 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076109122 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068670884 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069240782 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071730015 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069095783 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096936543 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068144616 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068670421 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069906523 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068444429 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068970069 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071132262 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068458074 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109219668 seconds)
    (241/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072193089 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125064641 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067871153 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092566609 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068726539 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090589346 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067413373 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067499991 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072391174 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071907825 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123054424 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067894601 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076316654 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185928892 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068109585 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116551258 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082034096 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069397321 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.08043528 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070042595 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095534364 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124778998 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068824395 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077638227 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077142278 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0757286 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069565825 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122029322 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068952474 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069218545 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069771239 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068581601 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070710683 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06946087 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068901409 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068542522 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08410404 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069893988 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091428073 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072802797 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136446593 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089282293 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068987641 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069463506 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069305775 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090731112 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069030122 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076773613 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071963668 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081919777 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069533636 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071975393 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075276647 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072899984 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126806837 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136900646 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075500402 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.06877881 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093166234 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067509658 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070026136 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067672539 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067541688 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068336749 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080788473 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069850674 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081545544 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110409447 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129649479 seconds)
  done (took 33.747114968 seconds)
done (took 35.105329857 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085769426 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102533017 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076239508 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09598212 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083436194 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09983117 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075953641 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081259 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083889285 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083130856 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081927521 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075076962 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07719733 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07820698 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075777452 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100226338 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082616749 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076202465 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076524815 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067482982 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076558464 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068384878 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067852451 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074714596 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080364346 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076036787 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078298176 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077593103 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068271274 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06886358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072926094 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07708575 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068264285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08094625 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077581326 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07705459 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078456124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081247417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068060866 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069127217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078329934 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068527496 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076146502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07491941 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073329563 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074769185 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076428424 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081552291 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100363032 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073565362 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078602294 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079111589 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080608284 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073711741 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073172102 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076646389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074454857 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100323525 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076695551 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073477502 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078481717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077524425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074607409 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076370098 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076470937 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079108795 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080505826 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074593563 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078778448 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075136313 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067857545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076267884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072923572 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068273309 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079502159 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08071408 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067628823 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075068848 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076288837 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07694239 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068157502 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073376953 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067552435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073249212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073015094 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074500433 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072936174 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075660278 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06763325 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07664319 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075474118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075704532 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067424118 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081290374 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06809651 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074562288 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068074837 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067686408 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067785515 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07314267 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067688017 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07310329 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076811921 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067412004 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072730801 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081620422 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067573717 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075250525 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067669192 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068141716 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079502384 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078259782 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067903286 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072878037 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067745387 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073154629 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067512359 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067970065 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068215689 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068062767 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072316911 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068115525 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072843986 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073481175 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080840217 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067941834 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072337565 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073158661 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067754064 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074527491 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068005589 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067753198 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067169108 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081753789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072962052 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067934009 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072978442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072697631 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075087167 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066281184 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075753835 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073034356 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071551089 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073522658 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066220003 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078679498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072494382 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071962325 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066899234 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06672497 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065883935 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066395682 seconds)
done (took 12.855537565 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069797312 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118758339 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096350424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096894449 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08558568 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069628836 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076588841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094353134 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070679808 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099400435 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091212642 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091293175 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113123901 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068199324 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068780516 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06984491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070378559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081471163 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097676108 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091908333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108824057 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068630654 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089105331 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089862483 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08638557 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091279962 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069897676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070316609 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071780418 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093041477 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094804958 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072237705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069932933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093638387 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088251449 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083258381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069560079 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078441299 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069546455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068599713 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07058012 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090027983 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077944088 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07822201 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070010159 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077246438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070362476 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085375554 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09068178 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077687666 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08506048 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094214414 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073088049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086100658 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068137866 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085246268 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079219479 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070038383 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069930797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074688588 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06955402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072077361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081460485 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079047574 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074130981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084212487 seconds)
  done (took 6.787743305 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084509568 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094938414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085681852 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086583826 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068453951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072392702 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068950298 seconds)
  done (took 2.008656348 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067887163 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089962652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092695654 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093815476 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08665755 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094046225 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077108726 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069060352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098784168 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068633492 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089664592 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101350798 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073032953 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081441372 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094717761 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069951607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094251663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06985541 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070025138 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093757575 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074574258 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09631083 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08082446 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069351023 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082034791 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069390778 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102257939 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077384948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070554982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070602638 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070169608 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096790092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082064052 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083407876 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070660937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084346848 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083534749 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072415708 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080237936 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079000424 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082779622 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070414878 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067992096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070709577 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072319953 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080843701 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067984166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070613293 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070350938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088787198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068111546 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081725699 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07311655 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07523831 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074931362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074777591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077711317 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0709207 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088945503 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07007153 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086853609 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086093332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082621039 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086465436 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069391878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081873656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082722679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069881895 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07092645 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070435308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086227672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072431858 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071225848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080766375 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06877552 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094315794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093949157 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068617737 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082991067 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069893443 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070440878 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080811617 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093522791 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074914344 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070292022 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07373063 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07118579 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072719348 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068363519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072946457 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070167025 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074822756 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070281173 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073012181 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071936489 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085856036 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069288921 seconds)
  done (took 9.045465545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069161822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070438398 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071737584 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070188217 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070568202 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070640726 seconds)
  done (took 1.899203698 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098854635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07019491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0832917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070420745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1071257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086309378 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086531409 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088047888 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084434539 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082132574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086316326 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089252322 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090809956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072970551 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086051715 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071222607 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086599829 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075326832 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08174179 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073361347 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08384766 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072926428 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073301263 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090561253 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074070626 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071634756 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080140353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082329657 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08121017 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096154734 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073278675 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074200774 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078654382 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.088847752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086646043 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078829319 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070266044 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077239832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073310214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074388652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089090006 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076161456 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072874887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076748027 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.088748285 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078810564 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076964666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079163551 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085909704 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076764622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076912352 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071132531 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073933704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07731536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078539699 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088410912 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077063747 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086496532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072377597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078228973 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070067563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074530298 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090462569 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073788785 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078127305 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076632416 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078805543 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073071201 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072596969 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070237016 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076804392 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070059303 seconds)
  done (took 7.182543813 seconds)
done (took 28.39029946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.521512559 seconds)
  done (took 1.947787186 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.651974169 seconds)
  done (took 2.107749588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.528302417 seconds)
  done (took 7.98042365 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416956089 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638349156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750641449 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136334901 seconds)
  done (took 3.430409088 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715641915 seconds)
  done (took 2.181192094 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235573449 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231945732 seconds)
  done (took 1.944654358 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347530316 seconds)
  done (took 1.804350615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.056487293 seconds)
  done (took 2.512090618 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250206396 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168598478 seconds)
  done (took 1.879498492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448414838 seconds)
  done (took 1.905208535 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.228603968 seconds)
  done (took 5.689911221 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218928537 seconds)
  done (took 1.715216366 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235035087 seconds)
  done (took 1.696020767 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.746304911 seconds)
  done (took 3.208863819 seconds)
done (took 41.471470473 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083637097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08566946 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085401276 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083834817 seconds)
  done (took 1.782488412 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07554042 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073071582 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0773193 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073617684 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077320525 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073206786 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075271444 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075930783 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07324432 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074123711 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073563944 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073399579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076554736 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075236996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072173903 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07675716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077331137 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073424608 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076665052 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073385819 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071506149 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076050269 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076289894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072684943 seconds)
  done (took 3.258884917 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079326305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075902447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078790313 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075288733 seconds)
  done (took 1.780763165 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077202575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089695542 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.078485004 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079784022 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09175891 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087177348 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069826981 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070129014 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071448207 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079240687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069031614 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096437389 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089287119 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079787067 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081637803 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066057565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068516973 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088411582 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080240744 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080227021 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071151634 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080206817 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069310741 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090212779 seconds)
  done (took 3.373076864 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087440439 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06733321 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.090041941 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094922447 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096396463 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069439097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088809704 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097468458 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146184286 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069028189 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07514723 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069186481 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108747586 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068976247 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089826263 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112988017 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118908144 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072857759 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102173251 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069061647 seconds)
  done (took 3.271888188 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083546474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07278829 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072279529 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068327355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07908177 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076026717 seconds)
  done (took 1.930422557 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068990402 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069385081 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070506399 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069600065 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075745367 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070135826 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069404749 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070688069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070532899 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07015144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070110199 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069843697 seconds)
  done (took 2.318419966 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189803235 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074513383 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07175859 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067353117 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073555115 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06958311 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085643624 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07206474 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098213265 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070106222 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070281795 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072120652 seconds)
  done (took 2.489510459 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193371926 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076917826 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226516992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149000493 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106432356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113253099 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115117458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11179246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137238402 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101066983 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157187206 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164251966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107533845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133095355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091031811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123618932 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148455122 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159787945 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102421068 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159086282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139114516 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125870652 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145620673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100500766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104835038 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116903492 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074746377 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080255522 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162924034 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126702476 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139841273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10894543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093890314 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169760668 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161839146 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135515673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146566897 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085500544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.12215025 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133689318 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199082745 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090742417 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155012347 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111485135 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080963652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125372702 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109484858 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114838391 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101144049 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089784187 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28077332 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178647576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133297938 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087547914 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120956919 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108963397 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113904382 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117043416 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222327386 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154371739 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12536723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072438239 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111354881 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148359421 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129081588 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109354853 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121325895 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093608991 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131844755 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15372354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139504586 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136899078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1399975 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088807231 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118016684 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134854744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126668835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166511234 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122118807 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074240771 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119883244 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099680336 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081142957 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146398844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076804436 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16957463 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100084541 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12589151 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130141338 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10955718 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109004522 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154499809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138899844 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104748296 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087231823 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102880806 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118448575 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145446199 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087610377 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106780969 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112870272 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080165235 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128508054 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073172787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117511628 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095694154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116071676 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273792049 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082538531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124477419 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104226069 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104000795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130182203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153278765 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089794304 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082196763 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161245468 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120219945 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104071891 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139221856 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152877345 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122149066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098154436 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14179716 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168660989 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091240415 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156854636 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102929893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084707653 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105784237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12175482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110462157 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121901853 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081921924 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119585459 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162700311 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075964023 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097023614 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130478178 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082565995 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08160245 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105532627 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103589576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098133658 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102254943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104631543 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134829943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121968338 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1088712 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122446285 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097998913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16118297 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088818407 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103071312 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104997923 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072563976 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130385782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151240326 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080010787 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156273847 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118626707 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114835421 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116487747 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083920775 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133202995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079516034 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073045192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134917669 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110014823 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259564409 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149355465 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115131293 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123207243 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120723423 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129338489 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126655939 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127099106 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114938089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089912729 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115077065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163951958 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074653334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092770102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083006216 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104417645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095219934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084640304 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135117156 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12295791 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111701773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113978122 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097095683 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146063639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079813413 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122437946 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120884133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09560885 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149965084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148227036 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130388323 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102030784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134134309 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074949977 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076229339 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090155106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121743547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085266628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085076285 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113160927 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146295728 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127730037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133315525 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122381186 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119007193 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153701401 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073782738 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119809717 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140445816 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119405342 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105119535 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090386096 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09837861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139693075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102317944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200820695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111570299 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12008706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150267575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.252523867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082106084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105771947 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129754962 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102582101 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140173362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099655413 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088799941 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107549741 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0791699 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102269783 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12950094 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117091038 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133449552 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111744305 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127404262 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078570872 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111871052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122113653 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122623216 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084624238 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119294044 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161579129 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105205225 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115743048 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147381096 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081040734 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139795091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167086108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139779446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08610082 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105457034 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1208397 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124624162 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120747957 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135406657 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104817686 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134595297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111415701 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085833606 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087380778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095963446 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103488454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.113083051 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10419746 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114162057 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096657069 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133827843 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103186292 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110521634 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117230769 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101016496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096802802 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09672906 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167554384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115770821 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16039757 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099590855 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136455694 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151508985 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225825828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082242951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083397499 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135960926 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085977694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128483976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113461293 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116299324 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121706231 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133650874 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097669027 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072883651 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108733506 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130982578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122775519 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09718886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102663975 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157589158 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1186067 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080263526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112604475 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115552542 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104559608 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168213192 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083980062 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110539187 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079512661 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081812116 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124390408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148243516 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083877292 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10512583 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119887014 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111090789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125291992 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099723263 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112197636 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129973661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143549648 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125115124 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091087064 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110519713 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126448771 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148857075 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104319277 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101252842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16928274 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149882754 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154790759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088970922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113437446 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113488262 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109837881 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132266619 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085025086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153585732 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082283002 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129244305 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100246535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089120104 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124802769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262894065 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09021444 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145811812 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117273115 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084350614 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082002872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111590635 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117890591 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102681102 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0768508 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140912316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075147135 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132431331 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163919854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081857964 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105589746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096391568 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083844397 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103611372 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102228631 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086651704 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100571095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164184032 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089000617 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148146719 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130709256 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113470931 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134712116 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104516777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647296045 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081157693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147375378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115102479 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174790293 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099784667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117151184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110502139 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1198354 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139189796 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101932287 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178978687 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125644632 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114519607 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080164754 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101730867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103526493 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09021825 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106774651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112765187 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113312057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095803008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116655922 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11988554 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083391218 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097277887 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148672528 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113497877 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142819054 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132623149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084432338 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267150558 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133598017 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082468277 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118503102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14702706 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106009772 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124696835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084176586 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101231451 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166448226 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074638608 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152682976 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119013523 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113048829 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111690243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109113918 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128198404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103490086 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119589753 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094692826 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109732991 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15184108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085152649 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080679972 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105817641 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111381952 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098562408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098630491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100646547 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14709527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073274031 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098673665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114785233 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145396241 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165465517 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106307367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084827513 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120694532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156612003 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113648682 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119497673 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082957812 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081824408 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082982141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101533451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124542631 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113395254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119092666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112182205 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155579997 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084934079 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225047812 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097053167 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105664296 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091298787 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081764581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096109153 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0957013 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10199211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110102781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164622291 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.245268503 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092604138 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095079299 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077338438 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084981664 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125578941 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108915326 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117419627 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121519597 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083902184 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103995149 seconds)
  done (took 58.945726908 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119873281 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085770474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099742013 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144288674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121937024 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200364275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150663795 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189576187 seconds)
  done (took 2.685467372 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069044925 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095205752 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107616195 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085885062 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068511653 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071855298 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232390863 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085030874 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067708111 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092736223 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082732681 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07444769 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.465267108 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069489786 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072949671 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08314794 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071060241 seconds)
  done (took 3.456110111 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.3792475 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.6176481 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356666192 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079703306 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.95618846 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090269638 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.215099302 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138866025 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083171516 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539680383 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367434034 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134066809 seconds)
  done (took 18.533152781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08292314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078911056 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094029605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093630347 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081408402 seconds)
  done (took 1.998104248 seconds)
done (took 107.336696574 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081947095 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.456642408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072901613 seconds)
  done (took 2.124796684 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092885284 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092504654 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092822227 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090503683 seconds)
  done (took 1.945980488 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075627724 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079972119 seconds)
  done (took 1.724894378 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.21389232 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181411838 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102101125 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083823024 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084406924 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083881943 seconds)
  done (took 1.827532838 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073579987 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075935369 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076242236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076915256 seconds)
  done (took 1.873200918 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069035919 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06910474 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071487363 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074540929 seconds)
  done (took 1.854275574 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085138213 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085965757 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082389873 seconds)
  done (took 1.824258442 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101236538 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091769544 seconds)
  done (took 1.764521176 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081725836 seconds)
  done (took 1.653162012 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090931242 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102081068 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135348483 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119618775 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14125388 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119502737 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092547252 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089398437 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082485418 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096431714 seconds)
  done (took 2.640711016 seconds)
done (took 21.381044789 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079463761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373253386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36411125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095862017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673633354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361292571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985193959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097582032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148898039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072756557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090560907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651853869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977156772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329179491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961700035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329682508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655727833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072286173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071706311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073067155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971508876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07286397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07361927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073163013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65558014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.412962611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074734037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330515623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072940956 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077454073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362817308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074519807 seconds)
  done (took 16.268640829 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071710893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125506983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07685376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089560753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074866661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073642819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075970421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072836842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1275526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073136478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091257182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072730848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076969218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074111594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093442586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072402689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075008515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074039764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073057793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074982337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09622845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073016393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074537738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073283136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074456019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087331472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074930924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073379054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073382927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078066125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079101777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075075824 seconds)
  done (took 4.160674552 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118161354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130833625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078142804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111283107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117682659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07431728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152005803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098245947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135317836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073438715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091698979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072952786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108386236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074495385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09544078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073648122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07711713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073899884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07306428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075416057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093632653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073181942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074310322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074092711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07501538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088761934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075185129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073207935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073459865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078076229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080326105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075090854 seconds)
  done (took 4.431002953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071229487 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075674096 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085003885 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085736413 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071145247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07337395 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074885333 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071350578 seconds)
  done (took 2.201244753 seconds)
done (took 28.640496138 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079329875 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071361934 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074609446 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09065618 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077520017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082896307 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068707272 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077944169 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074990073 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075302348 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076637221 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070728505 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073768226 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068418214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07551706 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069413068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08509453 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073954241 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084128796 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085477387 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073506765 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076357099 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07879325 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084592856 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08496991 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084685121 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079773122 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076196401 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071045949 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073599397 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074514081 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084097724 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084961764 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085019452 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070754808 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070796003 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074947141 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071975121 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086000148 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079911719 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072508346 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079968843 seconds)
  done (took 4.819368854 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085276534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092949211 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086837657 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083490674 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095268515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086047179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091208792 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082244276 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.082176885 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090694123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077202959 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085256278 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082277973 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076741545 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080878697 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077781805 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082913686 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07740243 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081011501 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081926126 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090692279 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076672474 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090910694 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083055308 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078869402 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084074788 seconds)
  done (took 3.789114204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074852075 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089338496 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096201409 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148106941 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115964802 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083221809 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085040547 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096403752 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101094614 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071952707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076284153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096979744 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096565229 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077719527 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071995367 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088565154 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087331744 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073145308 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078731424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100445003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092273888 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089142765 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097322585 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087681231 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070494723 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076123098 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075669019 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087930421 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073315149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082420534 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073792333 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075400845 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072057261 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081839866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074043093 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070320169 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096186097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082710893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083780351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071695881 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080784639 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071904805 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096543376 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131809831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070010894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075599038 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074846865 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082678535 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070759771 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098640215 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083267237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070981994 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071662718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069837537 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070181111 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074314404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072528105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073875379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081997006 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07781506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093165769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07601718 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089078624 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070877752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081757053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070340663 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072306857 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069701667 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100436254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072708395 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116555347 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071671874 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069628652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082238299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081192517 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077221913 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070794584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089521244 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083185008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074990863 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079586094 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074622932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075089344 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102262396 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071740892 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070435524 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069832623 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075451125 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074568701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072058132 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083312611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070017999 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07485682 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089697804 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07056687 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072040811 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075409139 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07385571 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070266956 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082724646 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075064722 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072752522 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081560806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072107776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075345491 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084310328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078237526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069679216 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07342596 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074662167 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072536622 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072383081 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074715372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07288095 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078103963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078052722 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077032149 seconds)
  done (took 11.054508063 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16625536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162535833 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073885378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153594368 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080175889 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08388232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156798678 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099321879 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071978089 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073035222 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072617963 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114255841 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109761846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12326302 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085148996 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072802466 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095055321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119422389 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158734157 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15277009 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095199195 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080252802 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074498543 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073149638 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073631849 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081877446 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091519299 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081268451 seconds)
  done (took 4.511599599 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079322965 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107130985 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07617276 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095043482 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09205267 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072344259 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07396933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073555545 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088642678 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081361681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071858979 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078124578 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075985101 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075245387 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072142472 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078608291 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078983878 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071633942 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076146452 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077611698 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082121806 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097159064 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075882408 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071977874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074558899 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.074131293 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080440919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084679467 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072036249 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109121268 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069536998 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077042387 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086446381 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072157976 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071458837 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072202459 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07172968 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072177174 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073098049 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070411524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070351974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075896718 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070824364 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079845907 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084838513 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073319889 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074247756 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074794853 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074671853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069459382 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074364189 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074235192 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074705428 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079194069 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076425972 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074490533 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072644498 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100030328 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078352592 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07118288 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07073432 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070391007 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074494413 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081464549 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08730012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074579631 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07068021 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071998372 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084927681 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085233597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071017525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076329382 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06953305 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073438679 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07424827 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07780399 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072663297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070609507 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071287535 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071630284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07282961 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071567612 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071007884 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075115579 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070045773 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070606855 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071950229 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073784848 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081108091 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071089758 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075457667 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072768488 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070585951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074936663 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077549076 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074905403 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083494229 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08298485 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072267814 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070194558 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086173121 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074640562 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071095603 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078361684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076706041 seconds)
  done (took 9.674551684 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092702292 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071980407 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088534451 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096403851 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081811836 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077808099 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082345933 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071758281 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088417571 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076607664 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079297109 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070564367 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083576571 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081791307 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072845478 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082306923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075478134 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089893446 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086936917 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070309053 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080646804 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084924888 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084546887 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086539773 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086240119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086966753 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084244887 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081914605 seconds)
  done (took 3.943250913 seconds)
done (took 39.379810319 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.677925902 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.917021287 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.667564678 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.874426735 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.72304716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 82.321328657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.757255524 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.657722083 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.0029032 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.709316592 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.927468753 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884790171 seconds)
done (took 139.865741997 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.687187232 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811501455 seconds)
    (2/2) benchmarking "String"...
    done (took 1.91282188 seconds)
  done (took 5.32523397 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.844773864 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323716661 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.893387426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.659191655 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.665191497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.916771949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.439378268 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.109155714 seconds)
  done (took 29.609721769 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.867455425 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.881334553 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370560473 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404442698 seconds)
  done (took 15.171197916 seconds)
done (took 61.335759034 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.684051176 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.685357117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.669224434 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.659942587 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.753546558 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.68236228 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.77324957 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.67135362 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.66143425 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.665913903 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.663608583 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.08148553 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.675225155 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.839922288 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.662585984 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663715752 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.708642005 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.110940747 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.816616397 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.676370812 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.669512272 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.674475918 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.671259806 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.66604325 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.672233445 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.664124784 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.330073403 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.664992047 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.268302717 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.669186054 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.699789842 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.993875946 seconds)
  done (took 200.049999646 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.660994436 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.672359008 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.770651724 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.685566425 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.09363075 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.857034511 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.758569892 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.130245228 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.668417657 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.666730522 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935445901 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.662247943 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.960337457 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.608758828 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.698017338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.664197535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.898439063 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.938526639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.700906881 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.80773044 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.667549571 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.812136488 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.763931839 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.892531293 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.698750489 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.760226126 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.685773113 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.680659556 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.849857402 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.874992289 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.662565519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.703580277 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.866587506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.53143142 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689378739 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.674434073 seconds)
  done (took 166.25587915 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.844244772 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.664014435 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.66051153 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.661700628 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.669086969 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.664862992 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.662041713 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.785553404 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791757016 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.326764579 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.109758983 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719291731 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.662746577 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.41423148 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.661162235 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727583039 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.674087725 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.663482013 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.725832771 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.688448503 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668289701 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66537733 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788105375 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.680184695 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.662298654 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673017599 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.664239132 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.668379222 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.052436169 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.663197192 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.862312902 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66505762 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.668806916 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.907163232 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.66391655 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666471711 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.476610726 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.152608708 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74687726 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.663585639 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.666771533 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.669468808 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.666943058 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.882140997 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.664399879 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.667047947 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.66601451 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.664364117 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.772652467 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.668473666 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789630445 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668453536 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.13574492 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.664074667 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66599002 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.979611641 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.222602184 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.669432897 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.666772167 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.663912806 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666058511 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.670436609 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.943896928 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.669563225 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.034050604 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.665734249 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.665888245 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670712273 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.667699444 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.770724119 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669339415 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.278480776 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.683342898 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.792972806 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78865636 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670286151 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730121373 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758050453 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.666170337 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.665553509 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.664505061 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.665049085 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.745841776 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.665912682 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.74538396 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.666637636 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675406184 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.668105639 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720313617 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.735255347 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.667561172 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476315056 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.670245866 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.666098407 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90041259 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731737689 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.666913792 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670110129 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.746885875 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791479319 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.37814311 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.670853633 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.972156291 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.744541325 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.667605779 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778046203 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.67160743 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74682673 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674367213 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.668755355 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70326904 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.666596414 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.679991841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.667477253 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.039446789 seconds)
  done (took 390.124909301 seconds)
done (took 759.93805927 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.288365417 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.259336193 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.351683643 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.277386722 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.249832354 seconds)
  done (took 13.03442815 seconds)
done (took 14.645364636 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.746006585 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.750198895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.68655153 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.748294673 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.684056976 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.749315369 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.731870844 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.690631609 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.717762451 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.690946132 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.718535977 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.691173707 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.676810273 seconds)
  done (took 23.890244977 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.900844545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.90190832 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73329801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895225676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.710200583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.892200531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.820451732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815015996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806631673 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.679501285 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.678621667 seconds)
  done (took 21.443169115 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.895226551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.914829865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740701846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.894822843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713429881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.920948115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.823705023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.819508103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.809573308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680247008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677825006 seconds)
  done (took 21.501343254 seconds)
done (took 68.446697019 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.67198311 seconds)
  done (took 3.281931277 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.691633011 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.850363779 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.673549744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.675111524 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.672423255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.674345905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.673476257 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.673081778 seconds)
  done (took 15.19553484 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.67264932 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.672884406 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.67311463 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.674633114 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.674509148 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.672274101 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.673053719 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.673041188 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.672277589 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.672505203 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.672625653 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.671950892 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.672693207 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.672873008 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.672727245 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.673705165 seconds)
  done (took 28.379206147 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.67522558 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.674049543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.672188353 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.672856001 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.673038351 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.673286241 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.673912197 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.673441749 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.672806639 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.673796147 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.673666253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.674375916 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.674441223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.674827683 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.675150167 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.675915835 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.674365357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.674304792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.678213523 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.676337607 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.675026841 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.67488047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.67317161 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.675746688 seconds)
  done (took 41.798988452 seconds)
done (took 90.26925031 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.392362751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.535968619 seconds)
  done (took 9.54046763 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.6778803 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.675535455 seconds)
  done (took 5.040799318 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.674821929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.675033236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.674365495 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.674971107 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.675154667 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.674642766 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.673854759 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.674070272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.674332109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.674930729 seconds)
  done (took 18.358124411 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.675087614 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.674053123 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.673886878 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.675820753 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.674393204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.674887702 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.673542907 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.67433247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.675139154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.67383139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.674814896 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.675592433 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.674711582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.675695563 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.675512873 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.675401978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.674672132 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.675557708 seconds)
  done (took 31.760772973 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.675133619 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.67482834 seconds)
  done (took 4.963715173 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.675813783 seconds)
    (2/7) benchmarking "second"...
    done (took 1.675896896 seconds)
    (3/7) benchmarking "month"...
    done (took 1.676763397 seconds)
    (4/7) benchmarking "year"...
    done (took 1.674763481 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.675359322 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.6754985 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.674672082 seconds)
  done (took 13.34334203 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.676499934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.831570428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.89832192 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.30911084 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.677942397 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.679931487 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.602216916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.680719344 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.681181183 seconds)
  done (took 18.652936241 seconds)
done (took 103.276526706 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.532268179 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.678283123 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.936211627 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.741127933 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.744125187 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.675561698 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.692219489 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.941076543 seconds)
done (took 41.559087061 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.693423577 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.378208825 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.396341803 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.712089719 seconds)
  done (took 15.102279667 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.675890662 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.984603958 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.701975438 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.530426014 seconds)
  done (took 21.512678007 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.042521327 seconds)
    (2/2) benchmarking "read"...
    done (took 2.028115257 seconds)
  done (took 5.690289576 seconds)
done (took 50.618970417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677307471 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.677195629 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.677450179 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677057682 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.677382268 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.677019791 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.677691695 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.678137587 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.678827927 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.677691469 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.679450873 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.677974909 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.676888262 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67698787 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.677229484 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677494929 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677174926 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.676737492 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.677518889 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678048899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.677161517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677970741 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.678015714 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.678984023 seconds)
  done (took 41.879391325 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.679273883 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.678257021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.677580196 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.678751084 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.678318112 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.678772651 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.67831356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.678541737 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.679877925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.679358084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.678637732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.678871844 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.678918236 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.678250985 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679509619 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.679132995 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.678484296 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679437928 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678699164 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.679310469 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.679407937 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67847237 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.680183142 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.679980447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.678810843 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.67939627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.679432899 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.680673877 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678285699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.678689438 seconds)
  done (took 51.987186887 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.679151581 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.679038947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.679458778 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.680558602 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.681931674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.681541393 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.682189892 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.681194452 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.681190764 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.680931264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.681738561 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.681605547 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.680486728 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.684285338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.681619649 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.68085093 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.679727142 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.680125152 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.680181959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.680464076 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.68067432 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.680878515 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.679954546 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.680285961 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.680596385 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.680162056 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.680519429 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.681231631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.680139664 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.681147007 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.680460229 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.680111836 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.680863776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.680854145 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.6812363 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.680848972 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.680576359 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.680738329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.681495309 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.682660311 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.680938673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.681808142 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.68149759 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.682007914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.682019248 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.680466974 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.680945048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.680831184 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.681972383 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.681533249 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.680364629 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.681962138 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.67980575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.682047245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.68241043 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.682635305 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.683198525 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.682898714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.682122389 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.68172536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.682215094 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.682272286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.682065029 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.682340076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.683021545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.682281786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.682692545 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.681673799 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.682617503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.682263659 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.684110249 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.683190796 seconds)
  done (took 122.677411498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.683987785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.684308007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.684033001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.684147403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684056545 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.683473611 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.682971382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683361454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683318566 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.684091058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683655837 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.683182321 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684252344 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.684451804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.683407012 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.682604891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.682748712 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683534238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.683467711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.684211484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.684433736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.684339239 seconds)
  done (took 38.663171053 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68481984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.684139311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.683483921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.683887785 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.683436966 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.684883754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.683290249 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.684114635 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683212266 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.682818611 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684329681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683265971 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684370165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684701728 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684389169 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.684354657 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685289634 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.684798933 seconds)
  done (took 31.935721981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.684988183 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.685139951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.683950306 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.685302444 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.684979371 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684962589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68458939 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.685838534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.684865046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.686048734 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.685351242 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684555683 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.686269855 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685373759 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685068131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685842213 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.685126667 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685805615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685125911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.686199098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684634473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68584285 seconds)
  done (took 38.700169246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685235824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.685959121 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.686833953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.686620869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.68585705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.685972794 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.685773743 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.685301474 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.686544068 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.686064202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686570313 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.686273747 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.686400647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.687070952 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.687261984 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686472165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.685861673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.685955588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687578138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.686230637 seconds)
  done (took 35.350304558 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687684957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687269796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.689135215 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.688956356 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688226882 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.68845283 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.688959761 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.68990672 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.689184322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.688976861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.688299939 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.690001167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689469577 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.688762289 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.688059248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.689913046 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.688819468 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.688694624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.690012282 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689506236 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.689279826 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.690455443 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.68879272 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.689068039 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.689482169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689502229 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.688243109 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.689428882 seconds)
  done (took 48.917677773 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687252126 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.687738192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.687357291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.68755784 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.688071235 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.687404882 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.688152148 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.687985055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.687605134 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.688336477 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.688553472 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.687735482 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.688926409 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.689243186 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688425327 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.688989045 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689274145 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.690032333 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687954152 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689015507 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.688969415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689613576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.689763746 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689273554 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689597767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.688979053 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.690013616 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.68970024 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.6887637 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.690195785 seconds)
  done (took 52.28778905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.709222161 seconds)
    (2/2) benchmarking "in"...
    done (took 1.711609903 seconds)
  done (took 5.047164588 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.689398117 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689063309 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.689455453 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.689938866 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.690355334 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.690689951 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.689748317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690175301 seconds)
  done (took 15.14620574 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.692780704 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.690650206 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.68937837 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.689171537 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.690545319 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.690455114 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697785327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.689583322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.693261604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.692034699 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.699108489 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.699367508 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.695399711 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692966808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.692708144 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.694997955 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.690581137 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.691162331 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.691070378 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.691493701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691299749 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694966497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.694386402 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.691257149 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.693874607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.702302702 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.697114222 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.690181465 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.692399197 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.695984788 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.693068569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.689740072 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.691314538 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.691283149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.690299919 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.690661709 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.701468014 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694560326 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.699008383 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692144582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691692963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.690535473 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.694893902 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.694003038 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695542137 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.691956024 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.691704081 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.690824636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.692959331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.696450632 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.699768798 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693539599 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.691230209 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698768207 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.695161999 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.701891364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.692661631 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.697225262 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.703347394 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.703649195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.705644154 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.702284465 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.696599087 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.693084857 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.703597209 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.719369337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701301031 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.694023642 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.691964775 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.694177838 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.701042296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.707087207 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.7045802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.692805769 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.694136928 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.693085815 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.696464191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693492049 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702137501 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.698749664 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.694172354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.693455962 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704409353 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718246122 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.695774954 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.69375399 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.693919938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.694265806 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.696160295 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706920433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.69535905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.694553299 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.694718928 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.695433554 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.696633297 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.69457459 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.694364137 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.696428991 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.694723244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.695124439 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694583398 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.699749401 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.706103152 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.695263328 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.694934109 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.70399431 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.6952009 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.696411211 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.703434487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.695032327 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.694886774 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.696613539 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.703460838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.696057445 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699831126 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.705386266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.695684136 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.698761175 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.694628661 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.696129196 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.706627448 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.724024436 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.69495376 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.695852712 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.702616236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.707468257 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695650727 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.700797244 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.696475206 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.695195132 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.696532133 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.69797852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.695769564 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.69980355 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696187093 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.699650128 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.696670569 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.696865841 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.697025519 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.699585747 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.699070946 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.699133453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.699926604 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.703303334 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.696975487 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.699658071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.704418851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.698464267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.700194239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.698308053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.695882491 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696612438 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.70072367 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.698097649 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.697598763 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696578669 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.698364785 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.698014297 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.696963079 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.69745528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.697642724 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.699215529 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704964934 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.698765703 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.703713005 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.699287613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.697328262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.697364713 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.697385202 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.69909296 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.697154512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.697732983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.702003852 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.706130495 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.698361063 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.698382946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.702380926 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.69855977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.698072075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697775467 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.703006762 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.708650425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.698295611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.707091619 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.699554377 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699899833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.698831739 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.700015551 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.701143092 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.699070494 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.703144315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.70763094 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712686673 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710741131 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.70108571 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.702873458 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.702073098 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.703944932 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.705520671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.699980608 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.699756791 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.699049702 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.701802195 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.700054494 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.702890829 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.699074597 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.700404462 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.700104807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.699630927 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.700092813 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.700268452 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.702607108 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.703129778 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.69960736 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.699495432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.701057051 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.70149729 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.699910376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.700399014 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.701202925 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.70020437 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.699250954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.708846746 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.700905678 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.703957842 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703839272 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.703155044 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.701511415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.700051739 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704384188 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.702525723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709194926 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.702867049 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.703347856 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709606231 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.702645359 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.702041064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.705446658 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.701509343 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.700953541 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.706393202 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.709016493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.700865174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.702201552 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.702833681 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.703950514 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702006908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.709751163 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.701906653 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.702839125 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.701265062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.704534037 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.701514968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.704749831 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.704937321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.703632521 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706692135 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701716751 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.702702251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70511537 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.702742296 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.702161402 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.702168083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.706567168 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.710669849 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.707847032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.703292339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.706219371 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.704767033 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.706663111 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.705977067 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.703012921 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.705020043 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.716125856 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.711235352 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710318671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.706326242 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.703128847 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709985257 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.706277146 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.709043847 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705064529 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.705001619 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.704167544 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.705617548 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.703061448 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.706195842 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.703163153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706185855 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.705699073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.707413661 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.70343686 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.70561508 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.704697814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.704641737 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.704195338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.705461944 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.705184571 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.708302071 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70809451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.704608412 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.706943052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711888943 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.708146543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.706569179 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.706515857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.706212277 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.705785788 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.706333228 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.705707443 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.709482392 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.713714687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.71120174 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.716570146 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.70826126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716935868 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.70598192 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.709555188 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.713338924 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.705039463 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.706126322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.707095956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.705529765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.714172919 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.705518091 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.707392161 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.709477327 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705585097 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.70655918 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.705572602 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.705586602 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705542416 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.706881804 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714348341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.707762201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.712599655 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.709490616 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.705951112 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.705350141 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.706298495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.706306507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71160908 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.705313169 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.709163766 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.707696874 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.70754061 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.706555361 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.706543104 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.70605982 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.706382828 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.707187592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.714692965 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.709730182 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.711300371 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.70719754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.716387324 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.706949048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.714695182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.707586124 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.70926723 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.70695947 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.70636296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.710002886 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.708713352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.710390972 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.708718976 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.709986048 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.712152844 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.708082161 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.711200849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.710673939 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.707594082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.709009861 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717618985 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.730941383 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.709899751 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.71165672 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.707266018 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.710568954 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.712352164 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.708229569 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.708416723 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.712518865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719968622 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716228802 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.709696097 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.707705653 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.711431428 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708674748 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.707032818 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.708215107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.708603039 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.708377073 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.710867816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.70855319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.714920821 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.708299041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.711085471 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710790859 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.711348355 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.72072886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.708313984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.712700132 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708991003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.709114971 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.712232015 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.712503774 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.709770535 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711089154 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708838531 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.712330988 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717746977 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.71757482 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.714116191 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.711785346 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.709601435 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.712724941 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.71228636 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71033201 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.709071423 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710159322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.714308694 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.70986856 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.712315264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.710675449 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.709635011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.711465205 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71028125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.714442747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.719452238 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711910915 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.709959959 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.709844686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710252594 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.711486284 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.712428303 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.719953993 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71536483 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.722007825 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.719530428 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.715626377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.712769931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715210096 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.720633168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.711343839 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.713643363 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.711909271 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.714448937 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.71398854 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.716651558 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711370144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.719867027 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.714076191 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.713324663 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.722364464 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.716165327 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711818775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.715674415 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.718504439 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.713309662 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.711160431 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.712872929 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.71380345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.720356558 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.716938445 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.712732651 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.716579211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.713342384 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.714851917 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717012524 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712712465 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.714589434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.710952028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.714908368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.7115557 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712105297 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.711291736 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.713402881 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.713159812 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.717984823 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.720479691 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.713149134 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717195414 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.715150501 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.715493876 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.713361114 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7126132 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.712292539 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.714097833 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.714207501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712511167 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.715469092 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.717230955 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.714421033 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.718080035 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.71739015 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.712671615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.717781127 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.72568122 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.721199436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.712469863 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.715562116 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.715507038 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.718086295 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714483594 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.714098877 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716845265 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.716898228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.713240177 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714604192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.714171722 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.718584845 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.731631936 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.714239157 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715702316 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.716296505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.719861507 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.71404493 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.714331337 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.714249505 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.717029208 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.718448423 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.722090184 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.714718045 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72349648 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71659087 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.717642795 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.718452025 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.718495334 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.72391277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.719329361 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714676327 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.715584728 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.720507829 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.734980139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715075203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726943255 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745887847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.716027107 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.718008439 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.715980551 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716865449 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.715983686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.718137748 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.716201396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.716921231 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716118872 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.716047548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.719046971 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7243691 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.719920877 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.716969846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.715614645 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.717156632 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.719579251 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.715996297 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.716001614 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.715656809 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.716208126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.716990495 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.716422766 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.718511942 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729351827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.72804386 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.716261451 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.716899129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.716726037 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.722544332 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.723122627 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.729213598 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.725096216 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.716784082 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.716440369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.720449174 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.717113263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.715724609 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.720022775 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.718863059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71902045 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.716644266 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.730256778 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725792549 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.723169396 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.718998984 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718544575 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.717365409 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.720167031 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.717441046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718777778 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.721147878 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.718593014 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721846809 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.717257174 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.71827749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.723917702 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.726116418 seconds)
  done (took 1018.99219171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.718244079 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718249424 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.71770253 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71792575 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718510942 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718790365 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71829725 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.719310509 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.719586257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718034647 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.719377117 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718433306 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.718121301 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718231885 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718685826 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.719440937 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719458233 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.718551449 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.72031289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718343921 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.717996373 seconds)
  done (took 37.74707128 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.717574316 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.717464903 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720824074 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.717915561 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718048601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.718063943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.719651459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718392982 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719993247 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718809578 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.717667079 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718630334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.719391301 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.717989524 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719366723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71996208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.719686317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718151763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.718836195 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719845029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716410804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714933782 seconds)
  done (took 39.463443718 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.713460512 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.714077806 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.716136519 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.713493805 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.713292523 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.713503935 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.714460893 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.713903238 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.714002668 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.716054059 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.715814895 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.715378411 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.723912048 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.722615082 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.717711087 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.712645471 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.858380982 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.713849442 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.714681644 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.713516802 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.714096056 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.720915691 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.714049478 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.715259045 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.713667744 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.71545219 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.714124913 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.71426308 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.714663589 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.715352235 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.719178853 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.713758293 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.715877782 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.716073592 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.713325504 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.714237741 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.717604554 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.71399598 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.713461176 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.712088241 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.722543169 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.736334065 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.712202247 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.718493504 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.709318091 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.710311888 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.714714112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.718846682 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.710015892 seconds)
  done (took 85.857662299 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.708713787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.711492304 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.710429303 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.708842337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.71099961 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.710943943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.711064548 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.710518163 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.711063549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.711050247 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.710034462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.711393827 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.710332961 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.710325123 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.710858124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.710848375 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.71135069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.712430731 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.710662243 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.711749567 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.710985102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.712033019 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.711694597 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.712285725 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.711519489 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.712825907 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.712343173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.711861964 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.713397787 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.711521177 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.710828445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.710778493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.712127843 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.710631723 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.714264244 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.712482895 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.712396995 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.711818837 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.712254282 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.712202766 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.714012927 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.711453026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.711320436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.710971826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.711424452 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.712535506 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.712785712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.712403102 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.712652453 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.712931287 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.711778834 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.713387301 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.714737622 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.712821925 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.712248543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.712686805 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.712184191 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.711636042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.710774251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.711571379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.711328326 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.711862799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.711746715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.71284263 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.710874836 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.711838963 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.712026565 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.711093905 seconds)
  done (took 118.04522251 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.712155775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.712587363 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712252922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711633441 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712310567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.712562219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.71314889 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.712629812 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.713366364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.712352172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.712221709 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.712168653 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.714801183 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711274013 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.71281102 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.71141601 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.712204459 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712421614 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.712956878 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710398027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.709622653 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710621698 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.71080272 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.709959947 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.707993919 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.706032182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706214453 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.706120329 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70519065 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.704348968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.70544475 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.704778871 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.705489495 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.704573518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.70647107 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.706113214 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705352008 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.705655819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.704982378 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.706056708 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.704450058 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.706509732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.705769019 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.706569907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704478931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.706708729 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.707019621 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.705908738 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.704828165 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.706159162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.704798609 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705812855 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706365376 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.713246696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.706109754 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.704949636 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.705270707 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704652357 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706119377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.705810283 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706196611 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.705011785 seconds)
  done (took 107.563141261 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705411749 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.704619344 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.70415604 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.704952929 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.705017542 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.704890797 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.705263995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.704989604 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.705325442 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.704917447 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705668549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703888492 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706447371 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705552739 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.706843891 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705693144 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706766312 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706127486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705488361 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707076097 seconds)
  done (took 35.750611118 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.705180137 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704476671 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.706101629 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.70470025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.707701697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.704056042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.704710515 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704581223 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706437966 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705104357 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.706372365 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.70115216 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701001815 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.700910545 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.702310306 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.700660041 seconds)
  done (took 28.907522969 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.701073967 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.700789316 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.700096927 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.700115933 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.702194297 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.701943685 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.699494776 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.699937233 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.699098915 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.700250387 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.70051915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.702699271 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.698155054 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.700244436 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.70023612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.699854085 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.699364485 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.699794331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.699008215 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.698164208 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.699537822 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.697492866 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.6981252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.698818703 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.698479677 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.698427361 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.698874796 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.698269846 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.697971234 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.697243696 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.697230007 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.698480102 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.69959944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.698248273 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.700644619 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.698984184 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.70000025 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.70032442 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.697740518 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.699320997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.699053644 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.69673242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.696459571 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.695302499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.696688071 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.696418124 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.6961711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.696556841 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.696903108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.698029201 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.696431988 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.696334548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.697804419 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.696174326 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.697444702 seconds)
  done (took 95.069479353 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696673298 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.6955516 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.696689473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695541236 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.697995098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.697187129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696682399 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.69722744 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69708625 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.695656408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695583934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.697487291 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697185794 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.695425624 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.69667119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697430021 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.696341672 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.696980165 seconds)
  done (took 32.171420007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695689494 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.696725225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.696262673 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695977683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.696083746 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.697170258 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697022029 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.696165025 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69581368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.696919235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697013905 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.697539192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700558187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.696226731 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.696806282 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696164181 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.697373066 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694948389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.698296867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697377865 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.696713322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697508737 seconds)
  done (took 38.961547922 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.697438921 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.698807381 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.711909824 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.716701708 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.717916372 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.733176211 seconds)
  done (took 11.90754205 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696088582 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697305845 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696640843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696687896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696218323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696760196 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697176504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696106321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697084339 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696914207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697638879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696460513 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697517393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696695211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695993039 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696345701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697011152 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697631591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69701137 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697356234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696536525 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697090393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696340724 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696941115 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697712065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697188129 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69602326 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695777366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697524254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696961387 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69670098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696827606 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696395066 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697398653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697403643 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696647189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697071365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695837376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696226156 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697392232 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.696611114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697738792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696057343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696324173 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697572787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699590616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69874405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700087059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698371065 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697711634 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696707854 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696809811 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695159995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696960894 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695740175 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697600907 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697045325 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696050748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696170405 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698525455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696861464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696912939 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696133209 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69979955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699184095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69918618 seconds)
  done (took 113.640890161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698442043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698974927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699497755 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698679705 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697116277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696760653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696167421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696592159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696903162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696619362 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698260058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697050965 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697221818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698178863 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698170973 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697116787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698174758 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699205999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698836601 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697409268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697647463 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69867586 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698510806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696783295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698612359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696707038 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696410173 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697117138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699170866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696476265 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695942064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697141303 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697856584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698205234 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697182103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698186437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697657783 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697957294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697212244 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69868798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696775676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697149375 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697311458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696996657 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697367451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697722883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697450591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697065969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697385642 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697478414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697691626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699532425 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697832949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697417964 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69758076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695534213 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696957612 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.6978321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695381711 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696272674 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696878091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695828876 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697115303 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69733359 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695396937 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696864653 seconds)
  done (took 113.667344765 seconds)
done (took 2361.960286047 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.754622339 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.703799835 seconds)
  done (took 15.090349904 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.856778247 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.812665195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.697364821 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.730009266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.697033138 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.719461911 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.698329586 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.696851398 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.697141117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.697320883 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.696664217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.881706788 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.720240132 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.697169784 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.699648465 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.788484738 seconds)
  done (took 49.422912779 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.700476166 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.703629415 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.712364681 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.705059373 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.701618263 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712340213 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.734465102 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.704193795 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.735018499 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.714750602 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.769023135 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.709690067 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.699081871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.749343596 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.712520073 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.715095709 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.795266655 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.774701674 seconds)
  done (took 32.680801275 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775497448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.710253054 seconds)
  done (took 10.124672689 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.700637098 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.744594838 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.718475967 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.695850099 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.697939109 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.707215937 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.735501026 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.733023953 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.695657713 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.733642707 seconds)
  done (took 68.796403118 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.705400633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.701977337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.700123006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.701943625 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.695669936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.700177021 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.698899394 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.707051454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.357980197 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.733913863 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.707913348 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.70480616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.703232965 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.701595546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.699080791 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.724755903 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.815848692 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.701131431 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.699814001 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.705831687 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.70069986 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.75121866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.714711793 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.704557098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.729349484 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.359131418 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.705256952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.705966397 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.808991433 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.701896565 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.703115365 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.88806491 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.703549448 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.155300068 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.964614046 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.707281311 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.71253154 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.710842531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.700333559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.818429293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.700740574 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.706204821 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.667439156 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.940258064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.802604268 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.748601262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.000592869 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.715098622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.703939652 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.72875263 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.705654311 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.699299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.716030849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.215340747 seconds)
  done (took 123.496132187 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.70170185 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.045398335 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.868417654 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.70407236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97864794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902173793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.699681997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.745445484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.702838183 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924622424 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952393243 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802215082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.701593237 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.703439199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.699544103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.69873979 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.856597757 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.77222238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.701498351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.701455375 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726434179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94046962 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.817814722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.699922272 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.723385215 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911549815 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.819906835 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.802977861 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.482018165 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.699058615 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.763707555 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.699085255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.703120743 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.695428842 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.85376147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.7913155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777942284 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.700979644 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702567689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.701508636 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.447144739 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899576907 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792797911 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.830288686 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.946116397 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.901221922 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47732673 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.704891148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.448631407 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.863462961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.928024478 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931071404 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.81846012 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.703045175 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.225959618 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.700182012 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.704394101 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952742735 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919731288 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.795620318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703477157 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.707307872 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704145359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991981489 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70512829 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796288288 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.705412193 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.702786161 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.800228481 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800440348 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.925938257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912823512 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.732159962 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.043283977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.218891937 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952008361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.7675177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949700353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.705377257 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706121484 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783289733 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.545234072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958115851 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98284673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946559602 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736543746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.421778236 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.705214549 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.930196341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924623146 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.961847784 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.949214037 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.939939281 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.025709671 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.703835811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.708090408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.0070262 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825812299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.701558898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.047361461 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933246636 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.231567779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.731728799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00636539 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.836034725 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.705515755 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342895685 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.704534587 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933571453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.744211465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.708640632 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706791983 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.92141325 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.688548333 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710334857 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.359083861 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.766702233 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.706877905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935505478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.707469031 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972767835 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708406747 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941031623 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.098808509 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736391862 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.937506996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.953172641 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.705459669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.945151458 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948083428 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.816814753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.922288938 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.330648006 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.708524472 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990579636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.70657068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.705739007 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.872904614 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.70669177 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.84835487 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.70645238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.998262429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72244246 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936571266 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703391912 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952365555 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.734581367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.756057444 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.705806743 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.833508506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.705815533 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.535281542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.859472082 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707802794 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699754054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.504696195 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.703608836 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.853749325 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.929912424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723481899 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776289821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.366140248 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.707672409 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78472935 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.726246208 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.088913278 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.707376231 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.958662941 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.705708893 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.707302042 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.704698121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.990494311 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.884697701 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.71070431 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.70211591 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.609954295 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.706565939 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706389299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.887628598 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.046341011 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706233823 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908735296 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70784664 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.832871094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.70601334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.779495137 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.044215499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.70614599 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.708364191 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.707761088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.707858207 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.121054526 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967797725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.72914022 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.20239422 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.84390567 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978632631 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.013011065 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946830945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747312103 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.711688298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959173754 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.706888728 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766961819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.707115644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.725949664 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932941061 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.708578903 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913842608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973976277 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.552880533 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.756176173 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.708989823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709452037 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.706359836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.851875378 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788094847 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.709966671 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.710210828 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.822149524 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.826607323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914668584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.71013575 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.824661253 seconds)
  done (took 866.30218572 seconds)
done (took 1167.549092649 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.710599455 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.708334762 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.710802731 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.710344381 seconds)
  done (took 28.481836443 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.717366148 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.710812941 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.712594492 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.712554753 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.711131148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.711718454 seconds)
  done (took 11.919705566 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.706802652 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.708167622 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.711720036 seconds)
  done (took 20.769775685 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.782094434 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.094805478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.839866355 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.124195818 seconds)
  done (took 9.484396784 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.713329944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.712211965 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.7120513 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.711485723 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.721353547 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.720584642 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.712146619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.711585853 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.724046429 seconds)
  done (took 17.083347158 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.930264424 seconds)
done (took 93.316324528 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.455473282 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.381331628 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.771905412 seconds)
    (4/309) benchmarking ("sort", Float32, false)...
    done (took 5.399128297 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836194577 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.810068723 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.724870157 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.348426502 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.734979802 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.711468849 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.178724486 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.372942871 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.727493228 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.791343923 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.817365346 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.807315613 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.62302529 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.709853208 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.975353452 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.468846635 seconds)
    (21/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.915104801 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.874884524 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.079185196 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.738203542 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.710854162 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.894181657 seconds)
    (27/309) benchmarking ("sort", Float64, false)...
    done (took 5.436570563 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.711388339 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.017859507 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.87315543 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.725764382 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.796453528 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.713929681 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.071962613 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.479452554 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.711914095 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042439561 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.719080149 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.2245767 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.920460937 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.937789718 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.88643948 seconds)
    (43/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.811507734 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.820286035 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.072343121 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.898567845 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.717163148 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.030091972 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.052064186 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.242368064 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.732418111 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.114134132 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.74591114 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.722851358 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 6.78685152 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.838824064 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.816801549 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.536874166 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.734870903 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.783909386 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.967639234 seconds)
    (62/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.176403536 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.880274912 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.743527411 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.168158184 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.884664518 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.812799939 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.79848034 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.625610555 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.73532505 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.739472684 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.724475456 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 7.439614676 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.740620913 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.940299343 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.914636845 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.842823842 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.93252733 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.985200861 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.622852844 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.752363502 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.804147074 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.049000356 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.009506675 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.032948241 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.831006091 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.809032518 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.809510904 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.731044713 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.727224505 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.077720411 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.749841764 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.568104039 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.732775129 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.006275458 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.745627132 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.728898055 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.739589985 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.519984535 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.836148156 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.859268529 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.708605697 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.141236935 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.808339703 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.726850904 seconds)
    (106/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.490765959 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.812668051 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.726534363 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.047187439 seconds)
    (110/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.830827589 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.755726128 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.087497576 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.735504445 seconds)
    (114/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.835705272 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.828003454 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.846261847 seconds)
    (117/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.728580896 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.612128175 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.882158088 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.922109691 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.978471036 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.762285854 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.726006864 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.837950717 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.959707214 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.96281044 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.924144186 seconds)
    (128/309) benchmarking ("sort", Int8, false)...
    done (took 4.635582503 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.828069037 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909088229 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.736720529 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.631858377 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.969969353 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.176632136 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.736066786 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.89235347 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.105813068 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.730817847 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.45384542 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.776195536 seconds)
    (141/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.955399302 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.733302598 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.35641123 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.731675341 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.010481474 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.745180762 seconds)
    (147/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.727254039 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.990172045 seconds)
    (149/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.746878343 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.829979278 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.112665768 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.73173149 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.197071252 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.0469573 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.97444835 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.083489939 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.870347613 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.02881023 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.4290863 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.731199468 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.96374991 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.954237383 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.731700113 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033492557 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.736179738 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.001751733 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.863972341 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109535941 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.060227833 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.115792019 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.731199313 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.502063587 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.859403117 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.729671035 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.834414707 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.764417246 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.730117079 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.73343709 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.081282908 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.87173081 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.816297296 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.818441352 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.812915258 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.819847212 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.995232194 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.824261917 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.731548592 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.841871375 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.900215141 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.734212968 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.068773779 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.263525369 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.867722955 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.35524055 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.763776893 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.976663762 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.068876171 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.7328665 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.418347086 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.758681581 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.447533142 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.804170777 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.677731499 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.041433712 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.752945957 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.182076129 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.754438272 seconds)
    (208/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.986552604 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.001853569 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.734161812 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.341494802 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965924926 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.864018159 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.110021446 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.386256196 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.933238548 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.052358585 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.738631965 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.737061032 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.082657943 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.824342068 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.734396448 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.75643949 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.879035738 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.905637889 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.731060002 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.913817131 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.990228394 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.118559448 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.958867249 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.677668045 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.77262915 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.018800571 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.077566408 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.952404794 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.984383282 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.051926987 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.881166088 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.077031331 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.718501832 seconds)
    (241/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.062241323 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.738352279 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.420189376 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.048587134 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127841632 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.65082114 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.872611333 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065833779 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.798590795 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792661333 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.733623779 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.439882564 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.81357533 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.731668982 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.995807683 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.870379842 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.298096341 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.063036948 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.876871923 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.740020058 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.067490787 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.749677063 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.078700729 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.068845668 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.755620844 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.748725529 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.515256113 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.740433579 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137318502 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.909670177 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.822205202 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.739462384 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.846721983 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.683056947 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.934701024 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.139949069 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.588175735 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.749538263 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.776617586 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.050174882 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.765217379 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.679341687 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.883274323 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.045881494 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.954125819 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.872321861 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.739565335 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.615961971 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.795747382 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.221730874 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742911165 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.983264741 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.986401359 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.869598727 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.868869192 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.734992093 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.769522357 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.586129143 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.359805219 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.90004826 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.74056639 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.338582659 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.875501163 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.944274525 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.974539918 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.741422699 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.722910921 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.867796039 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.838294711 seconds)
  done (took 963.596738701 seconds)
done (took 965.308729104 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.764444564 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.759287118 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73943866 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.76201359 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.854207582 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.78591986 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.754437731 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.744624178 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.790040932 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.791630654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.740230015 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.784024443 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.741301145 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.73960429 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.740722707 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757290511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.052918193 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.770700965 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.758935068 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.754315157 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.760132726 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.740945227 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.794523289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.786464353 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.746677566 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.747990921 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.745976129 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.762536019 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.855685312 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.745701205 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.747739237 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.755199325 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.053911482 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.770320717 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.741177864 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.762636918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.755125567 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.755016526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.74737159 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.775100487 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.13909844 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.781200322 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.74317308 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.744274514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.7453077 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.750685817 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.745051785 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.752640944 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758671718 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759788709 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.131580169 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.797329125 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.747254033 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.744929789 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.758968203 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.743302028 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.748440806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760534323 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.76260852 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761532541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.040241319 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.778192149 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.747302308 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.763205506 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.751518804 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.168854389 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.780640188 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.748671375 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.136430074 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.7912347 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.166597987 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.793096399 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.7462672 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.759315081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.776648336 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.055368065 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771262655 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.742732957 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.754427557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.743148486 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.755502368 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760644794 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.750371643 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.744391366 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761933915 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.792633299 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.759092743 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.746010807 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.757443474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.767419322 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.755717975 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.75738458 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.748337657 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.7436649 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.757623529 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.749477209 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.748563539 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.747719321 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.75028818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.75782751 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.137164016 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802175166 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.742291167 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.741929995 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.746951283 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.758984088 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.137762654 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.784583877 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.771100942 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.7958184 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.746026926 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.039735637 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.776686567 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762872373 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.758344374 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.749675064 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.744186769 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.038154921 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.162880774 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.800286025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.746200143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.746861776 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762755216 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.749395179 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.742641228 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.05561547 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.779857359 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.761474505 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.8690132 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.761046545 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.780876317 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.746431704 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.750658218 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.7961301 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763636698 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.782531258 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.751695557 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764869876 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.76438176 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.745998561 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.758928106 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.760876359 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.748471288 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.759562566 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.747477224 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.7960914 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762858127 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763114534 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.769806891 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.872065441 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.745035852 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.046392633 seconds)
done (took 274.970390142 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834410759 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.744745978 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.840045472 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.746169614 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.84324569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.822478484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.744619343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.746125082 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.745844197 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.263479199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.747908987 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.752118239 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.743283763 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.746564628 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.827171578 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.746110812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.747499597 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.175598044 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.746481213 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.832140814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.744589335 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.745551438 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.746762249 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.251474723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.746631259 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.746016753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.825853131 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.746304955 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.188100202 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.74395815 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.746942178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.189281713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.827149935 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.774337908 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.756656706 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.750884195 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840216915 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.756408076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.815013568 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.823746208 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.844310747 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.781112609 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.747835652 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.748341314 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.74917692 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.748861659 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.747153057 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.779670762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.746067303 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.753101737 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211204391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.755177249 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.753824636 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.748773014 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.747326202 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.776853332 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.748898055 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.748878895 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.834655057 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.749595443 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.817927206 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263099557 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.232921923 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.747877983 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.748740375 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.751382917 seconds)
  done (took 177.123235074 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.815489345 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.825998152 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.814871496 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.751584378 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.79743383 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.816218916 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.75347463 seconds)
  done (took 14.254732081 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.753496141 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.750377389 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.799820027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801362427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.747719209 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.920953937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.748837598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.762749738 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.753492543 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.776130164 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.750462453 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751263045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.755978972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.746701929 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.802949991 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.760553934 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.866460893 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.75279692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.750699306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899675428 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755918465 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.755793913 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.777099488 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.762873706 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.752586063 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.758989128 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.324799233 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.750308974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.750107641 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.75142389 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.749794335 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.792002891 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.750571061 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.748731345 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752939954 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875166933 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.752416735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752236575 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.751530074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.752336282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.751086018 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.750992404 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.752890584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.751008573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.75019239 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.773638355 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.751459822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.753086467 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.751573423 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.751701934 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.77647087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.752051755 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.750666414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.758157398 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.793287944 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.76046762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.751109395 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.751945018 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.752866939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.75306688 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.900689285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.804911155 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.752672259 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.803770709 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.752521255 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.752068072 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.752772467 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.75126625 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841221225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.754294871 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.803610436 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.750979059 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.923644942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.776861502 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754138947 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.756544281 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.756340658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.752321084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.754238089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.7599938 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.754487091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.753961757 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.759544734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757661974 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753126086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864024546 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894114952 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.754184305 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.75398316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.761337723 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.753402732 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.797809911 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.753324667 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.753299533 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813465366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.87199037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.782208937 seconds)
  done (took 194.279415817 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.760972679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.762712223 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.758422491 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.771771711 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.755798516 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.755810219 seconds)
  done (took 12.249836304 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.756157375 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.758639785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.752073051 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.753320768 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.754985788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.75493552 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.752810956 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.757947577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.759107822 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.7553335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.753579074 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.752965299 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.756750602 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.757063851 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.754817822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.753164585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.756052915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.7571383 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.753602637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75642785 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.019030503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.754904193 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756124791 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.757997298 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.760197483 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.756842352 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768189423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.754652487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.755790212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.762876512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.759900084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.757206294 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.758129836 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.763248946 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.760659357 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.760596554 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760529316 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.75728825 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.757701323 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.757180857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.755057858 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.757612251 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.75614409 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.756843695 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.759103516 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.764023292 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.761203201 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773201109 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.756432512 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.756649531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.757141121 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.756552005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.754891382 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.756745529 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.760300039 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764626281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.760165253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.758367235 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.759572702 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.759705303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.760765228 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.75812413 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.759900866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.761185865 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.763065226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.754586062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.760453191 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.761112889 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.756586639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.757480001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.758150721 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.758016642 seconds)
  done (took 129.527406608 seconds)
done (took 529.134728484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.006166617 seconds)
  done (took 8.692515851 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.766267372 seconds)
  done (took 8.512694027 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.233737727 seconds)
  done (took 9.924827306 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.766579529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.801889285 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.770015571 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.763911493 seconds)
  done (took 28.817321588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.082575135 seconds)
  done (took 8.771279598 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.779530984 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.757105723 seconds)
  done (took 15.296130706 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.842428011 seconds)
  done (took 8.53349362 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.086525264 seconds)
  done (took 8.784356375 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.772392667 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.785282826 seconds)
  done (took 15.269833749 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.758187213 seconds)
  done (took 8.448660058 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.910653535 seconds)
  done (took 9.70115311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.777141845 seconds)
  done (took 8.536782792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.783337457 seconds)
  done (took 8.473589636 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.813999387 seconds)
  done (took 8.503725919 seconds)
done (took 157.95759462 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.759054244 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.756277398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.755868946 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.755129657 seconds)
  done (took 28.716223484 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.788829232 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.808742541 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.791640478 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.801892243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.792444836 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.787704922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.783114084 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.78358222 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800840995 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.792440176 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.791807867 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.792118236 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.788947557 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.782383773 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.792577677 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.792383618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.800214644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.79148051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.783925313 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.793809658 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.758145848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.800451888 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.793035452 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.75883718 seconds)
  done (took 44.642288524 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.949116269 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.824483184 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.911712467 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.827402811 seconds)
  done (took 9.204782143 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.810518143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.810032753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.821686488 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.861934076 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.884811811 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.821468522 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.785243205 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.779927436 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.766625001 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.8112788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.887363749 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.807790403 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.89911441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.759083145 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.944880449 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.75915796 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.759085095 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.812083382 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.862141804 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.875755398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.758562993 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.810425515 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.81513893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.806565147 seconds)
  done (took 45.403344215 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.759894228 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.769888181 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.768089185 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.761740292 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.760762153 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.762265591 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.767572253 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.762695915 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.782721751 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.762616685 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.760709108 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.760516375 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.767366888 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.760941769 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.762634188 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.773440853 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.775677871 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.761056606 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.764692672 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.767590749 seconds)
  done (took 37.005822039 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.75856305 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605630911 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.104821313 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.011065884 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.759442849 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.763098676 seconds)
  done (took 30.696391094 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.774136817 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.766388378 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.762607093 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.818315869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.903798896 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.767673478 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.761807699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.773150541 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.807401356 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.827169522 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.787491589 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.79297698 seconds)
  done (took 23.2374611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.762476937 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.763371336 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.764802947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.774493962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.772467611 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.768342737 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.767663966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.760510349 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.776882316 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.779728229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.769790895 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772599682 seconds)
  done (took 42.931985318 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837705302 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635322953 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231531827 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223779574 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283778008 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963919369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.761524117 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847796807 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.762390205 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033190343 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.107153241 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966440863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003635414 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57079057 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768417893 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240794188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054688443 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979674633 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795687985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441839241 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873558367 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253236728 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.402546543 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.876762376 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965064989 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.884063585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.02351394 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.71176994 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809542051 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764742858 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767255028 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763146317 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032237945 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880994657 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832700275 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765514454 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.176420065 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.466941286 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.774436846 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.399141797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.274555212 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884359498 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766326581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76206909 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.688717948 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265867982 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857263103 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.764305244 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.462523349 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.762724015 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76717309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836191619 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.763721582 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.569100163 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443706668 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.029417371 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.763938029 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764946591 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324413074 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778985527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382080639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.69688603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848156967 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.40330226 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225283859 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.922078863 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.764748516 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764307068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688636888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.396828133 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882781691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89929807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.780052649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404047103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058986414 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.192745808 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822774626 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04181907 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.539413554 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.696724713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979959824 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712278961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69164748 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.594081142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690483046 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980915497 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798203466 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.372167698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802240167 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846122471 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769593909 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778184851 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767142156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982584694 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.663717392 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763143299 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.082902784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029836253 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782017567 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854587593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691150205 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.76526111 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009353274 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.969422135 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983023474 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246870154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859704905 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684175231 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.781250829 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.658020031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.775157251 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.039308885 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831782951 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784137095 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888625498 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.715667546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021963075 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.716451643 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.868246699 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.160857197 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005439802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.111718128 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01309121 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827476944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770595763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771864958 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.476706617 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383759127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981705097 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.779605801 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236631313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.774813409 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.767697345 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700344104 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.387568291 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.171020198 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.855566469 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981893368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.690655435 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044490194 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693844383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90353794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746414409 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.981638065 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.416537729 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.858725294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015924603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969289042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.964813837 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777804088 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781220683 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859880888 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785182505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.16346238 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016023746 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.769409004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.768728819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473894687 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.831021705 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769212318 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.770676784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293619717 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04707049 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792646662 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.770553981 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642579812 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.779421829 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82991211 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770439415 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771308516 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.283718419 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276334432 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.773543449 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.413597248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988326833 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771468636 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.483517215 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959327994 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.782279978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043750497 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836629788 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.695358313 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.468932144 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.470182414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769504349 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696179167 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.769819057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773230089 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774332647 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.956325394 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050236356 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82409849 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.421284123 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.884963877 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775140156 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.771929624 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770676531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.284198943 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807669668 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364853824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.777594547 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899339978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.780888666 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696439938 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.771288113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771805657 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.770380928 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.717517228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81872503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.428125807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981461031 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019058008 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.173953798 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779990949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.420464135 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894732519 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.785680933 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.113576307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391098902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.776822393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840018846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.776771128 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.425410898 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5098511 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335769755 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068045832 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096335339 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133064267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.237466785 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987210393 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859271902 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998052235 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.291773605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82819117 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859609388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706783017 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786343553 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.424194354 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130621396 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785264901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989256145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069086962 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.174302486 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915229432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974701939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801636608 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.534230591 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810494279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.308520047 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789184262 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2097788 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986220048 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853794877 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.110318854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866845557 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.772090498 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128718015 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816524047 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.473736497 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126268313 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.141424935 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.274706034 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005578651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775353089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.210925103 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131075878 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.921054566 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.891426688 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700909527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77847832 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778787521 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786423821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.744405174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.617874419 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.01498053 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778206046 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999897085 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.856007481 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142902616 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.682547634 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.776113243 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773992052 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02551801 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49087408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927264285 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.043880136 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.341282223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785809852 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700826696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699652484 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.475606061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776220715 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739851099 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989589572 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.879856268 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452968453 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107878205 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082219152 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017747222 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.785477564 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051098747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053302862 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.265063658 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794947906 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.872326841 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.111332722 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.47662731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.989546802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001788316 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330965061 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992925764 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238093954 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.751904326 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.774784468 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983083897 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991054469 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.181958617 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959683922 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.48552375 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.78363192 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136126473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839359594 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.19204807 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971962602 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.86106387 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782569069 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851791284 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779861813 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.782602027 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784630801 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786848502 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.198968361 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905766882 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.78789541 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852631508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817322748 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.34743584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.784929917 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054242352 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136522679 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119013878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839886469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.778528556 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786560156 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703766521 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906433957 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216217086 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049463764 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.893660558 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.911401804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797856866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.122286522 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.993517162 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085231944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049399507 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66035025 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444670107 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894873315 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.993982374 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783504159 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.98082637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999320163 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09618217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35271055 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.8935196 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.971638873 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050875079 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142958332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78014754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357958661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.79629279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191323038 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.817212118 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184237103 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044712491 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782311258 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89738063 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782096177 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982785274 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.229287336 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486273601 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134432086 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63880919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783750733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059387378 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114286168 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085067415 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855284904 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784807664 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.471892594 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913236257 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.643877527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.006731701 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78122542 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983276486 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.489636208 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783261201 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060032246 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085453972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.782121644 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.679919393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813543359 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.78434821 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995829749 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999684284 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027686989 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783956601 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783229809 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.588746325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063811639 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842364033 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707222867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.782141623 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826958797 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008826082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798944853 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296113148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.480847579 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073935905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.692145883 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798099763 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146939064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159762965 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120407512 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.302106348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004385419 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340322842 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57865131 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156369528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.784479745 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.141345982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155943058 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.784686613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.241374725 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889111743 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058174661 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106181217 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.800656479 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548470581 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821032255 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996447258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139903204 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712725447 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787294774 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.830322738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.783653926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.765627282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792244656 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.716611862 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.181509175 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.619945156 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339826524 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.785084481 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.869984453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.177809999 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278562199 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886444898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800826129 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792182282 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.476061367 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.069961591 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027352234 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.262163838 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.872659282 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.785687509 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784502125 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703562964 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971658576 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.971057769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076000718 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.088835821 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888103642 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786423154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.991841999 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987256408 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.200791112 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925115836 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.856455988 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891802318 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.72483627 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490151105 seconds)
  done (took 1614.446639237 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89771375 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.805818975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.889934321 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934666078 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974091302 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.887410184 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.946401888 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918154077 seconds)
  done (took 56.972832945 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.783792779 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.944496264 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.788863906 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.785255344 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.835102739 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.786437122 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.944979376 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.796631362 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.789996209 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.789603872 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.785035722 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.785481182 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.065016566 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.804701791 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.785226183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.786197647 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.790122198 seconds)
  done (took 72.870432455 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.789056007 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.022001781 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.816256543 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.789407125 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.775958911 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.805801522 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.838262299 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.843517446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.79143548 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.043591032 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.083499965 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.806729146 seconds)
  done (took 89.126886519 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.797571298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.789191346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.787635633 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.787963381 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.78842352 seconds)
  done (took 10.677610328 seconds)
done (took 2107.648063697 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.017717092 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004053769 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.044395655 seconds)
  done (took 5.769030976 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.927760085 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.980579636 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.091414139 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.097830315 seconds)
  done (took 9.821996085 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.091669901 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.155603434 seconds)
  done (took 5.967249646 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.098144516 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.814057499 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.164754625 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.787947827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.794369595 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.793526883 seconds)
  done (took 22.102361946 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.788778809 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.788152441 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.78725466 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.787844596 seconds)
  done (took 8.872300139 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.786816303 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.481823436 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.788193169 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.802093795 seconds)
  done (took 20.579224456 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.970216295 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.904752207 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.932165575 seconds)
  done (took 7.529339745 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.007784639 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.587851893 seconds)
  done (took 6.31678071 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.949202605 seconds)
  done (took 3.671566155 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.81646625 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.059049857 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.305993962 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.923575272 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.417374451 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.034919747 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.129010017 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.017891543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.236159088 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.266103334 seconds)
  done (took 24.928628622 seconds)
done (took 130.378422233 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.368229755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824499838 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996117495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.157581955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.02984535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995922687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004115959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.152742761 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.846924225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843614035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.183379183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.030601941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957561884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810762963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960631197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.811576076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024899185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.212127824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.871211307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.062992828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.019202076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.798642358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.991179166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.816821019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.030056522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947255999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.342869222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817213435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.980523274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.357878041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953322624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.193789683 seconds)
  done (took 166.118808287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.793992268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.792439343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792812773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.792905168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.345569388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.794475991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.79312899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.793090772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.217197823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.20098434 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.794336693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.342892894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795887656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.793091738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.796128936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.793251322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.374227122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.794255194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.794260362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.792069468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.792493296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.164597823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.794546154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.177759395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.344945425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795408737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793964136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.79368109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793247887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.79231048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793650152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793920619 seconds)
  done (took 206.944683416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.79260891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.794806412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.795580616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.795348923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.796076304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.79629847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795391654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79418354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428804057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.41668574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.794452604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.795718512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.798141987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.794797684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794196167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794545682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.795348042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.79307259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796056752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.795794421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79902373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.535706659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.808773596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.531538027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.796399923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793939875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.795277763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794827007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.795952743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.797221274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.798713447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.795382431 seconds)
  done (took 217.928383099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.043696144 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795745039 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.797333983 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.712990608 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.796919505 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795218582 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.777080113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042398371 seconds)
  done (took 18.491034 seconds)
done (took 611.21879835 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.179597874 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.018643668 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976395744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.820116896 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.059266183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.863998763 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.814901936 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.882487041 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.629285068 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.894870309 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.453274018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.839034736 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.550657673 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.844064264 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.939469695 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.875185131 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.367933301 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.470077705 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.993311412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.880185761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.998673155 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.714815281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.898254917 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.657940597 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.579581324 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.784833541 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.8381488 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.372814663 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.829854485 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.973728326 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.501086577 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.074273994 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832123124 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.815118094 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.869874323 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.85111969 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.021955897 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.829156751 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.941301676 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.507863618 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.876109166 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.535154799 seconds)
  done (took 99.386043874 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.806845713 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.804511806 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.804556521 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.804111569 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.81441898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.804833559 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.803378579 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.804091034 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.803985411 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.804565264 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.805516381 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.817352819 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.803916606 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.812645236 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.803740331 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.803753826 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.805083019 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813779204 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803748227 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804732776 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.804147942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.804575401 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.799315508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.804709685 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.805140538 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.804277163 seconds)
  done (took 48.696037473 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.799144104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.955341729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.045904927 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.820548003 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.800336368 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.803416695 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.818841547 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.804471526 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.803675768 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.802765057 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.903094959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.807386512 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819017381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.043100429 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.81820898 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.801500137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.800501226 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800486454 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.962201071 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.817052991 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.820665982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.80487746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.820371744 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.814271548 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.802172893 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801299198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.803892096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.2374347 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.810182523 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905016596 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.858734194 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.827055318 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.178925046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.052099392 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.858653606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.812198085 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.800298646 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908306196 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.807376608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.802121864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.820200161 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.807562171 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.042848422 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.32938883 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.816870069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.801066502 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.246280622 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.918338142 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.844881364 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.81178628 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045382162 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.820347709 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.803349308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.803996893 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.838988398 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.808266598 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.80275672 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.110997611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.81487843 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.820624294 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806265873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.803294358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.968942386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.81139007 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.955981745 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.812973521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.809529761 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.803762047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.043944491 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820463767 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.334878546 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.817432138 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802804286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.905501225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.961810449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.273929401 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.816222583 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969609117 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.19796097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.829028801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.811519591 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.224737712 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.831638358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.811651372 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.805262151 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.804917657 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.803619566 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.845554493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.819582446 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.247208447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.338638483 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.128060919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.831416576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819593208 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.804941153 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.112540764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812991167 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.803572843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.038422197 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.343024568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.819223995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.810210182 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.319639216 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.820164082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.821985442 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.812851651 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.051025552 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.822258023 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.846666106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.804877584 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.810898965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.807071655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.823103796 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.812840523 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.805364542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.309132536 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.927890194 seconds)
  done (took 224.207320573 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.805510756 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.80761616 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.803890838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.808585561 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.802789947 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.805112782 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.802933421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.804268045 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.805228827 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.832245778 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.803348963 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.805254999 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.805957922 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.804629101 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.811988022 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.806370941 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.406643406 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.804398632 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.803760659 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.804840103 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.442989572 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.809286455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.803558487 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.80449747 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.810307846 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.810792308 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.808660278 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.808214397 seconds)
  done (took 165.57395543 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.806067635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917391302 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.827035724 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.835500721 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.813279245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.806025615 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90352118 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.823348477 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.812346777 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.805831721 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.806789286 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866680061 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.817031122 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.903371633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.838602055 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913020969 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.91046604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.813592978 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.807590967 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.80778851 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.835508856 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.815445215 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.866345034 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929405643 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.824883557 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.919909613 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.828244517 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.808078588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.807349327 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919142093 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.824233519 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.875244144 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.835418035 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.825962281 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925021187 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92685093 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.9187322 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.911813156 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.81395223 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.807795302 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.807722983 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.817005188 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920537284 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.824178482 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.808815174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923030942 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.83003899 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.816909939 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.808740061 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.809134338 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.821873333 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.826070821 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.877692067 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.937410779 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.847737776 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.832196479 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.905903087 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.936058457 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.817020064 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.90603131 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.816335105 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.921497062 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.831287619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.819398428 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.810458717 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.813754407 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.838472694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.915166177 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.924314239 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.815784612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.907695022 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.84528093 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.818748577 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.810290568 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.816866266 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.9228692 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.929352716 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.844719955 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.847782768 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.8458691 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.819311649 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.810121327 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.812191649 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.82640814 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.815255662 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926644094 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.929891759 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.815785677 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.810316451 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.810190993 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.811207284 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.834985352 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.930519059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.849311242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.916539985 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.875802469 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.885934199 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.822955983 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.823834416 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.815942464 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.872955435 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824220015 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.822707523 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.102049643 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870863391 seconds)
  done (took 196.401759245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.177550504 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.859888817 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867184679 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.117631395 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.172516367 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.777986303 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.859102756 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.860067866 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.881407621 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.04311665 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.93275493 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.878410846 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.845785757 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.832263472 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.858016714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.886799046 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.865451173 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.201961311 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079153655 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.974652309 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.855388257 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.159205341 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.17317863 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.428891059 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.915658284 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.255067909 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.42638906 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.991664879 seconds)
  done (took 59.927826347 seconds)
done (took 795.926355945 seconds)
SAVING RESULT...
DONE!
