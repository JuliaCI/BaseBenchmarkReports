cset: moving following pidspec: 7808
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.248340108 seconds)
loading group "string"... done (took 0.648071223 seconds)
loading group "linalg"... done (took 7.182736952 seconds)
loading group "parallel"... done (took 0.156393036 seconds)
loading group "find"... done (took 1.079824689 seconds)
loading group "tuple"... done (took 1.685772867 seconds)
loading group "dates"... done (took 1.167458545 seconds)
loading group "micro"... done (took 0.220709933 seconds)
loading group "io"... done (took 0.98253986 seconds)
loading group "scalar"... done (took 36.327538049 seconds)
loading group "sparse"... done (took 10.847265968 seconds)
loading group "broadcast"... done (took 0.910800738 seconds)
loading group "union"... done (took 11.777658539 seconds)
loading group "simd"... done (took 4.128202392 seconds)
loading group "random"... done (took 8.497516586 seconds)
loading group "problem"... done (took 1.854618024 seconds)
loading group "array"... done (took 19.798954111 seconds)
loading group "misc"... done (took 1.670103973 seconds)
loading group "sort"... done (took 3.074648846 seconds)
loading group "collection"... done (took 16.574993192 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48499959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121633212 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113844543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117772482 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140897057 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114542057 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122436352 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083667194 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.781614596 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146646242 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118382939 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412358307 seconds)
done (took 4.946714428 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176046233 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083783217 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081051175 seconds)
  done (took 1.30874577 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065734445 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122191121 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06632292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066577094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066369668 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065932873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065476186 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065688491 seconds)
  done (took 1.651586972 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073595949 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067836291 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068720634 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068105917 seconds)
  done (took 1.413245341 seconds)
done (took 5.77084458 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764378207 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20044716 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183581043 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394338832 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127681257 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15293132 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63880105 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.295641994 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181780861 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080858546 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102167942 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315723759 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106951496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636585673 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075778783 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089119633 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13774502 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421976087 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066659707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081995817 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088525264 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128036942 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0868646 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073968669 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142589562 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067645024 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129906508 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080036632 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066176801 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206499189 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172033988 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676976383 seconds)
  done (took 10.145428866 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097670074 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096714292 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068597204 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136007381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095356263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069015203 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070662541 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06708044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086331039 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126897558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08860037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100510844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06531881 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068294214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083760784 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203408755 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081964843 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081091621 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069986727 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074894193 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115866054 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077813288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077570984 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07683746 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127927611 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17938681 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097150947 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097147677 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068844336 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079676352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11530107 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125259064 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064794138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065606465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123297171 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093846243 seconds)
  done (took 4.597803407 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.935822708 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139302475 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090487137 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165991378 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067256454 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10599434 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064880311 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083497289 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198167046 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353459429 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569004861 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110297013 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100383945 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066850389 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068039044 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066095917 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340977053 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119996644 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112275557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082569234 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072987579 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06834141 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340999417 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06785481 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065709376 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067769332 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057298334 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111097915 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067389228 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917288233 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124790055 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066862299 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100942609 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167517035 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086801639 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272404243 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066174894 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084292533 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065142113 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148475622 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074326062 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066056087 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083983204 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102561298 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112125972 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069132876 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066786026 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161683462 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066190089 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082673944 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984389185 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152938743 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076427567 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066587966 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091149658 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245970695 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085271364 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066373976 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064611107 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179365911 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131682083 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067305878 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065810327 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065328626 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069112861 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348849687 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066273559 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717838369 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068695551 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076714944 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068899399 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066589229 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063434208 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072799276 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071851864 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085110325 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065538814 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063253063 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065069516 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065529677 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067297745 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074939996 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083865028 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.359940356 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066231902 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067799229 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064545948 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085325292 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100687381 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068551164 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065033751 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.202218739 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06945898 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067663183 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10499775 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067239745 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.0836502 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069083495 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1134424 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065882777 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094975604 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067289193 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095997635 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068904117 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09887871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08047378 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067699174 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398669011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065234578 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065205891 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067339426 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067734706 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067252219 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067868376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079865249 seconds)
  done (took 20.911522847 seconds)
done (took 37.725454835 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270877004 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075038339 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074642731 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074092926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074285462 seconds)
  done (took 1.801906051 seconds)
done (took 3.016064357 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120991576 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098276811 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064101494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095858366 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063854109 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099165754 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09848102 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080224588 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098231605 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06376038 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095889467 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064145395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063816999 seconds)
  done (took 2.343431962 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084064987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08268835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069750872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082655046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063994884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08165845 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079970099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08776323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080114791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072023117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063398445 seconds)
  done (took 2.05751362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083827192 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083122305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069352084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081220034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063505517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081250406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080431734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084429718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081081333 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072867994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063551967 seconds)
  done (took 2.047186762 seconds)
done (took 7.653978463 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078791706 seconds)
  done (took 1.273236331 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582562917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.04544528 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080485605 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111758521 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183489192 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117704317 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275686464 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085725779 seconds)
  done (took 8.861399894 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088675969 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081702767 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072023883 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068591175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070258857 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067801084 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069542521 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068589055 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068691287 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071239566 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06802528 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070054148 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0709233 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070313872 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067813841 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070801289 seconds)
  done (took 2.416092225 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09109966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089979582 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073222024 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073867791 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071526378 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071569699 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073737121 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072914879 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070064694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071734452 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07415566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07295561 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070974634 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064259833 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073873417 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074962665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070153261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073475346 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074454417 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074021569 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073848088 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063823612 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07072023 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073242464 seconds)
  done (took 3.070879015 seconds)
done (took 16.828105262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114113628 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071003514 seconds)
  done (took 1.386399512 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082649648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081735779 seconds)
  done (took 1.375668779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082717012 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065353814 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088572621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077326122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065889392 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065226437 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08613695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066228512 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065631535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066094163 seconds)
  done (took 1.941730856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069724318 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077538762 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069815079 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080610535 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073070338 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063638697 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071769829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067258104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077236181 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062636283 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070062206 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081217634 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070478036 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08253151 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071945498 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067503179 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06970364 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066819526 seconds)
  done (took 2.509226651 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067683122 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067042058 seconds)
  done (took 1.355278674 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068860741 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063498807 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06602032 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065875005 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063161623 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062013279 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063076844 seconds)
  done (took 1.66743333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384865445 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109361667 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291694147 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070321008 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080791476 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24884551 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065145873 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069886759 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069810046 seconds)
  done (took 2.6508227 seconds)
done (took 14.105677702 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080190371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085291373 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093836778 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.342882429 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091416687 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065535056 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113272456 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187359247 seconds)
done (took 2.294218194 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213147659 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612642186 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378889507 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193460245 seconds)
  done (took 2.405683767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328108315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08614174 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058771033 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066106579 seconds)
  done (took 1.767915962 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067973136 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068617018 seconds)
  done (took 1.363135502 seconds)
done (took 6.978825246 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067784423 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066201492 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06347847 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067701558 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06340806 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063297537 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087193391 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064911303 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065440804 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065509775 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068085377 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065277248 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065198614 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062875805 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062671137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065163889 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066059845 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063234745 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06290789 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063090456 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065387193 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065206541 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063282499 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062731115 seconds)
  done (took 2.834446698 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085065648 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067798753 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071253637 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070662315 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069350298 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071153663 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070327617 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065771882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070774327 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067553672 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069543542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069435454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067515073 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069698024 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067349708 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069480127 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070564297 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067069282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06778152 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069678032 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070171076 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06604614 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06926088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070887882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069091775 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06902591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067622981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066009987 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070768677 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06907578 seconds)
  done (took 3.322249406 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071937442 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064229858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064331352 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070642251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063501774 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065219196 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062756883 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06341546 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064318353 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063079759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064083656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063058748 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063373754 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063856008 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064139773 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067315849 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078115913 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063163935 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063237311 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063874224 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06642869 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06350766 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063224323 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063428165 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062998953 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062731757 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06370628 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063294335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063837213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063038178 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066259711 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06683324 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063064778 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069903607 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066833541 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062718859 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066756913 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062769002 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063909751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062777886 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06274623 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062792949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063758858 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070037338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062786173 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064556013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063182234 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064220368 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.17562286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065500894 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062862855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063217344 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064488307 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064178304 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066678339 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062563519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063788634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062392743 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064188803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062456171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062185838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062571071 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064909593 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063172397 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07724891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06931513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063222149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064095739 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063612709 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065200799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06414279 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075876137 seconds)
  done (took 6.021845984 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093049693 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086797566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065071332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064779683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061501984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063565366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066957802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063500874 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065183813 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069286591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063948112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064969409 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064859566 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076329854 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063816377 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064894537 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0692433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061622584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063169663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06668347 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063721732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066724004 seconds)
  done (took 2.740149493 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156460428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069820815 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10512538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072105805 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066979398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072235116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068740131 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069438634 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069450823 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067870144 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067536261 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06926872 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067106574 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067189221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067192075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067801751 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069539545 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067744008 seconds)
  done (took 2.607976411 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077897881 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065569287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086013601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065910239 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065720106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067856148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07042176 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073643329 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067734587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065758992 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073732842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067867721 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067781142 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06573281 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067938358 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065525808 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067754761 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065092686 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073723207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070024154 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07008063 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073369882 seconds)
  done (took 2.783098857 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08155376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06733254 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082147048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068808325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061648268 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06388394 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069626782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065657479 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069518904 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067134278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065674719 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063984816 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068555883 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065266828 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069010396 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06567046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067235541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065176856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067144767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061175144 seconds)
  done (took 2.606257531 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088343621 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067533814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067570774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075536419 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066860995 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067035101 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074962729 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067212373 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066831651 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086082086 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066309362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066533653 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074101948 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071417076 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066306478 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073987458 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073900582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073628745 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066761752 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066585528 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086083668 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066376517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074007773 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066923441 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066329468 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066793074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066429965 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071120697 seconds)
  done (took 3.240737 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067599971 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065844175 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063159394 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063590204 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063268084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063228312 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062540031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062634541 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06546148 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063039355 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065186433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06548302 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065560342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065270801 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065561694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065399608 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065079576 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062623652 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06273773 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0627838 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065255518 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065347779 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064887198 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062846414 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062730158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06505815 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062608534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062578902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065202208 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062783314 seconds)
  done (took 3.179524823 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076885802 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072444093 seconds)
  done (took 1.403433994 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065310373 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080612217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062808998 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069030499 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069353501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066039855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072236018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068847281 seconds)
  done (took 1.804378441 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083629411 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077006185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067226412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080027748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075904697 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081883275 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131362249 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066496859 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072157376 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063898935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079203213 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064598442 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071652527 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066206691 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071168978 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071860311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063245976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07147743 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068219837 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064585376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066561908 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074545802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067627468 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060709478 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06642288 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087053312 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07616322 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065185675 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068628594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073109654 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071069707 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059769267 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065433186 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066610477 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063504036 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07465437 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079956824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068309527 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074051257 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066389198 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075594081 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060883496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070179986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072111224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075589847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065832435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066107666 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060523473 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063004335 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067784383 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060672577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065711587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060382389 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075219835 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069022371 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075777253 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064811151 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067286221 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068542309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068714643 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072184025 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067512942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06787913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065253872 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072377299 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070541382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074727202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06085965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059864179 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06402912 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07509589 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088586416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072016605 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066159638 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066214271 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063286514 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068613592 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066689648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071130473 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071658509 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065553474 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071100376 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072370365 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065853607 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067939525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073755354 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06381726 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068663553 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063606477 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081288603 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064503492 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063664873 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063370097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075438755 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068904512 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065798591 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063560762 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072279294 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059662401 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066002622 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066296993 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066387947 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074891655 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068352162 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069643367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07296284 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071996174 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064687479 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067630477 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061434988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065432711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063967141 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071472394 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058768407 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067403288 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0657131 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064984446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197427153 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065284798 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067012468 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075110384 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072028036 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065372786 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063605293 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068475136 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065633553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069521334 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073737471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06490186 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061879296 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061312827 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069342237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066478317 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070440535 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071807591 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069537684 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060563699 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064047624 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071118842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074863563 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066977982 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067499658 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072522298 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067776173 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065670388 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072843938 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068838907 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065967109 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072382277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067268883 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061554204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069548086 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069128618 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064709274 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070997047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070434544 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068983387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067268242 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065434433 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073972735 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067091621 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065460717 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066861641 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064891612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076409958 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067546603 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061702756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063140743 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074470203 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064873016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066124925 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065274411 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068173089 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067041435 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063667144 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066046759 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068490464 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07655196 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070256182 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066993102 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071446049 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077550019 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065630392 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06848816 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065360717 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067056132 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066269106 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074654227 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071451309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071067535 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068673101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062677686 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071751625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073167395 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065346167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063660197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065430096 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070169777 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071797028 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069976193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066207851 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063663453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066636014 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068879518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068149656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065076615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065157368 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072340882 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064129907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072671808 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066499007 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076125859 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069130706 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061121067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068887747 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063891911 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071907421 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061102083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063689393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064781095 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066930002 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064489108 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067987825 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059921182 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072539507 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072218083 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064632795 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063644225 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064212327 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070943828 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065877097 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06778396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067490741 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070091135 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074611713 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063700848 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06765995 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074108287 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064360532 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187003133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072145876 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064701823 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065210347 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064755874 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065141903 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069146634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075806551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072829396 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060587693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068845673 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064584841 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065360936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061427685 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070945123 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069338859 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067832729 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072792891 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067050649 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067048268 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070275938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066211941 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067549197 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067040509 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069205514 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066801738 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068153954 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066330861 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068723222 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065582585 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064975162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067908939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066047691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066469909 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071995925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066249952 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066616298 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068825606 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06730541 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067548958 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066665135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065575086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069933362 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067208591 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06638501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068751771 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062018904 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073385432 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065516947 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073768876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066717887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063359502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073013059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068495186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071899823 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067057253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067364784 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066938146 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06599404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069584399 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073099082 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064603316 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07684356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073957129 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066827839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068823361 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06674726 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068259454 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065276515 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06711145 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066426293 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066289269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066268231 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070347836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068620007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065582741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067966716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066516622 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065961271 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066423088 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060393595 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064622003 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065135668 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065276991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074601726 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06581567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065698795 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064626303 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06701974 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064950078 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062850995 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074119876 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075241928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06663579 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072951976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065323906 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067407709 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076073383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060209244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064027076 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064031782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063571932 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072908448 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066429574 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074568239 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066031118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065302714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06280423 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066029482 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064213831 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059773523 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062974764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068214106 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06351157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06343235 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064477514 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066672528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064847863 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073463312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063514052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06512076 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064246251 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061461648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063484659 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063851797 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199024808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06727851 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065073192 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063709723 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065334116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067016875 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067709135 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066188233 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067555892 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075670133 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066622094 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06944114 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070197798 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061582019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068584242 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066173714 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066577433 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065387216 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069711825 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069885542 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06754547 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075591748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066136162 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067867698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066789557 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064729957 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066285743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065941225 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06665924 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065853395 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067776162 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07450636 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064422298 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068683735 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067072174 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066351604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073133488 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067229858 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069505777 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072620166 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066617557 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068422288 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074375514 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070319792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069083237 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067819141 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068385903 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072357161 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065561207 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072944305 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066364869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066589622 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067525971 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064076335 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066253374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065933113 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065772844 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072363304 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06721991 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065279044 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065606756 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064318679 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066731733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068859105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073985445 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068544331 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06912012 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061385464 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063032901 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067335437 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063822543 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068361192 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068137149 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072081456 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06881737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066707199 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065285255 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074405733 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071585038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069668343 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063960662 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06990734 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066637678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068124658 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067141142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066352898 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067524384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069964419 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067554471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065308444 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073188032 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069693678 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067248264 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067838383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067275331 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066600728 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061722602 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066950525 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068232105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071107249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068256209 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066013101 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076606922 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063670293 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066443489 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069601366 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065375568 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070964213 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061333314 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067901047 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066665751 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065970371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060522306 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064798284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063487366 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067208181 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064046579 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060331617 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074610745 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073449547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067607399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063770127 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064115127 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060270275 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06004991 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195308203 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069125896 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069393682 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077344215 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066071122 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065311414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062572329 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066610643 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0696359 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070237864 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063706172 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061773637 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065529108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06949056 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071983721 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065467828 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066596686 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069554366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068623872 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064407377 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070585124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064113778 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069962863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079396073 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067441032 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067552102 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073003451 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07515859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067165812 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061659498 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067150359 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069687392 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067203762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068098514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067389982 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081449246 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069812379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065921557 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06513917 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069131438 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065317728 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074472739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066881086 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06702812 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070853355 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069169298 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075934882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069838384 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07493841 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069703285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069783324 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065269304 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066877318 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064391986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065897793 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067199038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06730584 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072083658 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073975875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065725615 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077030841 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075271743 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068902571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063464631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066103046 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066020557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061327417 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06776278 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064819218 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06487755 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064652799 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065397322 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066854183 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071690769 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067202915 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067169006 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0664633 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060313185 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067923905 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068720298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06694509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06311124 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066067374 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066505436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070341723 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069099772 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063920964 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067319644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067469217 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066631412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061505779 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071996322 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064683094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067720595 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065071502 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065581729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066596784 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069346854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070270135 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06668916 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068005596 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069950868 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068077206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063388925 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063628539 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071280091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063681951 seconds)
  done (took 42.303891413 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104494444 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063929669 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062272652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060928407 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073458403 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062640019 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061308849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062493808 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063010694 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064719423 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061553292 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061807418 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070141857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077501062 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073823519 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066203941 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06193735 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062926299 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061486527 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06261747 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069954792 seconds)
  done (took 2.760513854 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076080473 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06999626 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072402419 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07532329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066378142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070326812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072397543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070410877 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075738931 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066955413 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075532588 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070797254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066519439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066760355 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075354803 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070354611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075436727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066911061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070006739 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071707831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070327537 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071785942 seconds)
  done (took 2.895424488 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069266821 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066188657 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068099903 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061231535 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066021274 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061278842 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069020684 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063510506 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068523911 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06475442 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06475349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064221167 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067317446 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060587501 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065263441 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06372019 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106987863 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068558592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065102495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066476608 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06085786 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067707358 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061211195 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061359382 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064632462 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068915075 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066262117 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063544382 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065057578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06495467 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065242926 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063391826 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0672639 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066095167 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064975691 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064543981 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065199584 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065304018 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060918162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06346107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065627201 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061457727 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065418072 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066324931 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063566734 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063390285 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066516732 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064899003 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060275047 seconds)
  done (took 4.550820111 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082383234 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10825758 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067446961 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087834943 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079537309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075320811 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068868716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088829688 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063044023 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064003766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080399419 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078912924 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065323498 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069689424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068741271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065403107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06623513 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064205709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0690051 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064666185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068985872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072002292 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079121883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077736827 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068806943 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064153854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064479424 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069336028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077020371 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069425096 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070083628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070072739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079185437 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070479505 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064356339 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067135426 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080569219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065185986 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067212322 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062523457 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067214875 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069369956 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071352443 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080628632 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065091979 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069861119 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064899946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06212973 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077640927 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067372554 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072298506 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07888341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068574957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065109847 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069166108 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079507542 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065059782 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063112383 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067642043 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076622117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062963028 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068359734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078124023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06665257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071567689 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078306559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069837525 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068053714 seconds)
  done (took 6.316885276 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076567195 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072806261 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079493056 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079170275 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071402601 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071565309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071352943 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071181849 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07111387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075820957 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071509369 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091956921 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067218497 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073597485 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071432851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071729339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071498246 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071442354 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071517999 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071394831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071737559 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078572368 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071728197 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079082967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0973635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066833782 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071686556 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071662314 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079178613 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071829626 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078495197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071524397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071413393 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079281068 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078625179 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071009236 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065111482 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07116644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071480448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071479647 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066558212 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079248509 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071142166 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066526497 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071616838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071272364 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078960653 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078123892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07379605 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075487458 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07118034 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078875254 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070966839 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071558875 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079142887 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103792931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07886724 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079274417 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071882488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078677793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078600155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084681391 seconds)
  done (took 5.995868094 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085457304 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075754444 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075896736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060726343 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063847939 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069114768 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063462055 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064033248 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073514706 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073979122 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075712382 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06905118 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071638099 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075918187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068924456 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071846845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069298959 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068698354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073338234 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069273853 seconds)
  done (took 2.770721132 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076350879 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084414442 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066999552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071342486 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068447762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070817005 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067655753 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068201279 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066470456 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068454865 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074932965 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074740856 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066741024 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071228901 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074711376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070822727 seconds)
  done (took 2.4833324 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076338893 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073028479 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079018273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066017941 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063538223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062144529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065003906 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060788741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062010726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076683306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065105691 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067792992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065253281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063812075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062254958 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068442717 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062262316 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062738239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065168831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077012439 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075621086 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063783348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06597567 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065497596 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065073733 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070080183 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064917342 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063137158 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062875358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065548754 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065732481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068669571 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062881095 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063299061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064106863 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06275732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064986967 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065508131 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06840999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065008659 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063619384 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064713771 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06506305 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066501508 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061393562 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065576829 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061206343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0670896 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063243316 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065267007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06485113 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067592603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065777103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071718256 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067942912 seconds)
  done (took 4.982386423 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081460417 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071120648 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06103594 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063695314 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068382763 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066972286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068974634 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06695381 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067418566 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063255832 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067115638 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068207755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066754583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0690356 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067154497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068876826 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061236473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066834656 seconds)
  done (took 2.568276134 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072519828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066669557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0723543 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06573321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0648449 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067663399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061862524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063675801 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064055303 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065595031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065568518 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067560327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064204766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067861922 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065614465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065198727 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067717419 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063981129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065094338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061398295 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067339264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063492212 seconds)
  done (took 2.802265419 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073602471 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092871583 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136531843 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083240219 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080307162 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077809321 seconds)
  done (took 1.89767442 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092813838 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079351352 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066326743 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087406031 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073240409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066524193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066460583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066801274 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075318504 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075277302 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066830305 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075366328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075577805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0747198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072419122 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072211703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06727292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066816078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065828323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083539353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067346803 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075141733 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067280425 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066803238 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067013843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074855339 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075289053 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075505089 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066542744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075276169 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072681121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067332136 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075323297 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075610558 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068601091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075201662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067166639 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083638301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072733129 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074756132 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068805677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073203851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075514448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071804759 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076161194 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067322516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071952442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066872929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067401289 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085414189 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072988987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074239772 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073142369 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075397024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07536662 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084977984 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075146405 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074360491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072629004 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077441979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074302267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072476918 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074216034 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074861543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072660043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074784842 seconds)
  done (took 6.193783009 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084156545 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08609891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067427992 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076562066 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074574924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067142594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067089553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067159633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067305305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067042137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106667923 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067451592 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074901492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074855203 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067394111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067161719 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067287403 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074974354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066972359 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085777954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067328752 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074463558 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074875254 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074495656 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075408905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073104882 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067444001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067189007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067405959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067158617 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071773561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067027076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074991527 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06685805 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075007918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06722115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067662703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071655549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06733919 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07301413 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074948922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082963751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066881512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066774682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075444853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066910917 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067012846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066778442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066972278 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066860295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075677305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075915055 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075748112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074796441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06715508 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067015886 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066963401 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066911809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066956654 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071991086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074489372 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067087081 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084702741 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066845794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0666672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074720851 seconds)
  done (took 6.108163963 seconds)
done (took 128.398919678 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186391811 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169788146 seconds)
  done (took 1.702845692 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070463622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098011338 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076818797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128456453 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066071597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099758129 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099023494 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077610578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065893951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066062615 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065819593 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068233985 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131380139 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066148905 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065766736 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068589393 seconds)
  done (took 2.675670246 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.0997267 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15702344 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099727599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064749322 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097004203 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072934344 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064612414 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07429793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070757882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065107152 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072535349 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070218654 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065097358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070212339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071222427 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072498769 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06468241 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07278537 seconds)
  done (took 2.791119151 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104499799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091079625 seconds)
  done (took 1.563420668 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159008751 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106148521 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149851414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344104036 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165779318 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229799568 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126876942 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12631718 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116421437 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122839704 seconds)
  done (took 3.009250255 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101610686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149926273 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255713612 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114842769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072223285 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094403796 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115718482 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077601339 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080646478 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079762554 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079604057 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07605089 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098144474 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073249965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0729336 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075284221 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101899739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071744516 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073841329 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076348513 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098876142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065456102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072946273 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072046155 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076462904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076995759 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065319638 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065444553 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076247534 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073803304 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076335771 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092603794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076821639 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106429872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069953339 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10755374 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076015155 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073273249 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074053524 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073314207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078079573 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07816598 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071975017 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075435387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065118025 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076077862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065043988 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064837615 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077795948 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066680616 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077630649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076469993 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106154672 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066450076 seconds)
  done (took 5.951242559 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103929227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104868749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07129911 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10877907 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09718103 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071582604 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10051915 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091296689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101914892 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092221991 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088849319 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070453051 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0814639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082667321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109139834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101470455 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094803732 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070433064 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101614876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102178068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068261827 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094447374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090851458 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101457864 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066828649 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069965477 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067751533 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070231851 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076704074 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077895604 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069977123 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101593335 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083903524 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077936869 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067232994 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067629029 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067697223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07889015 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096736691 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078358861 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07717665 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067151829 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067127573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06932696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090139106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067127644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078070465 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079492986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078584537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069244464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06982107 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067640933 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069142694 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079421074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077123944 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080228832 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079256155 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067932356 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068159171 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071208756 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08003421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078588592 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078661912 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092263668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078789149 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06776357 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079575518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084242001 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068193708 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069168921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068375069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06921549 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069275537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077970123 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077694622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069841502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069379106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067987354 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079409556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078102811 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067619965 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076566674 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067254822 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067880375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069815089 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069794125 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077469113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079092687 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06931486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067802939 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068801657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067899655 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066140687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075370139 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077526147 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076676083 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076638616 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067906822 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077040305 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076437586 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068513971 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076986213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197127183 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071471009 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070191352 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08075246 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077375536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079494124 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069705085 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068119433 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078856335 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081142444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068698163 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078165243 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081384916 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07894862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06783375 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081815488 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068152821 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079405268 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069939665 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080008354 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068367972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079710906 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06931952 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068654825 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068725807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079273791 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070811803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067847717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069541717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070453157 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079911363 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082618868 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070923513 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081129463 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079248691 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070731202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078872496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069265856 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080250475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070314358 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069625048 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068192958 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082209245 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068812172 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068816471 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069479275 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081045043 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068391209 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080709662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078568343 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067962778 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081937253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08122359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078219124 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080086708 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069831205 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06822423 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068687056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069638316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078291149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079823386 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070705794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068429156 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078427298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079157004 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066943202 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077500812 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077676644 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078286033 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068607364 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069545164 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079454512 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080354869 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077484214 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077514094 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07799919 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067966931 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076774863 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078319345 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067567639 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083489102 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068113581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081650201 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079017656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076266135 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078555748 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080272049 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080074638 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079581352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082479925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067757072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067910359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079130731 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06810546 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069139401 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076982253 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068991687 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068408111 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081158529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066870809 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077774193 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066333619 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076368097 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065694813 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068305568 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080681259 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066808633 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068472416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077428469 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068316883 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075564652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078799983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07601628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066146992 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068109258 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076943366 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076196368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066373307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066404687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068494576 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075594366 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074444048 seconds)
  done (took 18.557061904 seconds)
done (took 37.625628537 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222951849 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151734808 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.204274986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119641785 seconds)
  done (took 2.178790165 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.126177454 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101406305 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095229826 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065607176 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101261527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065204251 seconds)
  done (took 1.965125798 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316220518 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210816088 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181729592 seconds)
  done (took 2.119055759 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202746552 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18750952 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398253568 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254537402 seconds)
  done (took 2.564533806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146624385 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089434282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067009517 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083337904 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133964793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16016574 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100804614 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125828595 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078199114 seconds)
  done (took 2.454396073 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144440222 seconds)
done (took 12.881984331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.165826756 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147303149 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141954326 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.217302644 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191411306 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108663956 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139821199 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18863021 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10843852 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198956613 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090469318 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220951654 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076844331 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077711802 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.150970456 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.083259503 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072978434 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106070382 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.165327453 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107182257 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091250113 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052883531 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072695785 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075139512 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071372707 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088274636 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230938445 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.209730552 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095650663 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102569537 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072988335 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078648032 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069089272 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062729605 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180655422 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078021455 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071482181 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194571775 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075893083 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155479007 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.150972278 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150103658 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094631275 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063818504 seconds)
    (45/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099125442 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066271382 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.120062734 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186615325 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113906353 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081242406 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152016885 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072340634 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065452716 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090878671 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080613951 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054404312 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.161399324 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09859681 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.165176965 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.204291618 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066773789 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156209256 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.159070784 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077198381 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067265413 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168337991 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108340939 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06614 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148157993 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176040498 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071259229 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072645964 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050640319 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060212549 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157323615 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173097407 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087167221 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076241569 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052125503 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068880627 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.21840849 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.189721078 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091505639 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096766549 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183095071 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.149169759 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072434856 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051721472 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072699271 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091789338 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067098356 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115195739 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086621062 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105730165 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076705348 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110307454 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076312267 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065519748 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089802822 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151217326 seconds)
    (101/309) benchmarking ("sort", Float64, false)...
    done (took 0.12602433 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065708967 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.199812802 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073199638 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095584197 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100657813 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110685924 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073046158 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071988635 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054552214 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066194584 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073294837 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.352386464 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073160376 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066536295 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052469212 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061117411 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076735846 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073648833 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133139135 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06800888 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134450708 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108729423 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136875276 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06849565 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052834713 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065221518 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118718443 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074164807 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089438725 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072913851 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071349951 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050952983 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150138045 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051130064 seconds)
    (136/309) benchmarking ("sort", Float32, false)...
    done (took 0.126022375 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159427559 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165955289 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.13309133 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073635987 seconds)
    (141/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050971667 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065223695 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071328178 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103144032 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067305507 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109823136 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070077521 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071246799 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071652673 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091791468 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071667543 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16624864 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06380817 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05260544 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138105545 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050994813 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087413663 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064586488 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071762 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052695509 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096258294 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073027634 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074899399 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052791205 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.10762124 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070248498 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061337687 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051259953 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074818515 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091443432 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071717412 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050756126 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150427199 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067429798 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064705495 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076531926 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05105919 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075053041 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066406885 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051315332 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169539225 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071809372 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088841999 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095543617 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071426195 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065022334 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06452764 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078878981 seconds)
    (189/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060631953 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051892661 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067866375 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084658489 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051288835 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071054864 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070085398 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0737762 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051401336 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070637837 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083685086 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050349056 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071776514 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051633599 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073308967 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184603857 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065120081 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070492628 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05040647 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072382779 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05148715 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050951618 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064902841 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062212159 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.096702531 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063497674 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.063603947 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072145175 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146976209 seconds)
    (218/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049949151 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087069894 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050910405 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073137541 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071456483 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064095639 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093369555 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18281109 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06352242 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139529807 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051036531 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067068132 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049784355 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049855677 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106090264 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068764243 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085392525 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147792697 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050952484 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063806225 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050090959 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062472212 seconds)
    (240/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.07681513 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086144166 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171903567 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087495841 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050345575 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052473917 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050919506 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07713472 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.127824925 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051054844 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049586552 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06287675 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052527949 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060764321 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066884173 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050669799 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060578277 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071144326 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 0.132795019 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051372818 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062545997 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069561369 seconds)
    (262/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104018732 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050057979 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.062721755 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068843986 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06309425 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084462758 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129393009 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051427322 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069006292 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049572626 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070139104 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.083949769 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062786552 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064318009 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065810628 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049692908 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067233004 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050235908 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051722907 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170900608 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115360994 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075791578 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063929276 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071058954 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061961705 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064389383 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061735761 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050331365 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070615699 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064483821 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 0.17732576 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070864323 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049529866 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068852571 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050364895 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105721391 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063134054 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165557531 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050215031 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075320225 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064435892 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.083473048 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06853277 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086776448 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062459172 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064407427 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065627021 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063487599 seconds)
  done (took 30.08443619 seconds)
done (took 31.503964571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093438474 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093203279 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076040257 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093740648 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081538745 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077808354 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073952131 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079674242 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081353255 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083268483 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079476735 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056321406 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075716872 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075138067 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075343288 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091980482 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079134273 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073326119 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07373219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065421453 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073450177 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06622655 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067904066 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055508526 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078838923 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07222948 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072784614 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074554292 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06640849 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066294873 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069542041 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073461958 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066213484 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078261956 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072389066 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073497148 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074779523 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076514796 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06793486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066089109 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074018886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066415888 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072774951 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073568589 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072486087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071359067 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072787632 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077258137 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091154182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068038106 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074981053 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07640781 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076763258 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072794703 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069241519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072609971 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071049404 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091420566 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073166836 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067913549 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073692532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07402069 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071230167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072820858 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073274519 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075408896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075800943 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071469987 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074510347 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071606108 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066043926 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07403952 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06922595 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065476385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075919685 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076590995 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064458566 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072196918 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072879596 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071658719 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065534337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067514561 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067521222 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071978674 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06806831 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054761603 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0689552 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071074402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065016353 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073974806 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07234163 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072614701 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067372034 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075975705 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065487228 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071122801 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066051008 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06546238 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067059029 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068883254 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065363504 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067402962 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074063892 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066494 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071752047 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079153603 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06564584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071315315 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064677563 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064495898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079428608 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075204731 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065731491 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068131294 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064777216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072618471 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064881519 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065488804 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065602632 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065695748 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071119949 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065415103 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06724444 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072455918 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077437604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064936671 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068469172 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067233524 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065324292 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070491274 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065232215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065066717 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202467065 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062070328 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067059395 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065953418 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07245714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067551394 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073068293 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067384639 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074218542 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069743304 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070994467 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070471839 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064541233 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058839568 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067781089 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068217955 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067642941 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066102355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067413896 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065580862 seconds)
done (took 12.680260621 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069002158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141981702 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097914843 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095040157 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085175924 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06685654 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075485625 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101398507 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067228113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101474718 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086655854 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084356643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111453486 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064247057 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065560611 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069443678 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066590221 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081127414 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100098725 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085889949 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108445427 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065331613 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093704835 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089119759 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086286764 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100670557 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066072847 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069066847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069199559 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090421101 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085959661 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069660821 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066343049 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099484562 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09173225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082465354 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066352397 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082142105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066392953 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06584108 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080562564 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097523079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079655297 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079824442 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070059048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069089026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06716799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082825579 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088536225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078313784 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086365035 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102869252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068270438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065735754 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064474898 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085008671 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065271586 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068650587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065983399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067763183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065674718 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068731303 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080798566 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086652638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069598729 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080265666 seconds)
  done (took 6.836016624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085746785 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090601933 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082821858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082832028 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066272441 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066021813 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066468297 seconds)
  done (took 2.10438259 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069262095 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087611166 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089245797 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089419566 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083668643 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086395583 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075608461 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066156291 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079968183 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067456629 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086771365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101568727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06686741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072091428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090159796 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066619188 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089602338 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066884596 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069391854 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09015493 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068083186 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081548278 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069804847 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066848731 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080636321 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066682734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112018025 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070348393 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067902964 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069483264 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064509442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106033538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080317606 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075709294 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066597312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080495791 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081288898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064783842 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082553673 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071532197 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080020444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066989868 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067275583 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064350738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070889083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077078945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067026061 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066604804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068684932 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085879267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066554653 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079435973 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070870216 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068568609 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06803653 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069957671 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076085586 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066700953 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085635993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067852394 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08322311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082165102 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080091996 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081836456 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068279528 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079396056 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079530038 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0686867 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067890382 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069292693 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082258238 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064535996 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0675688 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076467263 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067704979 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088635318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08899469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06775853 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075172329 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066973782 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066224497 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066579259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088189033 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068460941 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066167991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069977439 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069283292 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064235115 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064978779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069266938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064011792 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067393843 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069052931 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069335462 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068192723 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082696249 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068431263 seconds)
  done (took 8.793997747 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070546068 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067762243 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068660046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0670856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06736733 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06767714 seconds)
  done (took 1.990749851 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094908116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069842123 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079650927 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071776705 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103945854 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086429046 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08610078 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077882444 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083245163 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078743116 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086552682 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087843247 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092252955 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072351603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085902043 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071469366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086520126 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075556067 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078128678 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072691565 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086231606 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072551918 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073111379 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081561092 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075406947 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072000801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067057578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07868254 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078078536 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078004507 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072160585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075574064 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070580588 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077750659 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086600486 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070688402 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071331886 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076597393 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072073068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074957292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087753993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07257192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07433206 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077529661 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077794612 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070127106 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076744405 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075891672 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086052002 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077011184 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076820168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071033631 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074944326 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076508327 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069746247 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077275431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076747967 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085897384 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071812772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069570592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06844232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074686546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076974673 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07485714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078848236 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076408963 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069882581 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071985563 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072408729 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071308016 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076442002 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06846362 seconds)
  done (took 7.11796528 seconds)
done (took 28.386730581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543214492 seconds)
  done (took 2.095073058 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61975949 seconds)
  done (took 2.195885336 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.089512926 seconds)
  done (took 8.661260714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390460442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472989723 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713819998 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131446449 seconds)
  done (took 3.323894065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66169372 seconds)
  done (took 2.247544713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212043747 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195434971 seconds)
  done (took 2.002209314 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377759741 seconds)
  done (took 1.949137701 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111464097 seconds)
  done (took 2.684387463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264031086 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16248239 seconds)
  done (took 2.003729978 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462802841 seconds)
  done (took 2.038057563 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.847007156 seconds)
  done (took 6.423410503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209097625 seconds)
  done (took 1.838581127 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243816774 seconds)
  done (took 1.824126975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.732899566 seconds)
  done (took 3.313908865 seconds)
done (took 44.187201036 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083131527 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081165096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080981073 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077551145 seconds)
  done (took 1.888950555 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080178506 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07241728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076573706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072137816 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077330499 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072848926 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074085279 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076439855 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072657064 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072602551 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072374633 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072454084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074777337 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073910427 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071008081 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074640376 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075827554 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072515615 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075408396 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072388205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070866912 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074432363 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075199967 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071986079 seconds)
  done (took 3.359421372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081061625 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07343961 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074512659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072299273 seconds)
  done (took 1.893515324 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080277169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092466433 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088736981 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077968957 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091598258 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085609012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069345991 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068747878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073407195 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076543117 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067930059 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095366701 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087435259 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076986136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079275036 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065920523 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068284799 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086705362 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07757343 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077658689 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070542689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076907531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067814379 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087540668 seconds)
  done (took 3.477663238 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080006483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102941032 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077111519 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087542108 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089292338 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065961592 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07403012 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089178271 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122907113 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065051507 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069649284 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065626871 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072324195 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064976274 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076089333 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10509662 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108926036 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068247072 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095389049 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065462866 seconds)
  done (took 3.24553878 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075814896 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069859381 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065911931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069161091 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078051157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072646446 seconds)
  done (took 2.031041178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070635991 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067720821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067431045 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067125694 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071874458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06744418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065702095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067406582 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066907827 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066649236 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066596025 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065888628 seconds)
  done (took 2.406038658 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.41577515 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068347605 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069234518 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06580161 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070653803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066403646 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08014074 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068002451 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090365911 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066989785 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06677714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068569425 seconds)
  done (took 2.79414376 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208083284 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076296438 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235503756 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136762801 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111016415 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11597218 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103521477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112694167 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142747056 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101519807 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167192974 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164644709 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106787651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137020971 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089306116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097740168 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154403841 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161878277 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103214897 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165555648 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143103488 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124577613 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146336092 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100971241 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105491023 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121136511 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070740241 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079558717 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168835312 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130648399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145845633 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110910647 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093483546 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175667944 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169969069 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141655787 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134365006 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084198651 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102279536 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132840586 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198105529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089043238 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162815952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247729583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081341264 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134074353 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120732295 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12035669 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106879775 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090286371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145971207 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182040352 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138770136 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086911905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111179086 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115040567 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115524705 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103797905 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181599957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161744461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127834438 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07135827 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099155273 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153072997 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132367026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108982274 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125976622 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093781107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13371339 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153675444 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1177098 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143762347 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128999588 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088493799 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11956835 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139528328 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127970395 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16910754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124427491 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073088219 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124328378 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102922424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081226735 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142485941 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075374529 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175164979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098873487 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106250828 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113332411 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108718335 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108435538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16003065 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142742566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245760764 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067544243 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103978281 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120181074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148230587 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087552608 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108232875 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116533215 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078166944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138955171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075415806 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123064103 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076161411 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125346497 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133255795 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075689839 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121206175 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100856101 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100219678 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132766481 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159584099 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089622446 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082384421 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168148523 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122709309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104958837 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143912462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155859128 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099277567 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101790943 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149542581 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17909626 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089363711 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162379731 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106939485 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08363901 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087218331 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123509403 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1119175 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121738392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082105307 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118352619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167165416 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075231291 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095880459 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133084977 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079497343 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080796725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103186998 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100469938 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09462823 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099153822 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103070891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136006287 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122368182 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104298912 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269626405 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099959552 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170865424 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088232483 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100953177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104119896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070030308 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136977707 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1565867 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079441287 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163923658 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123346384 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104907645 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119869849 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083069268 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139260419 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079165568 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070972088 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143989936 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11069301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110782818 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150609997 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104794803 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127332867 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119835649 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13578855 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132325251 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129534364 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104845005 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088289632 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111531851 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125222572 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07309186 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091622129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079884222 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103328619 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095272107 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083164975 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141312726 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124155243 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100149233 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111969699 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096877002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146800742 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076378366 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128692026 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119096148 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094011304 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151756522 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150780848 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130118281 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098764482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143992661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070052547 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073401834 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088835953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267055518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083556779 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084947959 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117725819 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146830876 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129743795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138087795 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111866226 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120765273 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155639737 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070331869 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116764974 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147656564 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121274306 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103953257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090095148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09963739 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14227816 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107514662 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181247504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114319987 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126414768 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15327856 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105991011 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08015405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103274824 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134626797 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104535966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144115336 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099811397 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088256222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110153242 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074295638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099688311 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127063203 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119110972 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134589144 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114498962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132320862 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077206274 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116355957 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119883059 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122195992 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064422418 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119833488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160557747 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093212859 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117512381 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151424511 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078847366 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123406832 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320957877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146083716 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085215522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110027353 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118944838 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128625029 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120922396 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140852261 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108226584 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136412798 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109861604 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086152254 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087498456 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097428567 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104921696 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095221854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107487634 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114061804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095596856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132306198 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103246696 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109890953 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117366224 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097698279 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090131272 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09558939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173719412 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120322326 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170659252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099141917 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145326119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163088638 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074876883 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079429874 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077924704 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138988531 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083639435 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130284458 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097573271 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105646455 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123668264 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141657247 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094809717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068543373 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108015703 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133605324 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111982216 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098449598 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104110087 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162725689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100345977 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079184804 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112881314 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103858275 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101973197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170554047 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061686072 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243009771 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076272088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081453263 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128436354 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15210788 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084716753 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103312614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119949056 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109888154 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127773783 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101864552 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099671431 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115102748 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149156249 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128740739 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09030868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113440023 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130259731 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15621674 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105881671 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095447544 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1711625 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170143174 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159418539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089083989 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1143822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113679771 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108250657 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138973007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08403002 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163090885 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081964385 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135752926 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103839811 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089792988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129361136 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09854907 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087871992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14847509 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117406499 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082443425 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077622878 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117514882 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119794103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106347514 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075586178 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138286939 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072593881 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130767993 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167083189 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080479743 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103913144 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240914861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081276912 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108792773 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103534864 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090018467 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098270581 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172558345 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088116185 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150144051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142918004 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113123081 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137061579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100573658 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636521135 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078135156 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151919013 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117352818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172292613 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097535897 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117026161 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109419021 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123907518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144140696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105104959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179015758 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132112234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116576892 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080056957 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103030101 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103098323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08914153 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104865971 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11335711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116273081 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093451935 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115541627 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122954514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081661976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095101236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155197954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11701603 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143685411 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140380313 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084940306 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117674716 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138559675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079973795 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120713422 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150456631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105302621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097035938 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079793766 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246844227 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170847697 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073922718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162392584 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120630396 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109957493 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112855015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114725508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132385133 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107743922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122343555 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09433762 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111320817 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112869131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082868861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077298339 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104706972 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113383941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097822749 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098707855 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098292045 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151999876 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071611694 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095549994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103740166 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145044474 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173949054 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088135954 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082651185 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119556047 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11313227 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113232679 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120794245 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07963655 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082446715 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081714698 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076956617 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108072327 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112684466 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104247956 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110855711 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162729445 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082404313 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225628288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094836907 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104792477 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070327231 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078572216 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0957511 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097181731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108068308 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100399248 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169814587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095270965 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090253108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092122324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072869207 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082259567 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126711665 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25695952 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120060216 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098547701 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062762217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109329561 seconds)
  done (took 58.919819204 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110484946 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0820196 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096717819 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149877295 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121870326 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212972602 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157965549 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200240975 seconds)
  done (took 2.832377056 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07051178 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094999412 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099913056 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083486999 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067094837 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069664907 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226036834 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081194169 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066914425 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088397426 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079678993 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069191756 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42319469 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06615662 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068311876 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062591414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06921533 seconds)
  done (took 3.477814657 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379605727 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361550681 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373700517 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073212906 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.894867026 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088690663 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078777276 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096452129 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071757787 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.26961693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699335291 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092326789 seconds)
  done (took 14.182257626 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07908368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069656587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083988429 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084592184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07207814 seconds)
  done (took 2.087024245 seconds)
done (took 104.241027795 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082821978 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391988116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053894728 seconds)
  done (took 2.173391377 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084872175 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084746345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084915705 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082454988 seconds)
  done (took 2.045691967 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077149962 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076702798 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084516379 seconds)
  done (took 1.93882125 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224642332 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139655942 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08692451 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084770327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078274387 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078881841 seconds)
  done (took 1.946238089 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074420955 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075526539 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072538549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075986379 seconds)
  done (took 1.996981842 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079498977 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052723431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055491038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056086736 seconds)
  done (took 1.943199902 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088818333 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079019409 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079290127 seconds)
  done (took 1.947452644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108243276 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085385239 seconds)
  done (took 1.893699217 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083761521 seconds)
  done (took 1.7905052 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100324853 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11418142 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128981157 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108907216 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136433392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108666203 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085406328 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086834819 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077497669 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087329025 seconds)
  done (took 2.740705786 seconds)
done (took 22.648595918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082380503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367452725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360172347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091076609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6689997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356404996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999013913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092222453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113261819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067843004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084738692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649587806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024778083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324781761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013525456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418856859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.658998109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068398329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068119877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068499607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986320018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067970808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068084511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068739378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65880903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371172337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068261277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413436212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068068102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06976784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354724644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068373172 seconds)
  done (took 16.530398625 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073148593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118265678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073807373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084726824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07088301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069605861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071721899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06932994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120208359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068053849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085374315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068174927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072086398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068683272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087635853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0682279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069020523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069162489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068410422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068224839 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08678301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068162603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068588987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068586068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068187439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080045828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068251115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06789623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068532776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069964207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070878925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06906343 seconds)
  done (took 4.119014135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117525254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125614617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074349323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104280966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112272589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07029007 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143810427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093107317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128123553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068248894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08477066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067972915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101352142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068977772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088180598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068785615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06986914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069123575 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068709582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068772476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087964785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068567666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068742001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069142347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069040744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08199768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069276234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069087429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068640895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070441942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072233538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069416371 seconds)
  done (took 4.379880121 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075096569 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075762557 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083879679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083804378 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069760719 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07249421 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073234096 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069894036 seconds)
  done (took 2.32821979 seconds)
done (took 29.068854728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082312682 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069593859 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072696178 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081865387 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073503108 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079192652 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067595824 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074661732 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072474006 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072814597 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074974981 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067685224 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071253148 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067542978 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073976989 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068400209 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079398164 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072065874 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079476594 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079651114 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070212291 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073361649 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07443316 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079380962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079724088 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0793378 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077764481 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07380063 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069185677 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07113677 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077000818 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084242121 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068816956 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079682607 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068443207 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068673208 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071897318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067957028 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079222745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076885429 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070040929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076677583 seconds)
  done (took 4.818782928 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090102824 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091134041 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084346696 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062027749 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067240137 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065537052 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088494063 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059993839 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059791948 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088030245 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05599494 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059533813 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0630675 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054647206 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05960309 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057122333 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061769616 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056021359 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059574761 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059481075 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058422229 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054569627 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060377842 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065602327 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056924428 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062252641 seconds)
  done (took 3.433225508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089430077 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085136875 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088195933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127280155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103164171 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077130241 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077866642 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092736256 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085373506 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066990634 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071053802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094373305 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088410022 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07405189 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0680424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085051145 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082511407 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069778118 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073685294 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091417895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084752549 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084773375 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093676534 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081410502 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067726216 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070202421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071796759 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081331815 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072876057 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076624443 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071678954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071017442 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069282383 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079691937 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071996155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069465359 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091110636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07738897 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077916111 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068074842 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071102049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069000073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089568359 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122878823 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067185455 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073992326 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075394398 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076734497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067334837 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086462952 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079550915 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0674376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071060056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067140494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067678181 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08110918 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069436399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069984359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07637042 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071042312 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085859004 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071528009 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082919771 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067174359 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074943812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066941784 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068384333 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066915878 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092777475 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068939049 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108803923 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069013528 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068742398 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076469143 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075007767 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073572241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068033284 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082586204 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077523118 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071363216 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07640752 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071135927 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07071841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088118713 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069986326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069133276 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068858246 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073875705 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07037627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068950738 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080655107 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067936884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070855641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084333484 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067603696 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069280672 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07364643 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072516019 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067111451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07868225 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072234351 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068491511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076654724 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067574381 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07090421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077947928 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073800957 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066775604 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072343369 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074079272 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068514051 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069667356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070825493 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069210822 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076468787 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074241627 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072464558 seconds)
  done (took 10.678265285 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163478669 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154701419 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070464498 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145495654 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076896436 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079315629 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148385727 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094767553 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067778279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068995533 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06961889 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110075717 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108344115 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115220316 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079152904 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067804955 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083469832 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113657767 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149728407 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14404112 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083889117 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077019593 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070055119 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069334164 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070671891 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078273335 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085221953 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076605211 seconds)
  done (took 4.487075514 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084323314 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100660205 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074821296 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089080315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090635762 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068132999 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070004276 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069927779 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080660412 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078634879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068090635 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073898219 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074797809 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072050946 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069122411 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075064572 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07526111 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069893812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071646845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073610311 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078100804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081250586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072325731 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067713654 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074823281 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067642764 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064756686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084930073 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068602733 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090450461 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066148693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075607577 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081640135 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068709947 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067885087 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068026365 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067389815 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067619168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070050953 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066712024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066591654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058039462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067377487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080224944 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074227758 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056716579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072412314 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073254952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072997813 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065761718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071037067 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070802817 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071237915 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075125885 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07286372 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072831724 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069515138 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065861676 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075717433 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067662393 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065396012 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0665805 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072339819 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066232794 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075800323 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072183181 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066407424 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068272443 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069449982 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073947111 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067518612 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070900452 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06557143 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069527443 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072093416 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069668506 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068959089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065999656 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06755454 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068346936 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055549653 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067662732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053782466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070686998 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065833 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066388644 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067702513 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072423502 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07969936 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068949068 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073318401 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068871449 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067023066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070838356 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060469045 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071082552 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082842101 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082934073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067692098 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065635953 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082058794 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072243626 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066723231 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056464149 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075431369 seconds)
  done (took 9.256212881 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097773116 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088907861 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070960517 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083763445 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091462853 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08596778 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075090934 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076716136 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07002934 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082561841 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074089394 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076906725 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068332201 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07766677 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093213692 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077323662 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070404978 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07748685 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072056564 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1008371 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083440588 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082149439 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075298083 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068678062 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076308265 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080686404 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08967509 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080593657 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078632327 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075903356 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080338429 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089674406 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074651291 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072407231 seconds)
  done (took 4.494530031 seconds)
done (took 38.885906948 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.80493981 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.973850441 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.801548891 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.146218389 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.10870249 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.867075584 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.809629431 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.800041508 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.98725696 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.835311321 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.0504331 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.872636019 seconds)
done (took 65.797092249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.873453248 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.942000206 seconds)
    (2/2) benchmarking "String"...
    done (took 2.075580548 seconds)
  done (took 5.756566892 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.107754838 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.402409343 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0451603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.800690906 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.804392686 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.107663502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.59996974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31796256 seconds)
  done (took 30.82059021 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.995557504 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998174793 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.474313242 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.491133264 seconds)
  done (took 15.74753534 seconds)
done (took 64.20683908 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.804380454 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.844452975 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.841038735 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.779896484 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.85189821 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.807849133 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.866617271 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.036955655 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.791776404 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.779596695 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.794511735 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.231083287 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.791062459 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.924195308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.789055374 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.795737569 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.801714703 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.265626555 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.946899578 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.795237449 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80066596 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.859383293 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.789924414 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.799864049 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.846262625 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.791750866 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.224938456 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.794881476 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.417162572 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.796696938 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.817421014 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.133548571 seconds)
  done (took 205.349234814 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.792069441 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.668200265 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.725229644 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.833409154 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.163175751 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.987309788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.926676603 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.207560689 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.792926907 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805245196 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.004376435 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.77948274 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.023299648 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.765770444 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.789631595 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.887334307 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.967908789 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.004157536 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.782029039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.010228334 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.789373129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.857918879 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.823540889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.95553501 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809811311 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.859496211 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.927393928 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.801485276 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.975153912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.934013284 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.784175795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.788085786 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.008615945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653872211 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.796939548 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.78523476 seconds)
  done (took 170.199924187 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.189540199 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.783408728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.783864287 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784179139 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.796492947 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782615829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.910565924 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908637229 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.242680156 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.207287659 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.832848074 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614002277 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.779133867 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852782008 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.791739749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.778557795 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796846203 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.806359578 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782072312 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782904632 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90840484 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.791265395 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.971852674 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782621767 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78096681 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78208097 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.148838934 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774881201 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783184039 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.039475913 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.778314863 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.775298654 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673459746 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.98518221 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8642399 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774642926 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781346565 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.774562749 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.776713783 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.997075841 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7747826 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.776663675 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.780587301 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955432698 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.772913979 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.90285447 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773945135 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276273543 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.77314622 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776463799 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.653608023 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.441301338 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.773301962 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774447179 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.773590169 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.776557466 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775244617 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.774562229 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786175019 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.507608383 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.84420779 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.773671188 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.776332469 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778940859 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.772619918 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.912707903 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76933822 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.122575109 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.831919402 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.986132529 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893180496 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.770161007 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.770240988 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836538541 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865239787 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.767827025 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.768463312 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.769769454 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.769025635 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.852738659 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.767650919 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770066142 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.893455802 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775477744 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.771731047 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820063432 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.840181519 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.76851461 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651583186 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.767376134 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.769049548 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.084761149 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835148008 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.767520987 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.768649023 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769273561 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.901750162 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892520092 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544889105 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.771650842 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.461816373 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.768444466 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.914927131 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768597314 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94956224 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.768852872 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850739052 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773724994 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.770783105 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.769644685 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800792511 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.769589194 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.828632103 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.768298517 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.139439146 seconds)
  done (took 402.960338549 seconds)
done (took 782.491060892 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.440936472 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.396027199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517381171 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.419113517 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.40006498 seconds)
  done (took 13.880697976 seconds)
done (took 15.590291809 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.854013263 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.856636271 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790253651 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.861145015 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786399884 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.854931634 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835149435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.791515094 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821815986 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.794578489 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823786692 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792529206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779774569 seconds)
  done (took 25.349642363 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012909335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.006099929 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.840084868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001279218 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.815554447 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012914531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949830172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.924749354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.939319946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782584052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781628017 seconds)
  done (took 22.775209608 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.009873415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.007224458 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.842220465 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.011049418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.81827105 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02587852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.936320573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.924606732 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92248748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784798179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779915297 seconds)
  done (took 22.772982976 seconds)
done (took 72.608456559 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.776544262 seconds)
  done (took 3.484136821 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.799542861 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.932646838 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.78006546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.781334739 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.777070473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.777994929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.781640369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.775317702 seconds)
  done (took 16.115915176 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.774102052 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776154144 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.777168379 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.773884794 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.776290048 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.773117986 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773450669 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.773942468 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.775030759 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.777185776 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.773508161 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.776864243 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.777745111 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.777218483 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.774396305 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.776498979 seconds)
  done (took 30.116058315 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.775934866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.774161959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778668878 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.774794397 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.774661636 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774939756 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.776631621 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.77489749 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.776112457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.773864335 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775258807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.775232901 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.775923897 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.776636618 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.775844103 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.776864687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.775149586 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.775539463 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.779459173 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777491717 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.77778131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.775796611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.7763496 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.776703263 seconds)
  done (took 44.337380191 seconds)
done (took 95.762969422 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.466795425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.22804847 seconds)
  done (took 8.406685975 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.779556739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.779278717 seconds)
  done (took 5.30859245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.779221765 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.777812953 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.779179258 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.778124007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.779543416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.778517198 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.778770927 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.779091452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.782303013 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.780024841 seconds)
  done (took 19.5041886 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.779663357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.780408485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.777749444 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.779774339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.778572918 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.776840438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.778830204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.7789104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.781389455 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.7762235 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77955153 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.776357915 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.779594602 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.775957969 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.780378034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776986395 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.777174136 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.777480049 seconds)
  done (took 33.724347122 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.78076963 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.778882072 seconds)
  done (took 5.271097377 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.77701485 seconds)
    (2/7) benchmarking "second"...
    done (took 1.778033814 seconds)
    (3/7) benchmarking "month"...
    done (took 1.776443258 seconds)
    (4/7) benchmarking "year"...
    done (took 1.778431714 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.776764896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.775709858 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.776224332 seconds)
  done (took 14.151021606 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.779883828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.949426898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.029826608 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.45864547 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.780350905 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.783022007 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7158797 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.783166735 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.785219592 seconds)
  done (took 19.778604792 seconds)
done (took 107.855498895 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.598218126 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774554683 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.166783359 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.824406504 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.794919325 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.073254519 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.815054919 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.98686737 seconds)
done (took 42.748953197 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.841632341 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.249203605 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.249287038 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.491308149 seconds)
  done (took 11.703276502 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.766206802 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.325896866 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.829173813 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.448137965 seconds)
  done (took 20.293820581 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150374127 seconds)
    (2/2) benchmarking "read"...
    done (took 2.144311914 seconds)
  done (took 6.020980579 seconds)
done (took 46.57563569 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78883793 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.787097861 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.784533408 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.789711882 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.784547151 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.786354127 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.789271468 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788492706 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789210448 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787474786 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.789091846 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.789800816 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788301268 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785203237 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786608176 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78904623 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785980103 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788724571 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.785429291 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786486671 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.789365115 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788784509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.785557066 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.786700466 seconds)
  done (took 44.621236814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789466452 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.78788065 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.789216798 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.792556633 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785678983 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789014185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.789136306 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.78670477 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.788803417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.792944985 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786231837 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.786036334 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789118138 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786071758 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790274869 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.787003142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.789715775 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788521205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789663428 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.786798578 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.791038516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785621016 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.786327292 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789283571 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.787076977 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786575292 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.790550291 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787615103 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788961686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788064308 seconds)
  done (took 55.373920143 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79463223 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.797537685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.790761578 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.789270183 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.788953663 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.789499958 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.792240586 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.790313894 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790557896 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.789915953 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790101476 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79097048 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.789903064 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.788798583 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.7898146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790456377 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.790483822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.79072191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.790052601 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.791053614 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.791054498 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.791095246 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.793199942 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790381115 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.791633631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.791543299 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791969607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.790816508 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.792160522 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.790808808 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.791874606 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.791293161 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.790871769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.790826126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792833677 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.790286695 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.796440183 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.800139292 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.790794909 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792857278 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792139476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.791036078 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791190981 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791205847 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.791668477 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792190092 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791968798 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792291707 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792618293 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.792966557 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.793483075 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792795872 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.792531334 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.793337866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.792849732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.792642032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793240573 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792315904 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.792704712 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.792644012 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.792581357 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.793638946 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794371933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.793443086 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793139458 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.794179449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.792637439 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.795118363 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.793280882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.793944293 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.792153889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.794280027 seconds)
  done (took 130.75458832 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.794091181 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792267756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.79058602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.791272335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790206682 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793541958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790398994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793415406 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791014465 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.793309483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794927549 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794142092 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791007518 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795574513 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794585872 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791166301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795935334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791937943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795576766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79427067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795571925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.791595643 seconds)
  done (took 41.17286578 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795433862 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794822737 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.792267257 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795102623 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793035048 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796646669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.795598753 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794983588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796644771 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792981287 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796860951 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796272496 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794242294 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792602689 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793425296 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793395155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796927527 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793001077 seconds)
  done (took 34.033139434 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.792987514 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.794407047 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.799524651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79332435 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795137324 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797432019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794694201 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797483164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.799051234 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.793904629 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796069938 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797030183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796565796 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793696093 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798174526 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794299291 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.796708774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793464083 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796127573 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795187381 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793343087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798304454 seconds)
  done (took 41.235874818 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796986024 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797296504 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796133394 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.794916207 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.79314843 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.796986334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796183549 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.793952576 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.797718604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.797985131 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795472098 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798057536 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.7946633 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797163476 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.7950803 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794903854 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796923354 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796668185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799811267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795929461 seconds)
  done (took 37.656003185 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799524058 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799395952 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799686028 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802771176 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799008715 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799105024 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798959537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799478002 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798991835 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800503514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800075503 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800285643 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800133249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7992346 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799640785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799286277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79870165 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799515353 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.799473836 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800434668 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801668696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799849246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800915266 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80054866 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799578447 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803429962 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800332992 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800860677 seconds)
  done (took 52.132165461 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799917623 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799169648 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.797811329 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.797310433 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.797837804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.796566698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.797252462 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.798422206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799153218 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796759323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.800834821 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.800503625 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799858152 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.801966222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79978841 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.799044817 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799961641 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.798698977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798021614 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797451831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.800543808 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799220376 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.799942045 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797597986 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798317182 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.799880452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798525977 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797890471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800536464 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799875441 seconds)
  done (took 55.701769371 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.820048244 seconds)
    (2/2) benchmarking "in"...
    done (took 1.819930968 seconds)
  done (took 5.378469119 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.797569599 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802067983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.800864129 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798913433 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798756449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800986702 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801149914 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799634958 seconds)
  done (took 16.133449851 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.802673439 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.800957821 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801938993 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.802441729 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804382705 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.803579407 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810445146 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.800998763 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.804235361 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.804475892 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.808527493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.810683864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807273303 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803528584 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.804053914 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803060082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.801948869 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.803054219 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802712482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.801861527 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805399595 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805259812 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805310387 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.799064386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.804951485 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.814620766 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.811052641 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.801472702 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80460543 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.808871011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.804085088 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.79906671 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.803345876 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.803747882 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.802763234 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.804436618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813763055 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805870225 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.812095978 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804047102 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803145405 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.800207732 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.80728217 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.808043225 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805987337 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805478857 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803941386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.801984375 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806877412 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.808172242 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.809457296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804197454 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.800994457 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814246462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807907119 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813202516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.804926592 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807817044 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.814452012 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.818044824 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820096805 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.812926897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806378482 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.804355162 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816410528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.829541455 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81413008 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.801684359 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.802411208 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.803906375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.815450879 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820979489 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.816732028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.805429994 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805106428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806098722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806913784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80497309 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813294279 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.809806763 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.804800157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807362048 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816702889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83025623 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.805760282 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.805901078 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808196108 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807477778 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808518361 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819166319 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.80625225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.806099258 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.806739258 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.807103693 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811148784 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.80640293 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.80596057 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809957365 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.803451996 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.80633967 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807969473 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812466282 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.818285802 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808209958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80940788 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817135037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.806735793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808234384 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.819522304 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.805930197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807920424 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.809850211 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.816980573 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.805046624 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813472024 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.817393853 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808243289 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.810801282 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808571674 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.809210294 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819573925 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.835597624 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.808778556 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.807531278 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.813972751 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.821142431 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809960624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.813651385 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.809477626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80648242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.805225914 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.812300377 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.809275315 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.811329329 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809921236 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812531904 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.806399561 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.808812524 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.810181438 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.811665955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813107792 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.810511921 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.812195278 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.813327234 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811811924 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.813647448 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.818314017 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.812125384 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813053437 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.812807128 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.808048931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81036538 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.813871558 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.811059948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.811476043 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811458874 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.811249853 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.811176145 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81060299 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.809607774 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810731578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.813067979 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815548526 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.812463711 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818987354 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.811576673 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.809309863 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.810473567 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.811101583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.815082442 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.811208993 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.81077573 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.813343487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.81898772 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.810602992 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.813171579 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.816748434 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812729311 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810773092 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811613121 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816624373 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.821233214 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811438542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821275716 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.811656999 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811862353 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.812689203 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.81365696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813521033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812910856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.814744404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.819829031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826953339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823077853 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.814533934 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.815130054 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.814630423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.819077909 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820719701 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813490634 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.812291994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81211692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816041147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813812322 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81740572 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.814324092 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.813665061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.812097384 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814908092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814664655 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814283173 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816307175 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816360589 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.814010544 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814787749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814049971 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815328957 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.811742081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814146544 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81622423 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.814069181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.814771366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.826479377 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.810602417 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818501354 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816355713 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816122475 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814142537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.813580799 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818876882 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816912801 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822807927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.817177076 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.816153893 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821798081 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.8159438 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814404826 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.819098761 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.814475131 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.811885495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.817087509 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.823656971 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.814788683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.814939216 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.814765469 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815763442 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815025662 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.824436953 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.811934801 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.816202485 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.814998323 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819447344 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.814125406 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.81849052 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.817908303 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.817934964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818465826 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816582064 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.815062732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818554726 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.816405668 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.815937577 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.816053974 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819715084 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824328821 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824245013 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.818421074 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.821350564 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.817937645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.820533621 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819138631 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.817252762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.817346347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832334988 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827078899 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825889254 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.821276525 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817198172 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825052565 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.822226031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.822028977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818203005 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819892495 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.819850718 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.818416247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.815892275 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82058768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.816650512 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819276114 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.819603776 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.822659873 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.816986603 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.817700588 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.817689943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.817740095 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.817477643 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.820262806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.817499062 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.823940579 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820376627 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.818528591 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820670851 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826899259 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819856632 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821179152 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819164225 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.81873591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820794506 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.821264301 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.818875923 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.823250825 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.826071416 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.823689662 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.831608426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.820055085 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830909433 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.818591961 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82297559 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.828609014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.81665605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.819518304 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.821887888 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.819629486 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830493621 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.819560072 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.821754154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823888073 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819547862 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821797948 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.82076303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.820052865 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819436996 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.820049506 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831267988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823237326 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.824346914 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82442192 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.817575481 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.820589368 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.820287589 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.8206961 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826458756 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.821037655 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.822118555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.820871331 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.822349857 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.820108415 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.820975765 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.819717341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.817732184 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.82108384 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829627233 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823063501 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824954905 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.821630936 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.832954529 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821445104 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82903492 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821430184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.822664461 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.822022892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.820998714 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.825990957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.822565108 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.824949564 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.822227017 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.823017428 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.824555597 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.821767473 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827100605 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.822397075 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.822902695 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.823235195 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833388399 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84559783 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.823949998 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826087863 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820061975 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825843312 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.826945257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.823443107 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822402761 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826087586 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834561733 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.829182256 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.824901641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824798722 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824515331 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823721373 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824498884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.823135586 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.823475173 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.822740768 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.825675222 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.823777894 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829829344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.821924326 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.825043959 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82595088 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.824863569 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.836330178 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.823147688 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.825996348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824223415 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.822554038 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.825787147 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.824687041 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.825606164 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827147194 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823911435 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.825980179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831655981 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832150481 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.828571909 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.823567275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.824270501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827459205 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.827410822 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824297272 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.824449669 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825188097 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.827569488 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.825313035 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.827499657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.824226033 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.824053164 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.826416702 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825693376 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828159373 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.833625161 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825940417 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.821815567 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.824614935 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826307382 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.825675394 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.827573631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.83829008 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829475508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.838096673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.835849398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831501805 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827887161 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830117541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.836879263 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826853418 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.828140559 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827114936 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.828309052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.82769476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.831453236 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826559883 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.835471126 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828010453 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828257771 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83735558 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.83050598 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827468612 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.829065978 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832328118 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827792928 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.823741745 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.825283439 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.826437635 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836060432 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830204629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828533858 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830986567 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.826807233 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.829692919 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832500608 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828162574 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.830146797 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.824294547 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.829478792 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82797018 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827685651 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.825047642 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827920556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.828820597 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.831504341 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.836613605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.823735327 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831404634 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.828204565 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831971455 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830339495 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827854291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.825955511 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.82507431 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.829583421 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.828398098 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.829407246 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.831957965 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.829440882 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830001551 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.828730946 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829052757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831332594 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.841500101 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.836836958 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.826032076 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830479638 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.832402391 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.833997485 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83043788 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.829818922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830664516 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833934132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.828431653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829443228 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.828691736 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.832062774 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849616036 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.828583829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830914762 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.832396848 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837119339 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.829517166 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.826612043 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.829217851 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834872728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.833462241 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.837475233 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.830731008 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838690711 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831559749 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833783859 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.832183318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.834755132 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840622586 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.834670848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831703839 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.830249348 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.83595423 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.851124125 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829893812 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841126457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864647194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.831896254 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834632696 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.831076645 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83112833 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.832169402 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.835382886 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.832093164 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.831313216 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829926993 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.831984246 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.835155938 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840197474 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.835057605 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.830877215 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.831470824 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.8333557 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.835737936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.830165265 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.832943186 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.832801944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.834239018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.833556123 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.831977727 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.833469124 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847776477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844708326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.833209438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.833561814 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.828857069 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.837580945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.836729212 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844027566 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.840018236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833166996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.832637331 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.835757819 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833634921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.829031131 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.834418848 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.833476027 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833539564 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.829812573 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.84917802 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842062712 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.841550113 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.835422531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833820762 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.832438607 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836784927 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833101852 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833430681 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.836386827 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.834101816 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838419209 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.833208305 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833146044 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.836608626 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.842479935 seconds)
  done (took 1086.910359567 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831662828 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83143033 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832276877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831025721 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830684566 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831663713 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831388928 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830735169 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831328975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830347489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832440718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831942967 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831487696 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832331828 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831541442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831867003 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832951693 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832231842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831772892 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832221177 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832870437 seconds)
  done (took 40.23201066 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.835721451 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.831741815 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.83182828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834433031 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831241642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836419029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832523278 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835201444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834794854 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832301586 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836441595 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836741789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.832119891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.834295616 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832747564 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834715611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83647867 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83307063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.835307844 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832059131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83571237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.833121195 seconds)
  done (took 42.117723789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.837491766 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83797623 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.837428685 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.833417744 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.837652492 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.83294372 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838017413 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.836806213 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837363836 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.840179286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.83796158 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838607981 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.844104536 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.841582517 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.840674804 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.836773999 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981504226 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838478823 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.837727477 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.837137355 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.835780572 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844901464 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.834467639 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.834805298 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.838148791 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839840451 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838239821 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.837785847 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839252173 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.83906473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.841868696 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838624316 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.839687963 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.840790939 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838921766 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840125698 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.842955444 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.838458401 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.834645049 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838623954 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.849042489 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.859266169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840146057 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.846811433 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.838620757 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.838870895 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843352227 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.847346279 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835155601 seconds)
  done (took 92.048589274 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838167385 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.838796907 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.836034683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839787232 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.83927643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83835314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839173733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838941842 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837508157 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8359048 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.839719828 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836850377 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835904898 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839900515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840967762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837103505 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837305469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835926226 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.837495026 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838023011 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836675704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840049165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.841304905 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837918302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.84027383 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837701561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837214932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840199272 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.838009733 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.838787916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840944292 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840100266 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840506281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837747016 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837693754 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.839947631 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.839753319 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838220649 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840026389 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.839096091 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840868163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.841682082 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84033559 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.841519954 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.838542024 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.837347719 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83831117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.837901239 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838899972 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841110799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.840542744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.838847701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.84020701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.839141392 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.84022207 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.843012086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.839468274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.838826107 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.84201361 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.839602565 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838376149 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840600641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839760943 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.842338047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.841450671 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.8401169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.839696241 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840791459 seconds)
  done (took 126.83767094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843149829 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.842971603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843689922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843729179 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844855146 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.842856475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842657444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.844002102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.84358372 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843810208 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844414482 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.844089869 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.845380145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843299274 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845036466 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844760913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.844977776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84436954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844678133 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844884256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.843913769 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844960546 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843547015 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843593243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845671043 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844257324 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846058514 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844628172 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845221583 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845409551 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845297853 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844873288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846349105 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845431089 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.847026212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.844957978 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844729548 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845569556 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.845022249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845619698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844938528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84495358 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845433509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845054661 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846150379 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845959236 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84526684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.845640848 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845716196 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846648875 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845767178 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844993509 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846321298 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845610304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845597956 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.845437416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845153668 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846002803 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845898145 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846304268 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845843914 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.846696003 seconds)
  done (took 116.165151421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846426855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847574791 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.843507354 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.844706506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847204292 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84379205 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.84730118 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.846010717 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845852929 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846509798 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846850512 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844218516 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844426821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845961828 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844467256 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844604455 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843895483 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844985074 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846950935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844439837 seconds)
  done (took 38.687593539 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.844743403 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.846974457 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.844981673 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844046309 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.846866338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844836887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.845987671 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848337933 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843307814 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847525237 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846054286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847226986 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845236959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844575112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848213958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844473707 seconds)
  done (took 31.31205839 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.845310054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.848367154 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848408237 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.848160707 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845804267 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.845782568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.84856392 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.84561487 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.845254354 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.849432302 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.84836853 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848734702 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.849733932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.84998076 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847188128 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.848881788 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.848028983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.847118541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849744677 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.850754217 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.847812997 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.846968262 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.848867419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.849163382 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.846870907 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.847231774 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.846628284 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.84750199 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.848776351 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.850001024 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.846327628 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847296403 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.847997815 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.848890532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.851267237 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.848128321 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.849803639 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849581091 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.850494318 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.851018942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.850173699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.846904606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.851150177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.850323505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84845368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.849502228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.84682657 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.847291859 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.848665906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.847724652 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.85061284 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.851941572 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.851130755 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.851325226 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.850941969 seconds)
  done (took 103.454709489 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850048195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852038012 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84778924 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850454496 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851166439 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.848461242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.85153522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847590399 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848258772 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851695867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849698037 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.851256086 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847605468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852152021 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850098385 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85197086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849388179 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849039368 seconds)
  done (took 35.082412616 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850479342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849939442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.853351741 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.848551454 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.850555757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.852126648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849254994 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.852316021 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850597533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.850113422 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849445015 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.852631632 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852371099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.852205862 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849645545 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849588792 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.854009792 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852612123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.851425277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849593113 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.852914529 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852477158 seconds)
  done (took 42.509211386 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.854020068 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.852719646 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.871359829 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.898166622 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.88810047 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.852515958 seconds)
  done (took 13.001195216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851453881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853911556 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849669332 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854579392 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853859784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850262182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849469713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848256229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853752854 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851107492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850841014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853246143 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853657438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852470174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854782425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855252143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851798261 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851321782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85242122 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854122184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851444619 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853750125 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850921798 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851790009 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851664058 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851697623 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854299531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85195077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850985897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853438681 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855072095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850401879 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853242093 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851729992 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855005309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853637349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85195236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855766241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853728689 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851903796 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854279373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853261552 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85460254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851311122 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855230157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851719913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852732429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85276336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853368739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856186727 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856569822 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853207589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855301439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853904908 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855296007 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856529762 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85480439 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852960411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857723069 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853946904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853389876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855109679 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852410549 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854248189 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856254052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852973772 seconds)
  done (took 124.096894731 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852359528 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853307192 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854454842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85170192 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853082597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851948847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852946527 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853764211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853624135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853445373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856241048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854451779 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85306308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854969549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855470455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85421868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852312795 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85272627 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853762326 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857992005 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853477967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855030488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8536789 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853357291 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854208806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856307863 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855672354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855472895 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854814602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85462196 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855849067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855289103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854963187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854751833 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854585658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855268976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854192929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855313588 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853537336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85627543 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855439096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857722232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855616957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853427267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854875133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855527702 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855743106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854359192 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853937726 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855517049 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855207292 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854830649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854911827 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856569221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854631957 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856061932 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857424068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856645963 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859133863 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854838715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855421038 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860289107 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854965796 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856193371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856789371 seconds)
  done (took 124.213435071 seconds)
done (took 2532.582966926 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.893278106 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.853697489 seconds)
  done (took 15.536381119 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.019994992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.974146928 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.857324125 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.894158266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.856912011 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.871302797 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.870489174 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857865143 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.859490401 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.860465584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.856737968 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.044222184 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.874314417 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.855691059 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.857239066 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.952865455 seconds)
  done (took 52.156100588 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.863671311 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.862848438 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.87210668 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866188877 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.861779066 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.876016864 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.895036466 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.867053951 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895996938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.886111892 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930662233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.869538037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.863224824 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.909882827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.874832812 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.876944316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963400955 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.934021536 seconds)
  done (took 35.760356392 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93860915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860829671 seconds)
  done (took 10.598204948 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.876406666 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.86791092 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.893299197 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.883087831 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.858467133 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.855715664 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.866880167 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.875862348 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.882890469 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.888061813 seconds)
  done (took 70.565299167 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.869577625 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864262318 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.864365664 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.861716317 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.854060398 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857593056 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.860785053 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.855235765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540254106 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.895857033 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.867656658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.868594843 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.861315737 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.863748437 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.85870176 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.884511841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.976067976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.858255722 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.858403377 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.867302931 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.864524982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.957674408 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875260645 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.862618064 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.892238155 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.540370166 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.867715251 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.868741746 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.998696602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.859539227 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.862949063 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.862709889 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.863434981 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260778883 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.184392503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861687527 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.870769319 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.86938465 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.861566689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.034333034 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.865907958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867203538 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.856017274 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.168347718 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94594203 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.905766519 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.195836893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866548951 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.866756044 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.895249337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.867384644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864398525 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.877297764 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.385445815 seconds)
  done (took 132.433662395 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860700401 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.444642724 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022862793 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860445611 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139898213 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101058107 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858402797 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907329791 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860912745 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107496709 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.036570791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976817615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86095661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.857391899 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857864122 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854749793 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012777397 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.92842266 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861269451 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.858612047 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89595947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127430732 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988271082 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860764752 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.880937818 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087613427 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985392057 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97698845 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.375570108 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.857660847 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927719571 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86025788 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.859288748 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.857157594 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02426656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968342971 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958207165 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858741268 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85820331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859234533 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521855231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082924732 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97142016 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996823191 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108032148 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088470112 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.507968284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.860158232 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.498604946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056673015 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.069141929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.116352235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.989261675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861670704 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.10992526 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857512782 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859123202 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122923125 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0894309 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9742317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862513206 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860324606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860586127 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177090981 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.864619325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970658286 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864460314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863725874 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974149357 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978397898 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091734488 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102970763 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893494516 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.728225774 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.373734992 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.144787144 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934750205 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125516685 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865074659 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859939296 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956047931 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.616040698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035966816 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.179107898 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.128756229 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906166889 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467789402 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.862360055 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.110153312 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.114223408 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091685775 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106397553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.027513516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.18906926 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.860550454 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.861384519 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.060615053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994947194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864194265 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222005488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112059039 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.595015252 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895903385 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168403189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001801513 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861964205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.489634834 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862417071 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063170006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90398856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.864005345 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862623328 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.109587384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.73428679 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862499167 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.632163725 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.927479787 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865491099 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129394316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866672844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10497377 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865067789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.178894448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.409569957 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906744463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.056230594 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107458798 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.657291678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131858247 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178065243 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98665197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119998226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.680850117 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866498653 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145337052 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867227938 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86412308 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033289364 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865450859 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022645684 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865594933 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124949883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891715475 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036894794 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864895545 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137526534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911395694 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91708567 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869258784 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983185675 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866218494 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.905946545 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050137997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868478009 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863975948 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.425985448 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.8656438 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01289692 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.164410458 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891303665 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935740389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.392830915 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86582748 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96020397 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893713027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.472603957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.864933152 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.036027054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.867987156 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824986994 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.865772225 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.177209807 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089698341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869753782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865122616 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.661220791 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.554802982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86595438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040961411 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.102828312 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.50982985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087139655 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867171108 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998834026 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868837274 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943064149 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.215280476 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864543883 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.86637766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.864745054 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.86976462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.868487614 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093822422 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.895248198 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.552360719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002396903 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111338144 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.179825959 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.130807193 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917714641 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87285014 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134001625 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870261822 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.933558506 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.869521885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89152804 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117577035 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87200597 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097337989 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156678824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.91880136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917837897 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.870695153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867508914 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.866931984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013524345 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966561915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.870452834 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.868202633 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986064556 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995461211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05367419 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.46769503 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.046152736 seconds)
  done (took 902.753821337 seconds)
done (took 1221.591521506 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.875356269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86701411 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.854192448 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874053001 seconds)
  done (took 29.27468258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.881020295 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.879440745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.880675226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.879094845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.880811581 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.878907412 seconds)
  done (took 13.089604774 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.912669302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.867077841 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.868267504 seconds)
  done (took 21.457756725 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.944759209 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.277487245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.977683588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321849179 seconds)
  done (took 10.32686633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.876193642 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.877809428 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.875023149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.876868557 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.877241798 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.879762202 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.876305525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.879222807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.880053914 seconds)
  done (took 18.705573273 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.046665711 seconds)
done (took 98.704363441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.123504862 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968990604 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.889059297 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.265613344 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399331806 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.869731243 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.517870916 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.85517488 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.063999945 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036993642 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.006276496 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.447718277 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.956736157 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.908534019 seconds)
    (15/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.010206254 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.144660909 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895226931 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.205825937 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.750562341 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.884410401 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.112902154 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.439263166 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.970383466 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.044039898 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.966633458 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.881380967 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854296362 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.048073733 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253544686 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673024189 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.959855232 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.019257028 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.933811296 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.252243309 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.07263073 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.891709037 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.043711309 seconds)
    (38/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.446568063 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.081515574 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.46694034 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.999405142 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.896755352 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.886687956 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.998437002 seconds)
    (45/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.009019163 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.399303105 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.102526173 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.172973874 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875187087 seconds)
    (50/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.434411834 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.950818466 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.985424163 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.255583386 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.134177599 seconds)
    (55/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.386456673 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.862325446 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.859813223 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.010272582 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.760470807 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376528332 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.935184994 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150344574 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.875137879 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.963431369 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.983121324 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.87283355 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.857845803 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.896924943 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.860604272 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059093288 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20571675 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.971793139 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.305514861 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.04015862 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0285665 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.046849001 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.876843473 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.906099297 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.486989438 seconds)
    (80/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.955853106 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.875330051 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.259352871 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.034028571 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.260776587 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.245607645 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254819933 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.279129138 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183431086 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.002787805 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.256857771 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.565191779 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.899516615 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.761647522 seconds)
    (94/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.046761353 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.961515163 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.081546732 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.890473753 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.167595718 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.521223116 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.173187476 seconds)
    (101/309) benchmarking ("sort", Float64, false)...
    done (took 5.692024398 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123138768 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.859761512 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.079988285 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920087017 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.949028802 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949875632 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.902504598 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.04010626 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.890632941 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.881355578 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.92250716 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.981777849 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.160713674 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.961015322 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.108590143 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.071864805 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.905675178 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.070872226 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.877334554 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.999347537 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.877060164 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.617403115 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.953557227 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94165409 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860533562 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.026003533 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.878393546 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.900722447 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.614117958 seconds)
    (131/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.962310592 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144363664 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172984424 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.135047695 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.183511328 seconds)
    (136/309) benchmarking ("sort", Float32, false)...
    done (took 5.650024253 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079481792 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.83631076 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 2.329323855 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.900083769 seconds)
    (141/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.497522062 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.202183634 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.155459078 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.86023458 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.137617698 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.436771246 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.185327035 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.156909007 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.901589401 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.523863378 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.987918502 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877176643 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.961732519 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.861166434 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.884485665 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.982837108 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.863012756 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108554602 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.903784242 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.032772746 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.082213024 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.9009992 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.485258609 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.30277779 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.087388711 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911153919 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.154845772 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.249828921 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.783131143 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.040599843 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.00257881 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.972863753 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104293288 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.043766681 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205652277 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.880445118 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.127129177 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.180417381 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.003091878 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.170551097 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884836148 seconds)
    (182/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.902519021 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.923941591 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.533859876 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.961410569 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879386742 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.301426627 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.551301117 seconds)
    (189/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.054333151 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.742969777 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.894460897 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89356405 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.094924401 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903715487 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094907556 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.013267039 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.252120338 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.911693181 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.776432358 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.082755996 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.923023479 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.217871229 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.8857355 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.87314667 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.061551076 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.90524067 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.762931622 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.938216878 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.398517741 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.012604441 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.989176248 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.938262582 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.048954762 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.180340258 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.475626969 seconds)
    (216/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.097167014 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.16927954 seconds)
    (218/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.098193778 seconds)
    (219/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.97168709 seconds)
    (220/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.865808184 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.669630555 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078156859 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219245094 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.860452714 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.485902471 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.170621436 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.994921789 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272912812 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.948492586 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.07251682 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.990615622 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.962005277 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904006952 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.780115062 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.981244546 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.011954509 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.535647335 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936980996 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.929680455 seconds)
    (240/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.805354023 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.679955208 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.8870761 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.686031368 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.255682443 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.868196685 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.429440526 seconds)
    (247/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.726082193 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.777350698 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.869494876 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.229172509 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111288291 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.866912232 seconds)
    (253/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.173012833 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.882426213 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 4.762130871 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.19762444 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.909636536 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 4.839875404 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.869950082 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.356210087 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.909868165 seconds)
    (262/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.390870978 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.219639549 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.818911042 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899881019 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.124380455 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.136899125 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.885392711 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.155102159 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.914323772 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.233697203 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.280042131 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.911898402 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.156495983 seconds)
    (275/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.891216164 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.996681604 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.978121095 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.015915333 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.964224943 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400520906 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.892065708 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.910451921 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.565603953 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.892670283 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.981547685 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970108912 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.989265284 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.006533567 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.254108538 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.080523726 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.570822057 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 6.9705838 seconds)
    (293/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.897399264 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.194696085 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.927275645 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.487365051 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871787382 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.220081734 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.890552117 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.966202164 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.395639535 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.181533166 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.890875321 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.916320239 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.574860888 seconds)
    (306/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.493213255 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.04166735 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.885625599 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.44860879 seconds)
  done (took 1026.531828014 seconds)
done (took 1028.350140378 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.919808087 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912681324 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.896872726 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.917405617 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008553534 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.92560764 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.906804502 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.897420332 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.943741904 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.947152481 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.896040237 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.925010035 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.89951153 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.89709613 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.895654509 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911640067 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.202128257 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920419767 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.914529335 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.906678308 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.9144676 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.897160318 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947990776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.926333742 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.90188372 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900648102 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.903150831 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918654643 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.010643814 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901287695 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.900585845 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909290933 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201483251 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918340101 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.893191269 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.919231484 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.910615531 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.907167689 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.902690516 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.931210951 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336912842 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.903081959 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.900398607 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898345234 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.898652585 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.901928566 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.900054243 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.90434362 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913148638 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91224403 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.337346399 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919400757 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.903194389 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.898115787 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911111775 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900438349 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902375718 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915436078 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.919861776 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91563063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.193950776 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92668777 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901395199 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.915318081 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.907434451 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373711405 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.898897048 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.903313851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.338488853 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.908768035 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.374975789 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.91028021 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900045637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.916188517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.931132933 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.203472736 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.917037616 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900193977 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.908220701 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.899306101 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.912753517 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913821506 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.906250185 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902563733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915713628 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.929637955 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912186499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.903554451 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.910843273 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.919849124 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.908875929 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.912082843 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.903953116 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897692735 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.910765152 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.906386073 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.906699411 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.903592735 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.906309499 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.913865731 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.336073442 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922734286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.899654446 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897644221 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.901162352 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917042213 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336655065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.905780762 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924716658 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.948535475 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.904130173 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.195096807 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927617122 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91688608 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.912519109 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905351249 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.897378063 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.194438514 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359019505 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.921848321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.904227005 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.902418456 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918559207 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904989674 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900480595 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.207850445 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92612567 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916108661 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.025446013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915377342 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.936336623 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.901611384 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907451807 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.931488029 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919956721 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.934551328 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.907649008 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919955969 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920371355 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901368546 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.913902203 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916246288 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.905767393 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.91099864 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.900013442 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.937962519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916237586 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916543023 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925524981 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.02665943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.902504623 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.200850348 seconds)
done (took 298.611097329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.974709746 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.901087795 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.005975678 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90057821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.987059994 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.987406134 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.898960884 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.899282638 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.899683559 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.283534511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.901485626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.899635057 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.897493005 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.901250047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.984526235 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901376603 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.89902573 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.248410583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.904508759 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.973377609 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.895544726 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.900918091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.902750445 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.307209499 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903925334 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.902135372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.976009144 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.902653879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.249028579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899554045 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.898097588 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.250715537 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.99400771 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.920683336 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.912733834 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.910376196 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.986373637 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.904581267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.987242703 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.988419984 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.00759569 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.942596062 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.90349079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.903834145 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904462289 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904344555 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.899824313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.930357368 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.904267266 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.900983403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.249730766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.914599771 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.910582118 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.90061125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.902188071 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.924939679 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.903153327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904054837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.99706153 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.906730215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.968404529 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.307325538 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.289090472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90426732 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.902436396 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.903097134 seconds)
  done (took 186.664354341 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.976435237 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.979912692 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972344222 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.909543435 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.954272629 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.977187105 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.908805159 seconds)
  done (took 15.51167743 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.91169063 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904626728 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.956307387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.956046041 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.905524634 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.056082627 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906570863 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.918504497 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.904583157 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.960394054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90438249 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904954697 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.913082095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.903860737 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.955098983 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918822576 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.020320445 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.908813853 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.907847482 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.064340497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903664595 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.91466665 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.962255445 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.920497212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.909284158 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.91610023 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.490996581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904866631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904279821 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905879733 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905215117 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.94688096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907324156 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.905019378 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90406197 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.024795559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.910181193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90466957 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.908045701 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.905192891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906649028 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.908802485 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.907267935 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.903412094 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.909107984 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.933700669 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.909077743 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.907205933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.910169978 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908312013 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.957829043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.907855685 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.905886057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.904941792 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.967248186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914827463 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.909252489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.906455411 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90741152 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905270897 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.066852607 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.958722854 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.905783304 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.957967092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909656647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.908778594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.90694517 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.907894287 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.965637851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.907530293 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960173497 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.90590142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.071877409 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.932870128 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909430242 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.911585588 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.91187904 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909000894 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.901877008 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.917268155 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.908381043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.912616177 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.916924998 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914938967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906622361 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.016283924 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.019970339 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.907446478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.92438463 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.918844665 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.905368777 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.963856579 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.909139223 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.908573231 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.962337072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.027585298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.401550403 seconds)
  done (took 210.015029659 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917557209 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.919750446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.909777886 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926947116 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.911024578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.911943724 seconds)
  done (took 13.332977464 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.914591913 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.910493474 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.910878698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.912041172 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.912581732 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.911966434 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.911978971 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914544623 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.914402675 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.913267335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.912217738 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.912285164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.912875557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.912185499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.911877367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.912702913 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.911484808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907854172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.911895086 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911682683 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.057824572 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.914098976 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912968032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.917140269 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.918428915 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.91445423 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.922731662 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.913663096 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.913285803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.920274047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.91486612 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.912317889 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.912989086 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.919402429 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.916809972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.914058362 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917207014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.917711127 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910050362 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.91230455 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.917324594 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914578361 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.912464529 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.915000847 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.915605174 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916612294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.920724587 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.923943889 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.915211711 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.915424507 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.914772236 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.912097208 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.916368735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.917620648 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.91952763 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921426754 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.922543127 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.916058452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.916111342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915636843 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.912700415 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.918110235 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.918591355 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.920261095 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.920315887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.919416731 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.918095092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917903474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915531856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.915427414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.917104804 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.914039594 seconds)
  done (took 140.885285155 seconds)
done (took 568.252490016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.194941277 seconds)
  done (took 9.037063638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.016244582 seconds)
  done (took 8.946478607 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.410107188 seconds)
  done (took 10.256146754 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.925789093 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.935284873 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.920888286 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.91346752 seconds)
  done (took 29.548319235 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.25074247 seconds)
  done (took 9.097119323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.924712128 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.909737337 seconds)
  done (took 15.747561188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.958149988 seconds)
  done (took 8.805292663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.08643281 seconds)
  done (took 8.935155338 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.932624341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.938113172 seconds)
  done (took 15.72982257 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.899226172 seconds)
  done (took 8.74593641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.632961693 seconds)
  done (took 11.487081049 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.918118833 seconds)
  done (took 8.776970831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912509002 seconds)
  done (took 8.759168873 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.011166894 seconds)
  done (took 9.856824385 seconds)
done (took 165.573021078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.917144828 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.910435802 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.909719603 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.910463316 seconds)
  done (took 29.492159314 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.953530322 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.950369618 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.952941972 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.960240263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.955713294 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.950560721 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.944003118 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.944884902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.9613351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.955632387 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.954668708 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.95471867 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.950266932 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.945373864 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.9540125 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.955210653 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.963558517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.954162463 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.944994347 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.95472127 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.920731092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.964984458 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.956595555 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.921850574 seconds)
  done (took 48.673575892 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.120775982 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.9913202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.075433823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.973681708 seconds)
  done (took 10.007189623 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.971851146 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.973637644 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.984489918 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.024548402 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.049368668 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.982884334 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.947244433 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.9424596 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.927257824 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.972125402 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.048438974 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.989035437 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.064420131 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.919678695 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.10237374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.920205392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.920825927 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.973786291 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.023913022 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.041614752 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.921486225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.972952813 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.974508282 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.990145374 seconds)
  done (took 49.487705284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.919876045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.928198615 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.926526931 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.921447042 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.9218384 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.920180213 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.927983462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921403111 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.940739728 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.922776572 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.917730034 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.920674876 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918714813 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.922349272 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.92042144 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.932803125 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.934634823 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.92027988 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.922811285 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928504268 seconds)
  done (took 40.339734387 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.916090233 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.768910208 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.268255127 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.170509385 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.915485298 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.914274831 seconds)
  done (took 31.803323395 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.934144597 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.986102426 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.929910688 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.979079527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.055983265 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.930019867 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.923767891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.990499423 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.03213768 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991266683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.940926311 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.949399509 seconds)
  done (took 25.495031395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.925883991 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.917592057 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.916899793 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.932075409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.931649449 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.926506313 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.928864331 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.913769598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.933366583 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.938141882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.92779311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.934659612 seconds)
  done (took 44.980449151 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004966768 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.959479499 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.957594707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599399126 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296767579 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125835905 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.569638725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252128064 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.92064095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189128882 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020793978 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017783062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174261007 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351794121 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945236301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.384092449 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213887991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119697315 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943242227 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600449839 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981526858 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039459556 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.666155342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975871282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128676325 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.049531436 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.178826765 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919491727 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056166734 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953936444 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928406907 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917485121 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19351765 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302730501 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020326797 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926399582 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53675565 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.631592234 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907386002 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.700822654 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.666048203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037169101 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929441553 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919664631 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854212646 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008816762 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290366799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.925849358 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.633305557 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918409382 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930760358 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016339882 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.923456284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.738485423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835496196 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.919944002 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.91562619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926607737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492802231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038295228 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047118177 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.889929117 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.012983744 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607571021 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303578947 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.069379421 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.923304941 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92405461 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856127734 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.679033171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977035915 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270082722 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.939562231 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571340366 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232110013 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.076359915 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86188665 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182700266 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396534779 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.889012205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150636744 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923291197 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85755126 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.866546372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855766869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177998433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957528725 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.674134 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959026732 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255518816 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930935368 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938115847 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946540083 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144648714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.808754119 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92025901 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.789513263 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071914166 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942510189 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251258326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856921226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.924394162 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180951649 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.134673447 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938230461 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417505198 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082594605 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425324604 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.9694328 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.008779653 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966040331 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.190111819 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981128431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.038571237 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977464216 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923992173 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231441266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451746777 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.05603645 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.039232135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047166707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.235444674 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947996985 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006174043 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931618396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924223928 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705737057 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477145398 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.924316684 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.927104197 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934899886 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964866305 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.925974769 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869720449 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.550512102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02411363 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.937628567 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149920384 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428099604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231624906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859827648 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252273719 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.01748499 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.146489211 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.573519247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.995431854 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186342029 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93592267 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.965347147 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968755586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944780198 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024220811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948694821 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.025757656 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219721532 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.930635558 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.931155044 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.712666616 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963481347 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929758657 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.931750887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681726114 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195247632 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949684728 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932863261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.817001449 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.941568227 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991497236 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932973774 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937818602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.47061894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640597832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.933450774 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.514751615 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152069271 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936113625 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606829036 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046291565 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.010272096 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196793245 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987320705 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.861810964 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.640573773 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.620274431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927207159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864633541 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927152938 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938263124 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937657538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.124670308 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197253062 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968910432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.612611301 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.968810347 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937269092 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.931420948 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927574405 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438064502 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044434965 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057730873 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968014284 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070388305 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.940189811 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862362661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.9342795 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932719719 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93028017 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.927740024 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960875552 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.621601618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30927798 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189450914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541449143 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942702971 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.641832527 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.985724466 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92430844 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664051392 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172267881 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.961978141 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945233243 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.941335334 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.712612385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626629998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497324844 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237174254 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22624323 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360605315 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.079597689 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954734864 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267455837 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863751018 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.492108796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989190355 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27456567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874503972 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012305661 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.575494019 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269358453 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943431483 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158428361 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319675798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.734019694 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06724796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140770742 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964014409 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.019838074 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885773504 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.214360372 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073821328 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624895462 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129253731 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26684846 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675095342 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.049419821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.931590224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613736853 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015578361 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.639482711 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104981463 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.063171895 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926573014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404234551 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935526535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.158482955 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273692445 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.035039999 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.052172416 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867615303 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.943041044 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941376327 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.934292639 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.930005799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.80953972 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.183861501 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941005508 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864379168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.998791347 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209235729 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.834283158 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.935885229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931330468 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217157911 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399961672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09662019 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.969521084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.443528651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938523931 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866650515 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864711899 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.623368376 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939234832 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907584517 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130565914 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.036686478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848329423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945163702 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178834337 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188822715 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.945592047 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200465362 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208185038 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631454009 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957147929 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.031877575 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666090591 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.037033785 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931887923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16908959 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687893071 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156835035 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.985480413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.884477417 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.933795331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145607498 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935840597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900208014 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158571533 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.655063003 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.943403028 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243544656 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006677739 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.900318322 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973253576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024490484 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944724951 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014354416 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944887419 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.946060939 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945053457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979836155 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900352976 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.051366954 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948715355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028111658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05193157 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.456505192 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.939880116 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204738505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28843902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254684693 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994170624 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933746071 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936474616 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869010587 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081844939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.159414221 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210440917 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064813315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.049258234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960256369 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664417517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074670882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170847347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209911315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.831348031 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381382292 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972493013 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.936804425 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947306508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.146902449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139566776 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226853632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072702255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953832805 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287930975 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210778848 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.935847948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93744551 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526386575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.023865109 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624952295 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974787299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89962896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207947893 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945888043 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313574303 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958132386 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.096778444 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.71073693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.619866326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226889631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921117575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995456354 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206897478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314205349 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250121868 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005172396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948432163 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.052372722 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084837602 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.818358588 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93698804 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937831079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986100451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.64873377 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94804156 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20874432 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247952171 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.935092727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.816414097 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95898094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947825057 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160619291 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196965407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189436647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948043872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94309721 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.75603078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209429199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997663863 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873079986 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.940148396 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038957936 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185723622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959226538 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391260189 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.650738744 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202945126 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.936003152 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961486465 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031158441 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293015424 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256330769 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476144638 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140789111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524615262 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450316167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236476601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.945092505 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.024308299 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240433872 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.943687661 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.964623582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975636713 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.204149734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249547859 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.974505686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.622653854 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.910086704 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283924329 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50413463 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878464305 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94786459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.002906143 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940842249 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069983496 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949768246 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.821142609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031371209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.723086913 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218982172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943391265 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.927214906 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.728157633 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153160543 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974095892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084714862 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939790002 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.616498022 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.291066792 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199678384 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.95707416 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.946857695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.945652182 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943603591 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931616282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.139042585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.139049822 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212338187 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.978888589 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.976319615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947719676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.158071964 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154749334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.905422522 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07544642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95815886 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980666249 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849223363 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451619242 seconds)
  done (took 1701.575078867 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974537321 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.969119073 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.997302497 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.980310842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976522695 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025990895 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.021673364 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997277377 seconds)
  done (took 57.820212139 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.942781712 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.167632482 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951996764 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.944625394 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.952676782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.945617786 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.110151007 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.951985937 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.951266259 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953856695 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.946595279 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.943279405 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.258737251 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.963731191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.944769138 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.925334486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.952182913 seconds)
  done (took 75.70400066 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.945138293 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.988853004 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.965548154 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.956415441 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.985111227 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.953673047 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.786353162 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.954575592 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.948652536 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.088821369 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.572368522 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.949341649 seconds)
  done (took 87.974871297 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.954648805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.954276329 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.952849473 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.951506954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.953227108 seconds)
  done (took 11.646693015 seconds)
done (took 2216.870557952 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.199543004 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.159308866 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.168145238 seconds)
  done (took 6.206952625 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.093912165 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.142434514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.262988254 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.269317412 seconds)
  done (took 10.649768258 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.236949104 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.334136372 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.15418518 seconds)
  done (took 8.603249097 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.345916364 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.952295188 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.052812006 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.945832681 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.945891777 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.944647477 seconds)
  done (took 22.715818796 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.949343238 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.951636604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.948326955 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95469495 seconds)
  done (took 9.682697348 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.931750299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.681563213 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.930611409 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.945314826 seconds)
  done (took 21.368203903 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.707986789 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.709410222 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.693172742 seconds)
  done (took 9.990431733 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.507174378 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.863581818 seconds)
  done (took 9.249900478 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.204168823 seconds)
  done (took 4.082806284 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.080456652 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.213608571 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.405689012 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.432404585 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492210667 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.802463073 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.254631474 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.187549369 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.334219532 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377019873 seconds)
  done (took 25.461233809 seconds)
done (took 143.44236847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.334102684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.188609379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.150084867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.331930696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.178887507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.151375624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.142614405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.313140155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.80276775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.798982638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.292464106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.1829342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.289724848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.194333662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.29899378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.321952639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.257322625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.36217011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.986130696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.224218964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.118612405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9315019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.129833105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.946984474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.257606478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.104811562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.509942538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.31894568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.143698594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.51952393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.103788153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.376514057 seconds)
  done (took 174.145338577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.865585081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948791326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948579651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949264316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.630314378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.949613573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950123153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948904076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.200605095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.186936777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.949037084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.620120554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951229396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.949609586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.949922395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948165324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.300913678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.894208538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.950012829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.950187194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955439841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.534231453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.955155767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.585987089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.31452047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.96370692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.949974235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.965513845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957268548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.958195006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961501505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950027776 seconds)
  done (took 211.978907626 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.952233896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.950931411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.949545567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.950548268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.956752376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.949188521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950486901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.949783368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.500331068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.51491538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977693931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.9587932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958362604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951852108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960347083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950962119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.980785796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.960866058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958823362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.960268035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962115186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.750143828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952727057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.752995665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.953858094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954610776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.951552475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958605044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.9599132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961859885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962536556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.951382687 seconds)
  done (took 223.211922384 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.15483151 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.960269502 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.960236386 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.91426071 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95968886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.959616052 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.951265168 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.156500954 seconds)
  done (took 19.917593245 seconds)
done (took 631.14729777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.384996533 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222546595 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130417181 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.983268599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.221548894 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01043483 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.980040405 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.042285673 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.699667448 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.043710618 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.620495751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.994178225 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.709856664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.999179674 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.107207564 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.035631701 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.513972284 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598545368 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.155078394 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.059570909 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.143318049 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.921111892 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.049429308 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.732514668 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.727653662 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.962135756 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.165534264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.514966079 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.986854233 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.147941064 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.717057978 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394837802 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.987316034 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.97719324 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.028160725 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.011561914 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.341468334 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.985836943 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.104165907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723193308 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.045176448 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576432315 seconds)
  done (took 106.64348494 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.950236269 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.951003603 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.950713997 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.94999814 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.952162612 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.949959334 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.94989828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949695616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.949133911 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.950523578 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.949161555 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.950453328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.949896984 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.950504303 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.950266227 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.949437084 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.950018955 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.95269721 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.950910795 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.94942956 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.951674666 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.951289841 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.95198228 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.950646096 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.952100664 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.95204228 seconds)
  done (took 52.613909255 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.972957928 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.109256059 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.180387034 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.979932778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.966125328 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.969984519 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.984931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.968426034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.967854935 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.967526885 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.059624736 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.967947448 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983377147 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182839901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.976305495 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.963659596 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.963815697 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.964301857 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115012182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977422519 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.983791697 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.967956531 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.98271342 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977073432 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.967273135 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965039061 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.968251417 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432568637 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.972935438 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060264166 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.00667434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.983876128 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.39948131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191061393 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.014733788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.96966427 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.965444037 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.06529331 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.971456749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.966526327 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.984542376 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9707794 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.187051906 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.463048143 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97782834 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.965359258 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.440454662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.068885037 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.006086023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975944463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.193492095 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.978187358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.967730962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.967606421 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.003829842 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975640267 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.96645492 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329737019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.975182209 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985322815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.970859167 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.967928084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124020381 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.973095032 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.112508432 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.97560663 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.975076851 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.969208503 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18691156 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978596968 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.47099684 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978873796 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.966694981 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.061470627 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.111388877 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.464379117 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.980104751 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127494785 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.417012887 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.989176349 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.975381703 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.422239001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.99252979 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.973794073 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.969832774 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.969340424 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.967897876 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.012324111 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.984194677 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.403029647 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.469988809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.339544146 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994391621 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.983543941 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.971157598 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.331600881 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.974713196 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.970183144 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.179036905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.484275323 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.978977559 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.977323956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.455999161 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981537535 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.987233381 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.977761099 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.192272822 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.98059775 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.013877517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.9703301 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.976913454 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.972239422 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.988657116 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.976044375 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.969703704 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.443989443 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.075974778 seconds)
  done (took 243.400922971 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.965571286 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.964936574 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.96569584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.963829463 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.96403118 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.971458398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.96604064 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.964182112 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.971314044 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.964157439 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.964124379 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.967580144 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.963931987 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.969132647 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.465994209 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.975096824 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.578604986 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.968177784 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.969762049 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.966587877 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.648820635 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.973625233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.969628073 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.968025243 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.967893964 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.968895309 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.969948133 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.005420164 seconds)
  done (took 170.821124714 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.975441486 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158463289 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.990236728 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011293025 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.981513998 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.971212864 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.999848927 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.99411792 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.979501446 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971585486 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.973168437 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.036482155 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.983930548 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099972494 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.00441885 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.004401028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.079154272 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.979713416 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972755237 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971735873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.003595871 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.969458953 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.037383979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103033355 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.990686578 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091296279 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.977918465 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.975535569 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975804175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.094481244 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.987606627 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.035444076 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.002741894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.99353193 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.097180857 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093308913 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.081335528 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.004321601 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.981988705 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.974221 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.972722805 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.964088884 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.093853509 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.993153593 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.97829239 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083652485 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994766025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.979792708 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98612541 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.974394814 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.99109927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.994157106 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.045665154 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109654249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.010457442 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.001435605 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.0029718 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.260755008 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.985473825 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.076955772 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.968546167 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.095375907 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.996581606 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.966180986 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.975397671 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.982733913 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.005752818 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.007526061 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083206227 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.984521303 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.079315344 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011532837 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.984042712 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.976164728 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.97831992 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.094706665 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.101725124 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.013094412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.014692481 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009054381 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.973575557 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.977974353 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.965626403 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.996034852 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.980514458 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.093215075 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.101436158 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.986883729 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.978375865 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.978276897 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.980018762 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.004969829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.105064152 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.016841935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.075984154 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.046059888 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.054521204 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.991872778 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.989628501 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.980736918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.041884471 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.992460943 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.989576659 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.307571272 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.05130964 seconds)
  done (took 214.002567064 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.073897477 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.44367501 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.030848843 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.03576645 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.266972853 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.409759081 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.753694682 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.026441398 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.027553867 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.054201047 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.193157573 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.087954501 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.040915699 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.015592268 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.434467658 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.017305757 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.027741655 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.049644605 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03142188 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.560774867 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.334419981 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.154949519 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.027306476 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.131484424 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.010226644 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305168764 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.350448354 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.413182206 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.061583695 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.37273057 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.363128496 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.714085884 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.243657805 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.273905496 seconds)
  done (took 78.251465868 seconds)
done (took 867.618858268 seconds)
SAVING RESULT...
DONE!
