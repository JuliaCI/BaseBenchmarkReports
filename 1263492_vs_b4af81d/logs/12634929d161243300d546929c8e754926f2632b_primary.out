cset: moving following pidspec: 19562
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.560976714 seconds)
loading group "string"... done (took 0.524566916 seconds)
loading group "linalg"... done (took 9.718536275 seconds)
loading group "parallel"... done (took 0.170860065 seconds)
loading group "find"... done (took 4.528179736 seconds)
loading group "tuple"... done (took 2.087460424 seconds)
loading group "dates"... done (took 1.411854399 seconds)
loading group "micro"... done (took 0.194945531 seconds)
loading group "io"... done (took 0.521425106 seconds)
loading group "scalar"... done (took 58.371371179 seconds)
loading group "sparse"... done (took 14.384545061 seconds)
loading group "broadcast"... done (took 1.730184124 seconds)
loading group "union"... done (took 10.563665114 seconds)
loading group "simd"... done (took 3.637881884 seconds)
loading group "random"... done (took 13.783914421 seconds)
loading group "problem"... done (took 2.271811311 seconds)
loading group "array"... done (took 24.350938901 seconds)
loading group "misc"... done (took 1.148425159 seconds)
loading group "sort"... done (took 3.812629245 seconds)
loading group "collection"... done (took 22.266061837 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.691205564 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.208861197 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.178990568 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224757073 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278532487 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168187868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159091111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169958554 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.686586053 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208493832 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1372259 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415062279 seconds)
done (took 6.299488155 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.306588638 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241126613 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18610097 seconds)
  done (took 1.153699993 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076209552 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156589047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109036002 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094884901 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097355886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109699704 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093570698 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109663946 seconds)
  done (took 1.495948123 seconds)
done (took 3.7570022 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515764749 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.952337934 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.537463109 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181724436 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315722272 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306169101 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263898992 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221367815 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092171079 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085713693 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175476365 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.441266169 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388518749 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.996304768 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069446121 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094244596 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152544678 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.839633378 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079457101 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109695094 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535417458 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214218862 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115453368 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108286326 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186102786 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134397258 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141790447 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102042445 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.70531958 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136312656 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.219573174 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085194214 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139554269 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165967335 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214484956 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111601762 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725404816 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205341057 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099741664 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102037417 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.752403012 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125718431 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207793324 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106903119 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068525265 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.172746967 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1008168 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095366737 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095768254 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086783941 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177475222 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.495775545 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106519132 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194155975 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094189632 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.767346462 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098250763 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278655337 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125630431 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094004901 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091857352 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087029852 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167953969 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09356106 seconds)
  done (took 20.712794274 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.16799783 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186988443 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077411659 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159310272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121832043 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099076216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084491052 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078064187 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127754514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183507344 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14101891 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173292358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094295301 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091203637 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171035017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231119404 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129875454 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104453576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089442939 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108404707 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12410419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096709924 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109344003 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091457021 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173334123 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207180536 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11247806 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122644925 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089814145 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09550586 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144255495 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144679571 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092957492 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08893156 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172400415 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124172006 seconds)
  done (took 5.353750153 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24628935 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104023424 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.253670247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201667405 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154416145 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184666849 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176318022 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301887342 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.247133172 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16535769 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129387124 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097024489 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079696448 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081397083 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.188148647 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099569645 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.322182451 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.194983943 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174041057 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165515671 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119243167 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099678737 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723936403 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103143843 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087349097 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095768184 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082534169 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226616178 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095326996 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.086248747 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084586595 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122104075 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116491979 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208681565 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085639313 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122291529 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139921914 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094569428 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10493604 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207721317 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122237123 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078937413 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13348569 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117718601 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130907429 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094149473 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127020761 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226686857 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088081662 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13115753 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.083769382 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199116103 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.159702781 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08492309 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296562921 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130234857 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102503118 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111544003 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.796521891 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132940579 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083234188 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080097616 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115001147 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080498365 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.815696186 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128091568 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.362791665 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082751095 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155880228 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099019575 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121370602 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085932296 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085359388 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12945508 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087024265 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09817247 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088616856 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079926504 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108604663 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086790646 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113048384 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104937785 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080430968 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148587401 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114033426 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110743761 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126102558 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09183996 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086919433 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130989493 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084101617 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10781364 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169438096 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120080843 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084130671 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130628622 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099704299 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147638397 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087733084 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.274190174 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085253998 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12256384 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103770668 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128535829 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100559156 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08057512 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102645874 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080088607 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081304892 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161519282 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088508951 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081224644 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106727329 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093689219 seconds)
  done (took 29.604558723 seconds)
done (took 56.395048422 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.425915893 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082970328 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082708702 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104748446 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082184752 seconds)
  done (took 1.585420464 seconds)
done (took 2.369886004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314694836 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203135538 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088718404 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193257746 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088372271 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199472573 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184862474 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102764814 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210671483 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086744271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197140991 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086094817 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108517292 seconds)
  done (took 2.869591168 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106252268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106291589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102660191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123242348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0868461 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105251303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121699624 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109773875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10210202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115941839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08769502 seconds)
  done (took 1.94965987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102355194 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104693202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092500729 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119455833 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08663462 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098402737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118414989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10819665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100157779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115671273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088721827 seconds)
  done (took 1.92236813 seconds)
done (took 7.518931144 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232635729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.100656166 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192562267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245988753 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.35515955 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297895703 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.62135597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202966033 seconds)
  done (took 16.160416978 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.199019302 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117993915 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092067713 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0970108 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112367292 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09738054 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092263618 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112439438 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095262254 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096493346 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096329848 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114205515 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093144666 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092282336 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114725902 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091621149 seconds)
  done (took 2.562449177 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146866931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.125440672 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118218804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100391468 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094778254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119602779 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103740637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118533509 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095955988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096478889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103454287 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116696264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09901734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094464247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116212124 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122300329 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09402257 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116804378 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118101401 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118353598 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100552172 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098128331 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117302696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100209252 seconds)
  done (took 3.506850697 seconds)
done (took 23.010202345 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149556658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104053455 seconds)
  done (took 1.045254428 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166239366 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184482957 seconds)
  done (took 1.144369266 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113401571 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091872228 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140232567 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103810896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09206925 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109852098 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11812815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092918659 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.11080599 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09279099 seconds)
  done (took 1.864333237 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095698203 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095943415 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12400271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169981462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121324646 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094457403 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095529746 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114777584 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097264603 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091335776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115263749 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109313342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096726965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129324266 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097240089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09649139 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119277878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096134083 seconds)
  done (took 2.757651584 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092081262 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094056863 seconds)
  done (took 0.985697414 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096147492 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091661726 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093999104 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114049 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091428456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091079948 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110777215 seconds)
  done (took 1.490891195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.537876989 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239255983 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.379984703 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073690726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125622051 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.462053868 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105832662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074190021 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094237612 seconds)
  done (took 2.931150672 seconds)
done (took 13.01827041 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095014946 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.245976321 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.646464679 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11417227 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090935726 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164686725 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319186749 seconds)
done (took 2.483513022 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357316388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168330204 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086433268 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093957688 seconds)
  done (took 1.508368836 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083972271 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102160827 seconds)
  done (took 0.997221295 seconds)
done (took 3.31801139 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092575949 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125410082 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109676727 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090610754 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090978399 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090618786 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.111609025 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091078412 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092150684 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090683459 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.111573895 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09095577 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090985662 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109693419 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091504374 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089604411 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089155821 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109002549 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089814843 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090025484 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108139799 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091104881 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090242621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090013611 seconds)
  done (took 3.176025946 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112898296 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092225205 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112818956 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096241708 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094931486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113556549 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095803384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092459104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114744689 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093498761 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094201714 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110840631 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095851854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092375713 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.11535154 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095523041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092045155 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11198568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095709377 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095623613 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110558891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095546019 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094495117 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115505261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095900324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092551225 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.1119282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096357993 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09467859 seconds)
  done (took 3.833723618 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098808445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087369979 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090323916 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1178821 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089187738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091309098 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106594141 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092873403 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092007231 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089686336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111858568 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091460444 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090010329 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11023867 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092519516 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093569161 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099441137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110314866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091457021 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091943606 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112411431 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091808881 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090353738 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090577021 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110159749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088530392 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091086234 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108929704 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092244481 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090631706 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093263047 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113240308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092017916 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100065728 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113323349 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091971751 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096635613 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10666559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093340431 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088566569 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087289871 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.111368701 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092323892 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097151251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110790625 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092191822 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09080603 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092621065 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110595629 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093275758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087718697 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.109717374 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094304939 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093378984 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093751726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106690382 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091142665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088212265 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111301653 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09176537 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088059313 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088438201 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115012182 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091970355 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105320586 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.117207572 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092457638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09164671 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110719317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099389315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093473688 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120145376 seconds)
  done (took 7.872194642 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118044131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100101487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111435889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092921453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09242977 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090805472 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115804112 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092310691 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092860621 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119889757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092701244 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092982424 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111724543 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093616444 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093117917 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093191739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117298506 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092571269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091617935 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111643248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092061009 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096724731 seconds)
  done (took 3.025860272 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.245890417 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097782476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140185494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125320754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109440802 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123412411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096468273 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097625264 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113930549 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101853176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100383087 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115170163 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110441348 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100737251 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121077897 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102588744 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095217625 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122462919 seconds)
  done (took 2.943303405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107536301 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095711752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157848145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094894888 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093333447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113439495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099865283 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112880695 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115227921 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095166152 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100565442 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113087216 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094946571 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093302647 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112163356 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095590857 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094531923 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093304393 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120645579 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099053448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098684337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122204437 seconds)
  done (took 3.149017064 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109110383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094511181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1308848 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098011346 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093542272 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092962101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.118512347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094055955 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121443306 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095635486 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094192984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093401822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128455791 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094828679 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098778972 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113673533 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094329942 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095046164 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113354359 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095016413 seconds)
  done (took 2.897037186 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198895684 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129859739 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109929412 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116418435 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131324312 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110812625 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137672884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110577399 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111486035 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140929723 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113348772 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109231418 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138421723 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115542207 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128001054 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119183662 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11665408 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138406636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111130403 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129452496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122980094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109274511 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13862091 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110356422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109093971 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129994464 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109455749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133219874 seconds)
  done (took 4.309013807 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095256806 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092406514 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091683725 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111722936 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092952532 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092405117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091083091 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112838791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093441212 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091980831 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112415273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094155689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09241245 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091784996 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111819387 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093583898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091640215 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111489527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093806622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091746653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09233304 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111825393 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093185523 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092191472 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091456881 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112937965 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093852297 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093268844 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11345088 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093487168 seconds)
  done (took 3.764577256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108181704 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104045703 seconds)
  done (took 1.043058618 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101823214 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107309806 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091764323 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114014847 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100338807 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092474189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120756627 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100008318 seconds)
  done (took 1.662000943 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.170042503 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.194191035 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097333327 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124462196 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.17207265 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184357591 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131687765 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119590138 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093195161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085540627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185981052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085056208 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114612829 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091857561 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093228755 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120317255 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094907809 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102556757 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121141872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097191898 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099333093 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11716455 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096877613 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102681703 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107894936 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097030146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097734635 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124821249 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091610951 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094112806 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111177406 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095124108 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098147188 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0978688 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.116113998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.172032142 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123766717 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090273351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093901816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120813059 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128271689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094065663 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11632394 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093491987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095460533 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118624023 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100005595 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093903352 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106987488 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090675008 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094173568 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088061757 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.115425292 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095100222 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094167631 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121466773 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096549987 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090086526 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.111233768 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090044412 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091448641 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109655215 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096964356 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096124026 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11472674 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096511504 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092298818 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11396575 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096971969 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094276095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112983851 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110319895 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093702698 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11794754 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100011671 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096011162 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090385586 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120527407 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092443669 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093406711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.119154049 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123680812 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094583257 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109758859 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090246882 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099726439 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.116014544 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098081886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087368862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121878767 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096435588 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095265047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107771735 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094001339 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090289205 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096517581 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10747959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095610902 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092637199 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.120199503 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100452439 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092953022 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115672042 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100506287 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10049574 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113582251 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158845409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110663165 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.09064337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096897238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098007366 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.110037037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094728596 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092440038 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112202607 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090799186 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098387511 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114803915 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097018972 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098162483 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11497761 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097577632 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095778939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093664355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.112160003 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099261435 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103082592 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116965712 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097147759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095197092 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.115916835 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095954171 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097809086 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111600853 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100789074 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09112744 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.114026022 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096934254 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100003569 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094768126 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110649406 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094338253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094611682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114714308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098015676 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094831472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111267012 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086763337 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094694025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109576434 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096339835 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103032585 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11143994 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097827035 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0910877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122737046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093406221 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098932902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098914464 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120321376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100694159 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086650894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113580924 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097915594 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095646939 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112250378 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097224933 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093725116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121248938 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088415922 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098830725 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087577268 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113963864 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100784953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095309257 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.118741217 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091619332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133951671 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126301536 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099857321 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094225948 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113813146 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100310311 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093284837 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118215032 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102002426 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099811296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090651123 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114077705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100547423 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090397459 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.118641763 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09365765 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095514311 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.108040345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096739466 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086859859 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118843884 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098193422 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0984056 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099301594 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117646176 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094763517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102834167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.112039876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098673093 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086207331 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119912525 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105891888 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100700795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120745942 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097375162 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09213071 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115385273 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10414823 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09651325 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09407984 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.118467578 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089455091 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087081535 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121024887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0989204 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09040137 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11563356 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101444814 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096160063 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.123796958 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090216919 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098917956 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099464464 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111735787 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096243245 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089998386 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114220879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101960522 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087354405 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.112146943 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09725706 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099310325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.116994277 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095507955 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096793594 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.121273103 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098124 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096370635 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09293612 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124687923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093674691 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095299689 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.111657705 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098222895 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088074259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116326595 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096539441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092028742 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111296764 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100321487 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100565861 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100024592 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115708149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099219182 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110946301 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122976602 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093645568 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10000748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111553222 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089452367 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09161179 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10805997 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09885887 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092432145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100432465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.115295737 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093694107 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099000369 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117913458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092481173 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101036591 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128556711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090140094 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088459992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115896442 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095641911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092212285 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111817501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096921124 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096223968 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119881586 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09882395 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091720602 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115493877 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102677093 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092183929 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101468979 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.123018646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100932038 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090548596 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120218011 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094228114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099241671 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109884294 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09535612 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095466749 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114577489 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092835199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094852215 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111366606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089878538 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092666673 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101008236 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.116749554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099504343 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094192914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114364404 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092885275 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091181288 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122571313 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096051181 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101791924 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115882963 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090014659 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09009798 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100602039 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118718519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1018911 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091280463 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.121086208 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101689049 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09954122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116178391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.1060227 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103177017 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122203389 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102266566 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088575719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113466035 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100569492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096303168 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09866108 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.120004646 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090308202 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097370762 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121741668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097100686 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093709752 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109376689 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097304273 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101678503 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097961619 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.121224493 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098211093 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096594546 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.112828873 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099824985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100821062 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11635914 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103560655 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094998603 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.118515769 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09302398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101416668 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097117029 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111698213 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089233484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092575808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124349262 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091055084 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100230623 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11996337 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094125656 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094112457 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100301722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114089997 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099416971 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100420032 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.11435728 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106042675 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096573104 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115374588 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100892998 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101488674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10899284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096093575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095341663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123493148 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095354793 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101382376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095819377 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123608526 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098554921 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099745994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122826373 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101324687 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089331611 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123811345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100837893 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099160724 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113536575 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096687993 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090902202 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09426925 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124751618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093404126 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103326477 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124046082 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095041206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093243631 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122597504 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095426171 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102621779 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112786689 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098724426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090090996 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118864138 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096763772 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102577919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092866418 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.113255184 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099986179 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099734121 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120476564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098953436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103657455 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110954962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090298144 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099005816 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092669606 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129946133 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09910094 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093605758 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117402639 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097440324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097625403 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124427345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091876977 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093535009 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11829081 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097990882 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094904038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111340905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101639112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094940495 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118132201 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096048247 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090825237 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095195835 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124809028 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094396571 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091641542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11614354 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103680503 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094722869 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113997039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091473573 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101832782 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119661096 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104105767 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092613243 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117645896 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094936234 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098836033 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103340725 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.116607357 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096832914 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093642704 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123486792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101773626 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089991262 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.116313254 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106905214 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10119136 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119018627 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099738242 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095184101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124105796 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103293722 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09908341 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089839218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11325281 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09537372 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089989796 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.120721358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100926102 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095120755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.116074817 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101975747 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100934134 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119946887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100440077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089850951 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102853443 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115199426 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099538566 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090156158 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.111469762 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099093328 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10107675 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115543883 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098331638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098331708 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098215911 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113928245 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093245168 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098337645 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121977523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101905277 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095379657 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116386798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103783309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107673888 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118887535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.098204737 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103275633 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124540418 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097297987 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095216507 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121037388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104154935 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098332896 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101462064 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.116568804 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095865194 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103158928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124637567 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106648758 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094386025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.112385031 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100663988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093912082 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112709305 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100806814 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103456452 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123509281 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097503391 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093944908 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104144319 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123681021 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096003479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09403612 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115489686 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100730198 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093153606 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121922558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094520259 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102235626 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124787167 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103050395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10377395 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111619362 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103306922 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098706058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124554596 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098680705 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091207199 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090068926 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12040791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.1038271 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102274948 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.12093598 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102333544 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100208903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095710564 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118918335 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093907752 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101866655 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.123965415 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098056603 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097018902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.117283839 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097668007 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096873911 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123310793 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104038858 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097085879 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126501701 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103754534 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094858641 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092733441 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119775497 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099048699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096607886 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123290887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09491591 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090105243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122600157 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104527468 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096071016 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102788141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126563162 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096130171 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098475861 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126799364 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102153004 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097127295 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120117858 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10081261 seconds)
  done (took 63.000084928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150531363 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10350136 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120534741 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098765143 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115700537 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123260576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099968648 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100063842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122476818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109626511 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100100578 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118709928 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115671902 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118760074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137175824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108027215 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118845979 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10154329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098566724 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099372553 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135018078 seconds)
  done (took 3.285914501 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119028265 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111125374 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131070229 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112725159 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104439328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133561118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110318498 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130539575 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113952968 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105975209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136164731 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108582173 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127150736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109113107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10680625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127956914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113354359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104612325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132720998 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110695851 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107256726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131706693 seconds)
  done (took 3.474473465 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.133438826 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101348992 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096286406 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12233078 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10403376 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098072457 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123582545 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100436794 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10692477 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093535917 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113376778 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094987987 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096895073 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119967071 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093895879 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098790007 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129786057 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102385925 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103422649 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098038375 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112416949 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099880788 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099622236 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111035978 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106573189 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103063315 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098730711 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.125297288 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091995149 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101452217 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119978385 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093936736 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08958744 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088664139 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113013673 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102727589 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100772033 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120813478 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099640953 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09037064 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099355092 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126369421 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09071838 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099388058 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.1210897 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093792444 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102370699 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098209067 seconds)
  done (took 5.923667877 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130802039 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.422151658 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103174503 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137644389 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138419558 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108387665 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101146312 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138654573 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099502737 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124935301 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116327711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111353686 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128746959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105562376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10375656 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127814228 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10517825 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10152562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130675695 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102862103 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10663025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12884774 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112550835 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1349555 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106023608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102256858 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123713358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10705712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10965752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129164959 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106654904 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107482174 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134971005 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104924027 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102864338 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125878088 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116264016 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102802877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127005187 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102149512 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103297843 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12942847 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105119862 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135662782 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106571234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105274002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125606754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101705462 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111195146 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12616304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110488492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114912238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12707873 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104791538 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105608331 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136057245 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104056808 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103615481 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.129054609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112609152 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101315188 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128639333 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112320149 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102441938 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.132393721 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112465069 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125740851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106623894 seconds)
  done (took 9.182807535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137109684 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106713989 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136966789 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115757388 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106248288 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130310425 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107194986 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106875951 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13073087 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113183248 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127679085 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225732686 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127449866 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112230543 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106059786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132179448 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106700859 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106644288 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132479976 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107274256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106170764 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138324713 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106232923 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137883945 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11865594 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103532788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129264972 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107842345 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115079648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131050952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117605388 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129008724 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109111362 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114392131 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143071825 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106877557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101969042 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1301852 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107988383 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107502637 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.127668051 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115838124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129586311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106090795 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10753637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128871626 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117298994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11803121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134542179 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114245254 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106256878 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139382808 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108331444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128410953 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115348258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121944557 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138679088 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115010994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130869645 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116159604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115056391 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144654359 seconds)
  done (took 8.419855626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104839798 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101629335 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100301093 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124048247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10196157 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100288032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101863163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.124171377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100634585 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099602401 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122290132 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100821969 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100311289 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100033322 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122995599 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101051747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100264636 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123108602 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102024985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100403689 seconds)
  done (took 3.033488546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115242937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117806671 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124967008 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109172542 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102111588 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129843327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103446395 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102422312 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101535956 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127248793 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111511038 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110365431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126442615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107909114 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132313753 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109244897 seconds)
  done (took 2.736898596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124760558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117994544 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211940988 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104128675 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128253669 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11046279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102713829 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129023809 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102275017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108317405 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105049113 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.131242458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103066738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103208516 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125465187 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106502509 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101107411 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128568654 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103963919 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218345922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107711043 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104858795 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127763035 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107798833 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104945468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131599556 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108873831 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102451715 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126992127 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10428449 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103999469 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132046191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104281347 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107596434 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103727576 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127304736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102846179 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104412998 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128893626 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104961113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104426967 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125588456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104935481 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104953291 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100785721 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12802941 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10201416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108113399 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.128828812 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105559512 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104153608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130735969 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10801604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11092472 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131930674 seconds)
  done (took 7.321816622 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120059681 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104748726 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136085392 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102593703 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104536408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103191614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128064679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106369951 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103104033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125526298 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105884694 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10471164 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125725765 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106878606 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105346847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12636132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10316256 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104703398 seconds)
  done (took 2.924193502 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114906441 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103064852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107201202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127843282 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10326348 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103007163 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124881802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103549551 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102534407 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101514724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128919886 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103077353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101680528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126184133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104153119 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102440751 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124846951 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103570433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103716681 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100962908 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127475638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103001575 seconds)
  done (took 3.334590523 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120925852 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.216100595 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109766193 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.22360581 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100092895 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099326457 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135632471 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101172503 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139579272 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100550775 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099242998 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122011535 seconds)
  done (took 2.482695321 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135564027 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140105456 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127629288 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105202973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112414993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131442692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110120219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107428466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140589037 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119288144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129897664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11711182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115566023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139807723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113685407 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134720205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109038098 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108134701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103874313 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145982111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106867361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139637869 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108712707 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107381533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131428306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11795222 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1383259 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120992691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109382904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139965215 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114100822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107257005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14012138 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119066957 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126356362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117638633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108211246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14550712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113548727 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139431557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106374071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113294784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139840967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1145506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115975362 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13199381 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113297088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132062883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109266199 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127718266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136218509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117214696 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135310572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118427071 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114870543 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151726976 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120137274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139859545 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113722981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142157463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117561877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113823832 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139068802 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120245738 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134514661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118324963 seconds)
  done (took 9.050662518 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148595153 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104884706 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132368648 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120538653 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11605142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134379798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109309291 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130675835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110441908 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104412929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175772701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109454631 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115340854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140142123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109590263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131288972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111033464 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116289229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127286647 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130660261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108656695 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139948243 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116041363 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14038524 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120040964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134331468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110243698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109501774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130891156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110535215 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114276194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132140616 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118341725 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105377367 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139631653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110852015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109342047 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137240776 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109440523 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11330142 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142322358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122463967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132572375 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109400085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118334671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133031722 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109330942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108761177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132561061 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105889932 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141411558 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121910196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118809033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141240866 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108217323 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131737912 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110063857 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108776053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131752858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11594135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116175807 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132004915 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131025112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132573632 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111821133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116704296 seconds)
  done (took 8.999686413 seconds)
done (took 171.657973131 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179446632 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217901662 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198379696 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188104786 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09462146 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.169237722 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139139621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199167087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096577505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095098336 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094275816 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12306579 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.205213456 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095777123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120161369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098717511 seconds)
  done (took 3.232821506 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189552596 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.33899227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109653609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124139808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101912331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099862141 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123887751 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10260795 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099467048 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132140616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100645201 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096287594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130870134 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097647543 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100170559 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122289783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108536498 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100688433 seconds)
  done (took 3.210405528 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126561555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155024881 seconds)
  done (took 1.212478347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136411411 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215179179 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285919599 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173154491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12178958 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141948707 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150642201 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13680371 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191629257 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136858674 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114099216 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097119193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150134036 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105138998 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115431159 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123022488 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129898222 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11325267 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138137748 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101722153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146752949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105489043 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106895507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136960015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181586848 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135135131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105189284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104695157 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124656285 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114899807 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105621113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14114658 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112531628 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181184004 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103909722 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178029553 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106058179 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12423598 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114686023 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099453569 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126426203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10474258 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113150353 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122319396 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103490465 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106502161 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127437016 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104359081 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108101875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132753264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108129881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131412312 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153023858 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131764451 seconds)
  done (took 8.009720091 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.884686383 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141471132 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099722388 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.027709949 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148395407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113453743 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.873428388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149610366 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251532126 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.898383307 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116340144 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107805539 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263651613 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259353441 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275178778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.383753828 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.709794311 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13799143 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130432019 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164724369 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108234015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146414709 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120395199 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518192293 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102057391 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100043797 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132890782 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110034803 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179563127 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102150211 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103678896 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196644629 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293325849 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210510149 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10205802 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123598678 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10079529 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186327325 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273570403 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221029155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17093305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121391624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101386566 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108548719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14455274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098066032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178605953 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190338729 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166603868 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128612863 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110425844 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111446435 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131536071 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152977624 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121992328 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359623734 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361929335 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100653931 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133958096 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112207845 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26805797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125280946 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236594961 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128569841 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21732617 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123515777 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833803586 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162175092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123877136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105810522 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107739329 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130557734 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107489018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190506418 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476143999 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134932172 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10641039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099985341 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236354707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123179281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101727531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180113966 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10274924 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109224783 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135257703 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11031298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190868336 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271025876 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112761546 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109475583 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129431893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114710677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102268383 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233822262 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228685016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176898124 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229195486 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108791069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180807419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185186748 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10698637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187910418 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109612054 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111492041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13242962 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224308762 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15627525 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104864312 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106538757 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131928997 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13691818 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104211087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134795982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162852622 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554395919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184306608 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099101778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12945061 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110375139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182861242 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107608307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26606924 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132766604 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161652331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132974102 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09929021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10968385 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180352264 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108496059 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133575925 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106825805 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133221829 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258351918 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220505834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135348776 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253718577 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175132816 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131667512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166955519 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134128509 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186506957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112646867 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107159088 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126764863 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823951705 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116150245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108279901 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130618565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184324906 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125482577 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104044446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10160049 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121345738 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810608109 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108172625 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098636356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102747912 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131289391 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108385711 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132458744 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107952834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179655108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245029693 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110462301 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132614909 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102532592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181131064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102989075 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101382376 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124859034 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10383108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110861165 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130043632 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105447767 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192065276 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153069744 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251819383 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.63808631 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102827042 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102213278 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241207978 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124902126 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329180967 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109593057 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23642797 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182765211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097893174 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382174228 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162159657 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207652035 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105655405 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19208553 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099144521 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133058191 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155709535 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125044673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109621203 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178353686 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1144318 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110345177 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.318258209 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102917277 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250397694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100186623 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190089815 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103173944 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105624186 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350475365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103573716 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115912086 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180218797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105476192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126698793 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.640786654 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103993253 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113565559 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130859797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235401094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184361782 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112178232 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111028086 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13565922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155400628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230975252 seconds)
  done (took 47.913493679 seconds)
done (took 64.505388222 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277753407 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179426867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28401412 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181014709 seconds)
  done (took 1.951180873 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.283412018 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163494325 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240069914 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.125066114 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.244091934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.123465002 seconds)
  done (took 2.135466878 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.186551236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172867373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148985635 seconds)
  done (took 1.46123442 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207585615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220062202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333226662 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235583449 seconds)
  done (took 2.046793729 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304108783 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119768094 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125197555 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23933232 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257231594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21504215 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12579386 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182206899 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132528026 seconds)
  done (took 2.708238527 seconds)
done (took 11.261168058 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.230507665 seconds)
    (2/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.422354616 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.286182342 seconds)
    (4/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112834041 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.226532159 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.285188081 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.141689177 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.195401314 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.146215241 seconds)
    (10/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.406501763 seconds)
    (11/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.226922572 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228944547 seconds)
    (13/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.200780909 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.288564558 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.258805676 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107924339 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.227391975 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.146758607 seconds)
    (19/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.178276302 seconds)
    (20/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.347664671 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.406016854 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.156937764 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087234906 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110585501 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.277345324 seconds)
    (26/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.311369135 seconds)
    (27/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.245360042 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.145086746 seconds)
    (29/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136778986 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082478436 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089660983 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158391441 seconds)
    (33/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11250474 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133163791 seconds)
    (35/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.235172573 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.213746245 seconds)
    (37/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139359272 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113047197 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086685255 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.131046763 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114302733 seconds)
    (42/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174340117 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.221887644 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08223455 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102285004 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.144202485 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136739874 seconds)
    (48/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.169719907 seconds)
    (49/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.183406982 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103879621 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.280820627 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.262912623 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.163508641 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184135916 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.215432423 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.193540952 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.155567268 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086395694 seconds)
    (59/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.176950575 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.133368566 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079295977 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177432759 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147972657 seconds)
    (64/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.147614302 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.315076519 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.13513569 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124972177 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165903569 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111216726 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180889553 seconds)
    (71/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.139833284 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087368303 seconds)
    (73/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085664804 seconds)
    (74/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079547406 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079463248 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130621848 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.179783756 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086272912 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148952112 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.285640164 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.10939352 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108426777 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124285637 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.085648741 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.17628366 seconds)
    (86/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085422525 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081310409 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100439239 seconds)
    (89/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187356297 seconds)
    (90/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.146601534 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121445052 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.17353792 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087067287 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.134734592 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126444361 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111119857 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11165512 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082654924 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130922724 seconds)
    (100/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.140212732 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127409707 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.127266463 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169475951 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121089002 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130631696 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102341576 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104471386 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.166492959 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111433235 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090693936 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08235342 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138644097 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080811673 seconds)
    (114/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14432401 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103623233 seconds)
    (116/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137033278 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102424687 seconds)
    (118/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.081978931 seconds)
    (119/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078816307 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105548478 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11298406 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111546796 seconds)
    (123/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083492461 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139024033 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081495978 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087758506 seconds)
    (127/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169563671 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.112248841 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089174747 seconds)
    (130/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081723312 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079988734 seconds)
    (132/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.154115059 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113534969 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106652878 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150151636 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12674859 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156322253 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086700201 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.108795818 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084305413 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080668288 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105502802 seconds)
    (143/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08073408 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.109133501 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088695008 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112870778 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087946518 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130644546 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084209381 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11876622 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.141009203 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106149532 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086879833 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083115807 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08710102 seconds)
    (156/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106206872 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089980436 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11155881 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086936265 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.16616303 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103312649 seconds)
    (162/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087178474 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104134192 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107642808 seconds)
    (165/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10576317 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087772195 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108032243 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130696229 seconds)
    (169/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10682392 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111332454 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151790741 seconds)
    (172/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08098006 seconds)
    (173/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113409883 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102436071 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.113722003 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084468702 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.1032551 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083704499 seconds)
    (179/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.111934625 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084780195 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08171507 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111326447 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083184531 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.117268543 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106462421 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124574221 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086625821 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.114353997 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081135597 seconds)
    (190/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087928011 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105107639 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12990409 seconds)
  done (took 27.753079564 seconds)
done (took 28.724271363 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232976693 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133520401 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112470028 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112080245 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235820002 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119359522 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155094024 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114664511 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122410049 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.140672078 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103432776 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125190081 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13743305 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206288454 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14190785 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105421646 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103230166 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14903655 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127964317 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130052083 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.238032574 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105180414 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148628538 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104056737 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23700437 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105909348 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112160561 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139629767 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125571694 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112937337 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139556503 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104086211 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129155112 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153043554 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105090878 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114134835 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103326757 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112852969 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114883744 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11452029 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150020962 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114347013 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112533025 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12983774 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114777235 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112649311 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102978877 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141794288 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102704471 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113372378 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133835874 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129511511 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110848942 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128080882 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103786941 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104859494 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147368181 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104900421 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126915441 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102492433 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130951988 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104852929 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113414562 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129505365 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11314672 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104527119 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138900415 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115462657 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111785235 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130677372 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105058122 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11226714 seconds)
done (took 10.229126553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113169908 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150116296 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.236932014 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237737005 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132675252 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148607305 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117212601 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127269746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1432282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122971015 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141628206 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162908984 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241820835 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120381649 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11871356 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142987038 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115532918 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112042041 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240790955 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128130539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156188507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11972556 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157802539 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12125697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106783691 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166596674 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111964099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117223985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132800547 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11722601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128255067 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133312064 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11252646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126407136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.151053078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118159998 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120144888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.141884663 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108965533 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10739536 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144754511 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122983795 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108109907 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14729799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117417725 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122437008 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142450657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120808239 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10972352 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140355767 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110369901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134025702 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144509438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125897295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11907415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147362524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120682735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120454144 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136753493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121383034 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108307069 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132610439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109923336 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130144972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138045837 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122059307 seconds)
  done (took 9.909155138 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133306756 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137571195 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14458305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119473922 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113020727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127529834 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102132121 seconds)
  done (took 1.892740271 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110070911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245834264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218569764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246223699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243353083 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258130521 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128010063 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103697125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166782451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115098225 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248013871 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276948835 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114270816 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119321109 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250494493 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129978749 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223450552 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131265016 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117855211 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250451332 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120835478 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161979746 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118908068 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104274573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241448161 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105940358 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296579334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14891363 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114262715 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118864068 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146460175 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186526233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243699635 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118586169 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139306542 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218904024 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243080353 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117747026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.260440241 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135481056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.21633184 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145911642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11955836 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11928549 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.148080284 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206748079 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.152183179 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120396875 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117798849 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254982565 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142605006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218702531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142000879 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118868748 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115011972 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149098848 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126656888 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119195465 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253292475 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120757325 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247487966 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.24799662 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247558576 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24893389 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129644769 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248647122 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205918573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146315533 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114864397 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119758176 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.25100196 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11649554 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.144730276 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238577615 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122227135 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252095954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.22224125 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145062231 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11756942 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107727386 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145851927 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104609462 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241311972 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119449477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117184105 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1507749 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11859469 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11853756 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.138744738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128154565 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144660225 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118291299 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123978824 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145201076 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122275745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253911618 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11546147 seconds)
  done (took 17.249058418 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.1142646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106835443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10997886 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133529341 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106883075 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10696437 seconds)
  done (took 1.721716148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148375014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11974323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15397817 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120376132 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16770722 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25287657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26239929 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112555374 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167269176 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131888629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256979676 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258884736 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228832731 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.154041097 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261846846 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121861656 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26398315 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117791306 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128302419 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145043095 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118986639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122567961 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146658594 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246900182 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120641599 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120864392 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140308485 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129466534 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126703682 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.162867708 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123568716 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119049846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138025931 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113571636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.26200343 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11205161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114915382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.151975261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121650526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119800919 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260042985 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144667349 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127153949 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121972005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142388148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113031412 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121925351 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140553139 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.264131912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122178037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121237414 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149151648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122065103 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12185984 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139219449 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115323673 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121768348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26272915 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124177174 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141673044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121025796 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119090284 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143403641 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124417498 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120128823 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149205496 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113084492 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146403604 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118711674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120911814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122769173 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.148436404 seconds)
  done (took 11.95488749 seconds)
done (took 43.738220344 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.71751715 seconds)
  done (took 2.754462281 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.980180022 seconds)
  done (took 2.021603795 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.351521797 seconds)
  done (took 20.426537901 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.453602515 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499308048 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.14088286 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150341115 seconds)
  done (took 3.291020667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.850955418 seconds)
  done (took 1.916533869 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.310435077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269927273 seconds)
  done (took 1.628237432 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.752831418 seconds)
  done (took 1.815550218 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.549063886 seconds)
  done (took 2.598515147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.294910267 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246377629 seconds)
  done (took 1.603900818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.658912911 seconds)
  done (took 1.718389957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.818433057 seconds)
  done (took 21.886295039 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268781107 seconds)
  done (took 1.33158218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291620673 seconds)
  done (took 1.357861848 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.775590737 seconds)
  done (took 4.841803487 seconds)
done (took 70.244659606 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122248855 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119051312 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119758316 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143346371 seconds)
  done (took 1.556916141 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132353283 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120200551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149741179 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121572443 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126001847 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120572874 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146742543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12348784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118519052 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149100385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120994366 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118190169 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149543947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119213274 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116999306 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149142011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124567237 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119642309 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14903243 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121288748 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119996963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148266829 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12388838 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121863681 seconds)
  done (took 4.180713273 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123024024 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110145711 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111922822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.137294973 seconds)
  done (took 1.552616223 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134866871 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132523975 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156521441 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128795707 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131337512 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158166831 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118901224 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116860461 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145804784 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127985619 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135709786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160514407 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132730426 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121722742 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159064292 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115573077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120990106 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.160303066 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12781332 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128241029 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.149233712 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126741396 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124609911 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.159569593 seconds)
  done (took 4.340247807 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.202521424 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131841556 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179316797 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165389886 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181697826 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11929911 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147829971 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154004221 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126371936 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121762481 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150372265 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165149074 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15244669 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121976544 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119997662 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154318157 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133999861 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125771371 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194964946 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124448088 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154885967 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133643671 seconds)
  done (took 4.329923798 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129800095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111115317 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107258891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.139013837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123282297 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113956112 seconds)
  done (took 1.799222373 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115997712 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104822548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104897138 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.132028382 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109329685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.1047951 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103944224 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131864045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104652903 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104145506 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.13184435 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104639843 seconds)
  done (took 2.429800815 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213141908 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149931915 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257900044 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.442422741 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165811727 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19260452 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285463675 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192760406 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20904865 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139222313 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218309605 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163398362 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184761624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188761783 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172084453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162730959 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196109226 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210780435 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17487098 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24460862 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159259987 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211716029 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19189151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179746251 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140162866 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193446038 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121057293 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156830558 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17168964 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19638908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206424085 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152674443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16873703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197406946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264311614 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209332067 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27563526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136619049 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203332909 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19216885 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261359562 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170899875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222612945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155063783 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129549784 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214692664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181429147 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186233598 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161749828 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146344867 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215956373 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180831096 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200970738 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137205087 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330896966 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163441804 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143560505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209201672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190934755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230720611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209517216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123934545 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203670452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19274986 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24366227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171385412 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167604344 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154578455 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166905792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236310777 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213384398 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16153367 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240940555 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160221143 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17256985 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20044141 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157004812 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237860066 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171708427 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.149662677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153885979 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163446623 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126949943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189157644 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152058653 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246599376 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13171661 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345420671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208128143 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157559282 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193734134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160957619 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192698178 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148457007 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102413373 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174140091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161715956 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189270088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12909428 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185716564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139456141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154197751 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153607173 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123543713 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202080446 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135477773 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19343647 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169098878 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.16282713 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180887038 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178928899 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162530096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199518947 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221456444 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131841836 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132723511 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249750684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199927868 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138551417 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204604091 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224924482 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151706163 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135486573 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195647855 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224660063 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144028721 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230182065 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140316377 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165092223 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14244437 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204162694 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160292172 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190453339 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127783568 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193582089 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194764012 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157913586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140177253 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212765604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135335017 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153831922 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13825997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137465316 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171968866 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151027375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168748833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155078868 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196717963 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166352649 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189077187 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136934242 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204813964 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132438909 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19791602 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151699249 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119453948 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205728396 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227822268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129243111 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211330784 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162804781 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213013401 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203241278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130448363 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213426302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12888308 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12120389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193122952 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168738985 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194351251 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218615579 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208003825 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1653572 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193853841 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150362068 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201292218 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182176239 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186708799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143027266 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202610402 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199428572 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123308767 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12433257 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155547644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138828897 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133917449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167004058 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182069032 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195512362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206270993 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168419112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167967169 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192177022 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154357338 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163401995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205077964 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13905211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220658228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218511516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180703426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171106466 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165270947 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.149027541 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127064901 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134158122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193018889 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137221221 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164853785 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143854746 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22211805 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173482466 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178172378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220741269 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166915639 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230852401 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121300761 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192510026 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170937031 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199697671 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187508761 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160133003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164217181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222848311 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142652428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222744666 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167978693 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211044296 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226919499 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165449252 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161321143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14929203 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189501054 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140180605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192143358 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147744416 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13017647 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184045331 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138306694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16941931 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186948145 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174452142 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206761069 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158561714 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204096065 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126342393 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170067018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17473039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174689394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107391101 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170692376 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225090915 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179969673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157822304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203206148 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131423346 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345823725 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189217079 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209592645 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137260681 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169495996 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173280694 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191757276 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163912255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214420144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141007316 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238069799 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200432891 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143332892 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130531264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180702867 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150352918 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171292732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154835053 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192492914 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145706238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219573872 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166887144 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171763253 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207530441 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146697146 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148948201 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17013183 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257630807 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167624947 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205293215 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164632319 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195750382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213013331 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124281866 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125667168 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161351803 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186102227 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129083175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208128213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194728464 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211448258 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176472092 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193761651 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141924822 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156988609 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168074516 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148090899 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217337903 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163991455 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139152332 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221418799 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129337606 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160937714 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160827715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319923713 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149209896 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205705208 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108144897 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311618538 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130261746 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131877804 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190903536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200092554 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134636395 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186335986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203419164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140612225 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193630139 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135511785 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209597463 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214670594 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167873513 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20754832 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145626131 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194035429 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192007098 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176664993 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17509985 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149166455 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159074349 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225191974 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210083559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132776382 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198267112 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170952465 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201175792 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175308187 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169367068 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18336403 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157755466 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165780579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168297938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125654526 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160043117 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19694355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15957504 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177305368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20128663 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130949613 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126635028 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176942892 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196801283 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142115838 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129255683 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218716709 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130245892 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213366728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241995299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130273619 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197129398 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147875368 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131026718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169616052 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144230561 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161084451 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177595838 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185395433 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160833232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178073483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195980649 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196696033 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159247206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17366999 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266338129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128245569 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223688221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151363941 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227272406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18006822 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175889756 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199461957 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150164137 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19679381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148156201 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.253379219 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166051842 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198152293 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13268035 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17341898 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137870256 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134174046 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184660354 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167302699 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173560338 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136647195 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197417703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144969831 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179624378 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142445698 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232196426 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152831516 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22064866 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218626754 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139393075 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204558345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177538987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160506723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167499442 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204916141 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143812352 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183850056 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136589855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136564084 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244893642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126680984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191459053 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202522821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171429691 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202293043 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136775074 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207699876 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142364053 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205783221 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129466184 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152438449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201714687 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135856522 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157115859 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172369336 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192738546 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164580915 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175231921 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177230708 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225930616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124463942 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134859188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320157751 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193556388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196392362 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168544408 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13745037 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148091946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19087986 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163922242 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205679018 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13072214 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160450222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145181032 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186489078 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146042943 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197987048 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183970671 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193439752 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186757059 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.166561614 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255051777 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173078993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17214319 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118313579 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160894622 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141769983 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165879334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144273095 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211370385 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244980874 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164680649 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179367781 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137510712 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127066787 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15931153 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164395976 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.712897988 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174864136 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177418371 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105953976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141217748 seconds)
  done (took 87.041921115 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180524493 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168936497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189514881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.238260885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217811287 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313410874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.246828455 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267288809 seconds)
  done (took 2.98804436 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128670063 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161724127 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142718288 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145654346 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111453209 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.492111602 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163790032 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123144361 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162520597 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156085072 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138636415 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581806807 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117590722 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148133433 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124104469 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137367817 seconds)
  done (took 4.190348996 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.9278337 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560872091 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.416756838 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286225015 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270066047 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207514447 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816687094 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206661266 seconds)
  done (took 12.854416334 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174007393 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164305251 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455334299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312344677 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185080449 seconds)
  done (took 2.46109816 seconds)
done (took 130.782708964 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131980261 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125080291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124445783 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15858518 seconds)
  done (took 1.698299414 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.204908879 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093761085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095414228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12397163 seconds)
  done (took 1.687351793 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470402556 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093108209 seconds)
  done (took 1.763660938 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161841949 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13759082 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.174374758 seconds)
  done (took 1.658034866 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143552542 seconds)
  done (took 1.318698069 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.137437239 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129201136 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.277185388 seconds)
  done (took 1.721166288 seconds)
done (took 11.025420691 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129224673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.937154858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437823064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136158935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715375607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431199736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.445249288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179366594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178071388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140439298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135268738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694281585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.458963113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.886441914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.413515154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.916681583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698523464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113550194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147722556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113698397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.424725728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139227342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114931305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113657191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723624562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425065297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111513202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.928378532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112246676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115331914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431196453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11320448 seconds)
  done (took 21.226565683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12086977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170706345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150050436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113830886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115742023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142408403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12598732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12479932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207105875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111633539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163246877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112369178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118056424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140964574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138587595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112545457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115190486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147572677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120171916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113465197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163942775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112242695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113357431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144674613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112044765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133442737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143215348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124285358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111435469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147641051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118301775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112017108 seconds)
  done (took 5.385525701 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169070732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179599863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151521224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150886296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191694978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115795451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229531842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152014931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210990448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114398416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134984973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14137126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154759205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112988111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16804588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113450181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11588443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144365634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121738036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114085946 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164257829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11355627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11427801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146016543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113909666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135621436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142919432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126781765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112347946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147313706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119039719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11446707 seconds)
  done (took 5.723243368 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.134476807 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127469911 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134885309 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166372763 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122348729 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12692892 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157291231 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122856894 seconds)
  done (took 2.282144678 seconds)
done (took 35.797078805 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.145504537 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132411321 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133393289 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15887132 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.226302101 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.154980812 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131991715 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119975592 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160471523 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134091773 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111568866 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152980697 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134029405 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123752259 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.260645366 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127117841 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266622383 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262384972 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.124409676 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127724972 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153971954 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233804871 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158000958 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122420107 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.254537885 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117232156 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253217955 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124503752 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122695282 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112831876 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.262656515 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124554456 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.153616113 seconds)
  done (took 6.558256046 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.247183947 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155855294 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123227262 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121255573 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12264325 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152371961 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.247230461 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.15577323 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120893097 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120455262 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154303701 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22953701 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160636908 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11779822 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123488189 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11211712 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281716411 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124338647 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.14701646 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097429359 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117362899 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119764043 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.29303454 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150677262 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121733427 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120535859 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12486972 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159876406 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12344391 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122840063 seconds)
  done (took 5.761027502 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131942058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135331037 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139624948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221996736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151503833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16585475 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141555431 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136558706 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174691767 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116037033 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130069124 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183019991 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131644883 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126010647 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146138416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134453271 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137640338 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147159984 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125783733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133341677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167901799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13283456 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13778896 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15355151 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114961128 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122245644 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155891681 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12704346 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124831098 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129888095 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1486805 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118979306 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117897744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181349318 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116846912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127373949 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.173252059 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127796978 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127940222 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.179154975 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119195325 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115398474 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.173763578 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169934669 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115367953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.161699403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127777492 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129308762 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.146798975 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135386769 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156813587 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146233609 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136204681 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113979159 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.145657908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124668018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115000658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147507445 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131235473 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117265261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170377043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123945091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125846799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115791261 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.159945688 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114935147 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113228854 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151466467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141798828 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122121885 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183778189 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115951477 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12541113 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158140152 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127114629 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126300279 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14416952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127702831 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126272272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120530271 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.160368368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118877687 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117685357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164105994 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136400027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12875499 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158138266 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128092267 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11805335 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147623312 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133358648 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115930595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150644296 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129664882 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115239654 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117360664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160141873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126823111 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112256035 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17290425 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119310284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113933831 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171809348 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118831522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119582176 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156357663 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157282082 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114697546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157459688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129057823 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114619813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153788691 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12020928 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114139375 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132855792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.163618781 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123510538 seconds)
  done (took 17.320874394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.369376511 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347663274 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188230571 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.435698632 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129104686 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.278061058 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346321345 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.349898615 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11585789 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182211998 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177717781 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316327167 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115320321 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177438346 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.352485187 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408697992 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180039724 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152882081 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182893578 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13159334 seconds)
  done (took 6.149709331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141515133 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15105189 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169973989 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143436816 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125746717 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164090699 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117214627 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136620376 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158717041 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126468456 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117558874 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162709029 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128312197 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132397214 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161630191 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150629909 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122307103 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152208741 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138489818 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119922931 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135178014 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143033971 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124305402 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168597208 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135309036 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126686013 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145531565 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121650106 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122005948 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123123268 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151829782 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133620553 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122493021 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.137500795 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12716659 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131032165 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15404389 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119428875 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120977675 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148918099 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1326492 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129346406 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123070259 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132731754 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135412121 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112626822 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12918661 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.162465213 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108736243 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134210573 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159896032 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129938101 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122775179 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.169052364 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123209732 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131566521 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157688838 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131147753 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12060591 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143962302 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115608835 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120296164 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12249358 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161277911 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127343917 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134310865 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163700287 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115204385 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120285129 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150482125 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119627224 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129558584 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167029132 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124657402 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122204786 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158831301 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12446038 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096379924 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124285148 seconds)
  done (took 11.927339363 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147846385 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126351682 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133659874 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182665128 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129456755 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121372767 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.158140571 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137368586 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129910026 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166970185 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131694819 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129945854 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170816833 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126417612 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124844996 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163666483 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129301009 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155486532 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165459169 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143070149 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129946273 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151948861 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128879936 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127188311 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177499178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12705673 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142390873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161586749 seconds)
  done (took 5.249749916 seconds)
done (took 54.160247754 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.359892624 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.630107921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.323502801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.322974381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.36327336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.361286864 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.322772191 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.324617258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.869343441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.291642114 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.326572395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.32587056 seconds)
done (took 30.042502542 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.361074756 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.303918676 seconds)
    (2/2) benchmarking "String"...
    done (took 1.712098236 seconds)
  done (took 5.243240149 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.315497103 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.31588598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.639418881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.313871618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.311501833 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.314396125 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.330070953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.329689621 seconds)
  done (took 16.765216722 seconds)
done (took 27.896345409 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.337121711 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.619863461 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.570955985 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.29178941 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.313868335 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.327215982 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.318053643 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.382228844 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.316337922 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.290684312 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.833870354 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.593004809 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.326256502 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.728439699 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.293752089 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.317508253 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.335644987 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.682058662 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.318700165 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.356555536 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.291995162 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.296458509 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.328270236 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.325031067 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.333126161 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.324438394 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.355631607 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.329164204 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.590890783 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.354311117 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.358825099 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.319152107 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.358212591 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.319223554 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.333185526 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.329538973 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.646038927 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.337766486 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.307567744 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.319003555 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.626341521 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.337716549 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.316025173 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.332201462 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.29950764 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.353396057 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.30437886 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.521480699 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.340053788 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.333386808 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.385861708 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.732543783 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.329115735 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.331827043 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.32205932 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.660799254 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.321903225 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.455099004 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.351517536 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.334154993 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.31739532 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.339783013 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.334818973 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.333515945 seconds)
  done (took 152.237262717 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.322100877 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.318004894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.317060291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.330568573 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.317809409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.317455383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320072405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.321767524 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.317785523 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.344817661 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.316825764 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.317742291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.322365714 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.329340274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.331622409 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.35599073 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.323292858 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.318949637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.330055519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.323315975 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.330874757 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.318024031 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.318718184 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.31834104 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.333548003 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.418424648 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.354824521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.329225176 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.329276789 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.321774927 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.343569878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.326830947 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.086337236 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.276434385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.337050543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.320128488 seconds)
  done (took 84.777298568 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.324794514 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.326017296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.323804235 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.364060612 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.324220001 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.978674173 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.978505787 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.36486204 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.460920415 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.011016205 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.691376746 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.321171777 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421193505 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.332905114 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.32145694 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.326519245 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342824043 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.351004133 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.324997613 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.325713626 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.979113546 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.341249052 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.555148738 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.512367669 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.33922121 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36498957 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.725439736 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.321410355 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362721195 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.668217865 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.377040474 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.322123016 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.718433748 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.806315035 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.326001372 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.44248958 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.324671943 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364622345 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.325673886 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.618957201 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.322413206 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328378839 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.330938941 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013476435 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.322078806 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.979429228 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328657716 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.353460311 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.323345028 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.325346471 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.540219536 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.270154397 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.327812636 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.326679182 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.330182351 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.328379957 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.328520268 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.368269526 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.556769894 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.430763996 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.327497582 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.332570852 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365142593 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.329551055 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.387711106 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327711157 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.345120913 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.386956819 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.428362504 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.983985743 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329109868 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427439621 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.447715244 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.32510461 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.329768192 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.328856973 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.327883805 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.445502812 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.325647277 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328864376 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.086066601 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.515028831 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.341155743 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.009274504 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.430801152 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.325046013 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.73044589 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.326047189 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.330091417 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.134775588 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426598172 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.325788077 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.331905615 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330924135 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.329643386 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.084197858 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.983453553 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.681451462 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.32565894 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.130959601 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.330463881 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.251826227 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.954722943 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.020752919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.327752642 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.44968826 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.524330922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.344612189 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.331162992 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.007377055 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.332720662 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.385920444 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.326622331 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.739468615 seconds)
  done (took 392.008363504 seconds)
done (took 630.237039168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.311357122 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.308560886 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.311187547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.306738238 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.311974169 seconds)
  done (took 12.772055301 seconds)
done (took 13.996013948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620131653 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.615229562 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.42560475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61477266 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.391866871 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.635994703 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.599643642 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.372946657 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.51678534 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.446096602 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511590895 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.409917281 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.392998579 seconds)
  done (took 20.779538097 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.724015044 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.340676492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.462553933 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.692862619 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.398836403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.727496702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791755572 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.339830715 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.61435082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380383847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.380836139 seconds)
  done (took 20.078589673 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.717129741 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.341508022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.460765088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.701852239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.404449546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.726897394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.758821006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342027921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.574744456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.381518488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.379547986 seconds)
  done (took 20.016610004 seconds)
done (took 62.10464606 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.394772478 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.468756327 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.38641506 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.375420575 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.372117222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.373759122 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.37719182 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.372933388 seconds)
  done (took 12.347127802 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.369006491 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.369411641 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.36734867 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.371655572 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.368434841 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.367943717 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.370251972 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.36933754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.367078802 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.36744498 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.369711959 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.365809996 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.371087762 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.370549285 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.367456364 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.369849686 seconds)
  done (took 23.130257416 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.37705088 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.368677818 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.369120403 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.370254346 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.370123813 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.372626156 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.370926568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.372389324 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.372300626 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.369684371 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.37507123 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.370550753 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.371528181 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.368658333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.373389312 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.3759469 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.368411165 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.370526936 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.375796112 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.368843552 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.370123323 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.369577234 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.369672707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.369458085 seconds)
  done (took 34.139099393 seconds)
done (took 70.843888809 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.339231057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.345624957 seconds)
  done (took 5.912192256 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.471838633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.490274217 seconds)
  done (took 4.194486394 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.371569109 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.370397101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.372123508 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.371895058 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.372899444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.375162651 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.371389127 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.372062467 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.372126651 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.370847299 seconds)
  done (took 14.950689749 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.37344721 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.371920829 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.371644747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.372507077 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.373312277 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.371512048 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.373240201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.373745712 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.372449667 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.374667826 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.372353007 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.373452867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.372715203 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.371422442 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.375809521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.373699407 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.37402333 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.372434931 seconds)
  done (took 25.944843965 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.395314586 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.401577533 seconds)
  done (took 4.028057479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.558045894 seconds)
    (2/7) benchmarking "second"...
    done (took 1.454498508 seconds)
    (3/7) benchmarking "month"...
    done (took 1.541498399 seconds)
    (4/7) benchmarking "year"...
    done (took 1.529588923 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.457294954 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.405461826 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.456842941 seconds)
  done (took 11.634669535 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.37280481 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.726780619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.922703858 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.584916141 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.361393443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.384480317 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.318966748 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.385376381 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.391012782 seconds)
  done (took 15.67997837 seconds)
done (took 83.574829944 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.341092886 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.397044625 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.358101543 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.378086697 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.7403864 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.345881135 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.339114981 seconds)
done (took 17.132880026 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.321838343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.319764686 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.320319853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349416989 seconds)
  done (took 10.541489669 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.341738779 seconds)
    (2/2) benchmarking "read"...
    done (took 1.747947976 seconds)
  done (took 5.320391999 seconds)
done (took 17.099577467 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376100131 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.374194303 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.379601484 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.374776918 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.3752686 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.373712817 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.374172722 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.374680467 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.375298283 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.374869737 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.376853509 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.376164245 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.37817365 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375082613 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.376128207 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374457534 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373289299 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374651553 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.374988538 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378566995 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375652239 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375008512 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.374966468 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.37397961 seconds)
  done (took 34.243256493 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.376335985 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.375859947 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.376255319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.374768188 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.374079413 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.382715009 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.375946062 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.376031198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.376419306 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.376542436 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374623198 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.374127883 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.373930163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.376692245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374628785 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.37772443 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.375770201 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375452214 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377037052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.376418608 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.376828366 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378349719 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.376602849 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375213985 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.376212506 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37738591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.384249911 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.377791058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377055769 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.376512334 seconds)
  done (took 42.532866995 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.389433671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.383916 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.378426055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.377973065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.377492277 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.378588785 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.377296582 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.384552463 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.377358462 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.377894563 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.3772669 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.376747979 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.378668544 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.383108914 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.382127643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.380131371 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.380600005 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.381255256 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.378002049 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.378053592 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.380649522 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.377148518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.382962876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.377162417 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.376970354 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.377607865 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.380190106 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.379345656 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.385604971 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.381643015 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.379097858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.382876971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.379371497 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.377629795 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.378509166 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.383493669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.390435124 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.387542158 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.379852215 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.377450163 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.380546716 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.380665656 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.380683605 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.377455471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.37854723 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.378787624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.38179925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.379799205 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.378297617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.380712869 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.380103434 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.379292506 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.379548265 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.380476525 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.379596036 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.37925151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.379104913 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.379223015 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.379672723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.381223338 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.380593999 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.383379059 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.381650557 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.38084417 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.38158358 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.382518755 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.382251263 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.38147826 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.380176976 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.379478773 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.382174228 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.382681624 seconds)
  done (took 100.624660163 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.382934101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.381030576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.38275405 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.380495522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38103344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.382543338 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.381136806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381378317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382592577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.380308068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384467256 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.382203072 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382787504 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382996888 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384110996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383442615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.386256451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383362019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.383987098 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.38185645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382623586 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.382162983 seconds)
  done (took 31.655178847 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.384219739 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.38724254 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.383288895 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.384007142 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.388682807 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383282958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.381762932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.384502526 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383898189 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383059396 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384147454 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.388339816 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389507143 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38601466 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384020691 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.386760914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384303129 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.387609206 seconds)
  done (took 26.175030917 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.384881275 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.384383378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.385636889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.383973479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.385391956 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383520488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384886654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.384611549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.38560099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.385255974 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.385417866 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384179441 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.385835447 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386179695 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.388207467 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.383652279 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.384959848 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385374914 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38670539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.386085339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3848972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.387296527 seconds)
  done (took 31.718210745 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386960241 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.385582761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.384555886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.388437803 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.384503015 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.385641987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.386470165 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.384706742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.389399168 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.386485739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387183454 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.387485797 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.388769131 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387571981 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.385271618 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.385063841 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.386468838 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.386251841 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.386796394 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387086724 seconds)
  done (took 28.973488179 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.391782572 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390649747 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.389700464 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390241804 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392735627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.390542191 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392050344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.393432294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.392290598 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392437055 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393376071 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.392439081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390033886 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393182681 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393704395 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390474724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398871532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391239486 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.390498681 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391170623 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393971538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392370357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393914198 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392437125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.39278228 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39252708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391357099 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.393589855 seconds)
  done (took 40.229407316 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390371499 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.389344833 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.388103822 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.390260871 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.389527956 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.388015543 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.390061055 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.387518273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.389365994 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.392956884 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.390987918 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.391852972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.389426128 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.389041512 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.390060845 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.390521868 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390567753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.39007181 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388477613 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391172719 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.39118976 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38969788 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.390134667 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389973404 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389496877 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.389932966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389201448 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390343492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392115505 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.39031863 seconds)
  done (took 42.944487565 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.421718432 seconds)
    (2/2) benchmarking "in"...
    done (took 1.418884343 seconds)
  done (took 4.085270899 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.394919145 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.388369359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.391680674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.390808496 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.39030061 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.392874262 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.392881036 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392398014 seconds)
  done (took 12.378911383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.386605447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.390241873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.392789335 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.391536172 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.395816605 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.384373949 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.400618263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.397412898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.386414292 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.389108419 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.399669818 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.3938079 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.395162821 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.388518331 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.385793403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.39291016 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.393959735 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.397272376 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.397982523 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.394433329 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.402024727 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.39219701 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394593404 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.3996826 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.390123283 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.404042861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.39973512 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.399921317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.389214298 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.400605691 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.393775354 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.396373799 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.397259456 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.399097609 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.395982198 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.399285622 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.403767057 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399315863 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.402367787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.405199502 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3962147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.395653525 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.394965659 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.400335336 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397430427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.403514511 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.396198916 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.396155335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.391637861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.399847285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.403143793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390552528 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.396942376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.400966142 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.40170234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407372684 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.406222328 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.398812935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.400107723 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.408349972 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.421965531 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.407547357 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40115681 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.403931952 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411932201 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.422411677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.409741351 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.403846956 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.397893615 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.398998923 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.404812721 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.421169271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.418639759 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.403417711 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.403894168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.397849406 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.398241215 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401037031 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.404108302 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.409837312 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.405573153 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.398598733 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.412590386 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414647422 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.397460459 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.407727547 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.400616238 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.408757916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.395698014 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409526868 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.409412887 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.399545012 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.391852903 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.395046954 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.398593774 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.404932848 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.391117474 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.399098517 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.401800327 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.398531615 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.40137681 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402552238 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.412509231 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.406964531 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.404801267 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.413267428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.406433458 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.396150097 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.413828043 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.408922182 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.40364253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.397296262 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.407958024 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.403012143 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.403235356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.410496055 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.407772245 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.408317007 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.40777036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.401343774 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.41538278 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.429980028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.406093121 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.400560574 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.406225261 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.415128348 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.404243375 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.409904081 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.405951273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.401718683 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.401078867 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.406380868 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.404432715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.398702447 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.409270131 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.400018117 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.403844232 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.403372733 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.404288143 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.410465815 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.407095204 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.402038067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.41191991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.4150657 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.410051655 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.412600373 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.423618324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.406703953 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.415350862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.411884082 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.40679349 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402711057 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.401835526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.408814626 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.39997698 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.406308232 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.400159336 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.407580811 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.406347484 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.403458638 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.401815552 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.398764815 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.405560022 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.410270608 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.414604888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.40564055 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.406373045 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.40311914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.405432702 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.39903566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.404339616 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.396633468 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.408080944 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.412569015 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.404770467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.407866671 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.413234881 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.413195561 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405658778 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.408705953 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.406022581 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.413874278 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.412526412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.416694749 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.417395117 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.408272379 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.405619039 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.402237324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.403407654 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.410686094 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.40732568 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.412068252 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.424686617 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.422967753 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.407841388 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.408655459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.402081717 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.41140923 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.414892495 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.414421345 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.407001477 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.408661325 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.402106092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.412753326 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.408169712 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.414276494 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.401879596 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.409567097 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.409496557 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.407897192 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.406860328 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.405686575 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.411766538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.409954576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.406508118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.408485954 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.402828391 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.41039262 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.401405025 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.406442746 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.411738462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.409034766 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.421771722 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.416120583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.414065853 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.420895074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.412042062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.40652055 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.409820061 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.4150921 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.410963573 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.422464268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.415221447 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.408501808 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.420255117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.4127293 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.409681916 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.418939098 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.416513161 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.410000951 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.407991268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.416649142 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.409230043 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.411832189 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.411485288 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.407284823 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.411112056 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.419151416 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.418629911 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.403793108 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.410879065 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.408740036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.41391772 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.418604489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.419930984 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.41811986 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.423944693 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.418549105 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.411789027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407032417 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.415201053 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.412352437 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.411715415 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.409692461 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.420655867 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.421097264 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.413443497 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.419142476 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.413584576 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.413699256 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.406121756 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.414963313 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.406706118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.434729304 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.43507886 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.422914814 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.417624895 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.414925809 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419977708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.418615454 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.410407776 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.408664328 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.418985054 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.410843656 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.409670811 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.414615853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.410476709 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.414906393 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.420405835 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.416107872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.414408424 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.413864571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.407591915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.417182032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.415477555 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.412064062 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.405927528 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.414592387 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.416835828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42490117 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.41636894 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.411900145 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.428206338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.422404902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.415524348 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.41180977 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.411628741 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.410477268 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.419272939 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.42190442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.417128603 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.424650788 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.414365752 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.419593581 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.415709847 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.43206046 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.42744863 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.416930603 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.425683043 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.412347897 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.409443408 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.41121982 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.420524635 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.426961068 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.430734174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.414035192 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.421669403 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.417619517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.419606781 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.414345777 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.417538221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.416072393 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.417203403 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.430596866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.424195004 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.415470291 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.429221691 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.424507055 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.416990527 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.417740971 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.411328913 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.429149405 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.428521881 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.420785073 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.418417175 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.414597974 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.418383302 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.420553201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.416677637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.41669426 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.415287447 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.427520218 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.42688529 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.422149492 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.417133143 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.432652295 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.429093812 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.429363609 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.431524218 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.42220341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.424511386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.415980133 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.417588578 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.416970902 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.418967803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.423482763 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.414047206 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.423934007 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.420658032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.426224243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.432534752 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.427675685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.414056145 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.433933882 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.443942697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.414393059 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.423667632 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.423298941 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.413765326 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.425832992 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.42179002 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.413183059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.421193644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.427913913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.427775627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.418134457 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.426698954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.417674971 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.427149012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.423660299 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.419917366 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.424906617 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.420327403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.413002031 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.424533525 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.433920683 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.430960879 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.425451728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.428091589 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.421387943 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.437304353 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.434297825 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.425013544 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.429592897 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.426112636 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.419534147 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.426246243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.429430935 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.419395442 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.42775258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.417974241 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.427844142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.422470274 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.43459046 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.428115195 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.429791595 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.415804621 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.419011314 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.427532579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.42534536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.424027664 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.429991412 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.431789196 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.417769956 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.419826223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.425562357 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.423795931 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.429350618 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.420911416 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.424228737 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.423032077 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.427316142 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.422470692 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.425311347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.415832 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.42024094 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.443798335 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.435302282 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.431083939 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.42616809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.4294727 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.41940508 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.429165608 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.427466998 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.421759359 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.423367105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.429253957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.424576128 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.422579855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.422274508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.429768758 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.437880683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.429775532 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.422506241 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.442846957 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.448152241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.433972225 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.421846102 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.425125988 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.424325677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.427792459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.427631335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.422178966 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.443240164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.437511572 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.431543145 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.436999984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.429836504 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.420959747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.432420492 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.42752357 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.432237577 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.432783248 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.432718644 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.436427286 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.427533697 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.425707068 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.420831937 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.423022299 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.428747538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.427495843 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.431512974 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.436325458 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.435147305 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.433818994 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.434131882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.430680326 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.427018897 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.42820124 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.424143461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.431825723 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.422030274 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.440379464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.43171258 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.424802135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.431767057 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.429305431 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.429566287 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.433865856 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.435710016 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.426152655 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.422842877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.433026714 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.446525148 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.440914938 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.432509259 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429701221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.430526606 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.435425552 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.431042662 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.428790072 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.430872599 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.451627962 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.441870995 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.425680598 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.428712548 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.444300913 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.441481979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.428202147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.428788046 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.437615356 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.433037888 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.437907153 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.43344632 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.444050182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.444701732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.429052047 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.433372498 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.428231621 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.429735094 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.442611313 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.440603935 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.431218104 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.437227667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.454582318 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.439057369 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.442910722 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.467618333 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.444867186 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.438355185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.435587584 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.423487931 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.432782688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.436346689 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.436624029 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.432105158 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.428995754 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.430702186 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.427958751 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.445506513 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.449502273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.443103135 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.431498377 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.425398998 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.428698301 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.432884447 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.431564238 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.437390048 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.433102073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.433013304 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.434178536 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.428998827 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.454740159 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.461305659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.436551674 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.432329488 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.434378981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.443229897 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.44477716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.44097116 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.441098481 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.432927679 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.435698981 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.442553623 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.442147567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.437675629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.431522333 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.430659793 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.432529304 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.437164531 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.45443174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.460021837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.447551606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.441073966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.436958499 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.43474453 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.433444225 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.439955807 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.435838803 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.435255349 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.433402669 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.438839673 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.437350448 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.434364523 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.434070631 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.440470537 seconds)
  done (took 846.272412666 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.436705813 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.435247248 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.434708282 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.435424645 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.433737838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.432002911 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.432627082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.432064092 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.438327667 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.434730213 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.434024537 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.435450416 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.433022942 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.436085483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.435751571 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.43696262 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432695317 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.433707178 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.434779172 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.434774492 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.434327996 seconds)
  done (took 31.409237865 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.436996632 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.435557064 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.436108181 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.438611432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.435836848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.434063089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.435296695 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436471216 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.436374556 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.437038118 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.436372809 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.437655863 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.436929654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.439663312 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.435696606 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.440741591 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.437256371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.436370784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.436370644 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.438148734 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.435129425 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.437428181 seconds)
  done (took 32.894011523 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.439710036 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.439137687 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.434184892 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.441796334 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.436382168 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.442149801 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.438983337 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.44563558 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.441843198 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.432529654 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.436638556 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.435248015 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.443124507 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.444163186 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.444408748 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.444982005 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.441053433 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.440843001 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.441519064 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.437656562 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.450571193 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.460816281 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.438530207 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.432399329 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.442525547 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.439568956 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.439847623 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.439728404 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.436039108 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.443015484 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.441860658 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.43650041 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.454431251 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.442947738 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.436477432 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.44292909 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.443777243 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.437841851 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.4388938 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.454552357 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.462648847 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.441672367 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.457060007 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.45531223 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.439385763 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.44414391 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.448926291 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.438930607 seconds)
  done (took 70.526794925 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.444707599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.442155388 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.441752614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.443953871 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.44642346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.440234683 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.442595878 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.444041523 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.440804658 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.442010957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.441782157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.444687414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.44559584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.442425465 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.441830697 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.442295839 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.445823872 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.445729656 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.444259985 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.44614577 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.44125311 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.444953579 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.444509599 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.442473167 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.44649372 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.447415345 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.443331027 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.446280634 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.443252037 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.444056468 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.44738259 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.444696633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.443156354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.445738735 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.446922894 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.444859434 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.446720005 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.445593047 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.444669535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.443445986 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.445663376 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.443727586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.446599949 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.446519211 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.443086303 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.452355778 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.447191434 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.444308456 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.446441269 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.445339593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.444519935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.445047376 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.445662538 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.444775136 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.445487027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.447135911 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.442732766 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.447899834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.443879351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.442416315 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.444997719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.444450582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.442520309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.445933033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.445728469 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.443139802 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.443735687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.443114449 seconds)
  done (took 99.518194181 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.447099384 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.449145803 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.449344222 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.448292901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.448400038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.44840758 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.449421886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.448080024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.447156654 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.450195308 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.449096774 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.448480843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.449258946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.450808933 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.449705581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.448857289 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.447648615 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.449733796 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.448837454 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.448735974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.452562438 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.449951212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.448930412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.449979917 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.451801727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.45086327 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.450466222 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.451455314 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.450329612 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.45177379 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.452845715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.449154184 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.45174781 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.447729352 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.451536191 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.451773721 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.453527226 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.452040375 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.452627461 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.451381492 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.448414146 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.45135167 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.451568387 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.450727568 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.452922051 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.452637797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.452405505 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.454392979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.451919759 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.450107447 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.452632629 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.454318877 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.453848076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.451936801 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.452010832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.450132032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.452994406 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.455256706 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.452501956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.454123251 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.454719556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.452014184 seconds)
  done (took 91.242164247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.449257199 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.449049911 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.449060457 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.451566293 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.450983188 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.449686863 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.456193836 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.452308076 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.44889612 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.453666979 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.452691784 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.450068616 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.455454286 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.452855702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.450378292 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.454225988 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.452158406 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.451560775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.454169137 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.455111855 seconds)
  done (took 30.33292027 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.45112308 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.453194991 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.45123692 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.454026172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.452977295 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.453485182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.451902928 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.452861708 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452415353 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.44856186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.452926451 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.451738451 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451946368 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.453492095 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.452414165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.452414026 seconds)
  done (took 24.531059991 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.45395221 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.454313848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.454965816 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.453594763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.454151467 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.45287819 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.45140426 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.455295467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.452071943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.452428552 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.455739378 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.453856528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.455025251 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.456212414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.454832559 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.452678654 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.45486727 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.457193125 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.453675918 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.456480325 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.455981658 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.45543934 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.456139709 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.452205828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.458557405 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.45592767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.453037149 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.453346406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.455282407 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.455414128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.452234463 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.456311937 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.453991042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.45422948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.455132039 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.455436198 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.453306597 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.459451163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.453851429 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.453191219 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.454310217 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.45656176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.455826191 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.456523836 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.453766642 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.455755302 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.455083848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.454298623 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.458824268 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.4560816 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.454574775 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.455675473 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.455311601 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.458237531 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.455230166 seconds)
  done (took 81.317849919 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.456708915 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.456893855 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.454342762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.45427795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.457056585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.454239537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.457625303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.458370161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.455957492 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.456916413 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.455506039 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.455942966 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.455224579 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.456915994 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.455252794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.457531786 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.456961881 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.455146496 seconds)
  done (took 27.50931393 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.459529875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.456885613 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.45521075 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.458789278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.454634559 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.457472071 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.458407176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.455684273 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.45716896 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.462500014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.457811221 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.457362909 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.456136636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.457017893 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.458853043 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.460976497 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.456963906 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.45664089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.457688788 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.458301087 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.460284579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.457434217 seconds)
  done (took 33.371825566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.449053124 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.44792798 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.449704743 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.478719326 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.468064619 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.448054812 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.451874362 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.448074368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.484875626 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.510055923 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.505075122 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.466991578 seconds)
  done (took 18.909372275 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459407583 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458693525 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.458231874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457501754 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459229417 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45749924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457229373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459120186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459851005 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460903723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458228383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459094344 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458513894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460824732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459856872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479001973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458979804 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459609912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460094891 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459822929 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460448218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460764459 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459110617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461082726 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461869488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458906402 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461206764 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461693557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460615069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460856998 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.466353089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461802231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.464585405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461315018 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45923731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460374255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461846231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460844357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460719621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.467710594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.459323075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46324585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460436275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460277665 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465835425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465206993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.466445489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464711399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460793304 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46027117 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461020218 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461362649 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46103684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460425659 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459894376 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461461266 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459645601 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459315183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461541793 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461519723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461577202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462527812 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461640897 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.462623355 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46376512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462074611 seconds)
  done (took 97.743622568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46507625 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.4632367 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461347424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464551602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462712402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462980732 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464024092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.464161399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46313606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464917921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463085704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463015653 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.464883139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.47076154 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.473683211 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.468776232 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.469078715 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.468849076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.468760239 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464882581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46422279 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464729768 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.465881032 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463757507 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.46579366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464125641 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464455152 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463789075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465616333 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.465188276 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.470925458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.470747223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.471012829 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.465157126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46731187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463910529 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464641908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465641825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.464493006 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.464796047 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.467749844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.467501 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.467269476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466992485 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.467241959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.466780517 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.466039152 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.470336905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.470970436 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.470202321 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.467872975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.467592143 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.466749997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.468816949 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.483435009 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.468814924 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.467209832 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.467027197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467868715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.471142734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.468890004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467284562 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.468383375 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.466749927 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.468618461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.468317724 seconds)
  done (took 98.122019081 seconds)
done (took 1980.497584625 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.687127882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.64051511 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.460621982 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.436414644 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.454345975 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.475978335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.45401821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.456118896 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.460516383 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.460302319 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.461514136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.743740318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.507611198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.455790572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.459431608 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.614575289 seconds)
  done (took 29.537644627 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.506762696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.476384392 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.620929519 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.46750959 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.503431687 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.736942945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.545309079 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.469979039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.690597596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.487609353 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.456368299 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.496238942 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.468353622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.439003661 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.48798901 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.733759929 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.830842316 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.453368267 seconds)
  done (took 32.182548005 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.078508866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.482005498 seconds)
  done (took 5.873010318 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.494720453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.465329216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.471960925 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.466046206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.455953792 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.436005165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.468690327 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.44271363 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.434559241 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.629977597 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.471869503 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.491547005 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.465568981 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.470650283 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.472532995 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.533703763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.680494077 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.474587726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.472597877 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.482661098 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.463374637 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.634173941 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.525332237 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.481831384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.631828111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.44189069 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.474334341 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.480512781 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.655383132 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.479462996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.467718835 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.475047421 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.476552779 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.444369217 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.11631109 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.443508843 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.524038916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.48033252 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.476837871 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.686327989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.465733876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.480762324 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.439776734 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.120093414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.651560439 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.655602225 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.446531084 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.470208048 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.472215147 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.555827246 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.472015541 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.470526176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.578700127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.408697782 seconds)
  done (took 93.651023153 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.494576161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.443156493 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.718160668 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.466017153 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.441264214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.445584596 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.440578862 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860183198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.446421713 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.443415674 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.873964 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.213075071 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.445638164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.523060579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.487014166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.501492333 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.441849693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.459904293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.458522135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.438159769 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.1530101 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.444047598 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.458548814 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.515698469 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.51784574 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.142780796 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.439476067 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.438363566 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.447110209 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.438399045 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.186728563 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.442244017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.504971408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.442659923 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848906834 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.98260533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947723729 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.445142151 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.475454246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.440102404 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.470649445 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149277153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961729211 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.441885941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.443750983 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.159001155 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.440974861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.448493136 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.447667822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.813091944 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.445155071 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.44836386 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.441880703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.443247637 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.444704456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.50459175 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.517429067 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146538746 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460963227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.442821185 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.489760045 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.44791967 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.451494915 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.447741015 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.447321967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963171364 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738722292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.447935593 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967401092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.172774345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.442241154 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.257881467 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.462743203 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.457696681 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.479910399 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.448616405 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.445954824 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136318033 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.441373934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.444254259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949706104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.447152113 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.86115036 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.464436434 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.446191726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.170420694 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.454555639 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.51844428 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.449639791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.445441141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.443200075 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.453253169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.853624333 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.488533773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.449048584 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.445280646 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.450369702 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.447835231 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.445924094 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.452003569 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258498724 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.454967213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.450289872 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.471391998 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.44846052 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.445153675 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.447613485 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.451412362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.828784023 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.450417752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.455863277 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.45007958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.455255518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.460428383 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.531391457 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.452192699 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.901200425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.446382253 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.449761314 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.463275881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.450266057 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.464631291 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.446191167 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.452921004 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.448095599 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.859974791 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.474260868 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.44938459 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.451838045 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.44991245 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.447773142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.469232156 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.520191778 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.455212007 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.378439535 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.456470128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.465950244 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.452349841 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.465216771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.452233485 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.456982624 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.451366336 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862440818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.854343559 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.694411908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.453215315 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.448368888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.406671687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.486166711 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.720790053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.47455916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.451684115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84382581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67544546 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.452416401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.448256793 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.45354273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.830596894 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.453254914 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875051639 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.211217292 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450936184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.463380853 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.375697287 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.386410311 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.455203207 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.457892515 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.863531249 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.470029324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.454619893 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.454761182 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.454647829 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.448404717 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.459271602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.44979393 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.45579567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.456283372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.745303296 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.738322729 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.473626639 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.459827747 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150836011 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.489086147 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46039423 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.457077537 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.490481925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.453036311 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.505607382 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.454785835 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.488945975 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.455139302 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.462459577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.183813528 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.452011391 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.474911859 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.738607472 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.351824209 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.45134727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.456269684 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.451253263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.526834453 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.174814409 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.47624471 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908500586 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.460739596 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.527372161 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.457917728 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.478670857 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.185653357 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.468384212 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.45129866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.359789328 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.453472959 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.906235073 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.453163701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.456841963 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.28254864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.453368546 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.458948935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.451655969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.473420189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.849165945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.458118662 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.45600715 seconds)
  done (took 532.198442427 seconds)
done (took 694.752379493 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.4579083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.458291729 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.459679964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.458388807 seconds)
  done (took 11.161215683 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.490035081 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.484195301 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.472731343 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.483785264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.47903913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.484589137 seconds)
  done (took 10.224719429 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.45837889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.459120605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.460292332 seconds)
  done (took 8.706656482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.784010452 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.472930392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.966585835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.456385061 seconds)
  done (took 10.011501882 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.495907475 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.493277811 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.497145691 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.496605888 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.495598846 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.49969406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.497855978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.493559761 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.496498752 seconds)
  done (took 14.794028417 seconds)
done (took 56.228849284 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.658000155 seconds)
    (2/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.435410816 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.666649928 seconds)
    (4/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.521981811 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603697579 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.861121586 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.530335038 seconds)
    (8/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.650129671 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.642727961 seconds)
    (10/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.816127177 seconds)
    (11/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.441143109 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.440007769 seconds)
    (13/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.754043583 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.85815815 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.906599995 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.615453893 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.819259907 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.512074405 seconds)
    (19/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.595604232 seconds)
    (20/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.43747288 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.435003711 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.630009236 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.733424272 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.561565615 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.95770363 seconds)
    (26/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.535207305 seconds)
    (27/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.736264088 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.701362792 seconds)
    (29/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.686411729 seconds)
    (30/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.707996247 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.437939489 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.617856991 seconds)
    (33/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.522763474 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.776741442 seconds)
    (35/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.593708879 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.439711363 seconds)
    (37/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.535203953 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.595656892 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.453517169 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.787804929 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.629676301 seconds)
    (42/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.715244725 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.779411055 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.442275796 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.645995556 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.708110787 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.709593867 seconds)
    (48/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.662366842 seconds)
    (49/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.834640843 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.665456411 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.642812749 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.157415549 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.050359057 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.961603986 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.625765888 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.716740516 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.597412562 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.714209537 seconds)
    (59/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.44450869 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.690947711 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.446484431 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.741586273 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.464907723 seconds)
    (64/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.746018122 seconds)
    (65/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.546071745 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.716252674 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.627995571 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.740053607 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.536191089 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.905341385 seconds)
    (71/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.618235531 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.152063052 seconds)
    (73/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.722650276 seconds)
    (74/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443926005 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.652881976 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.49771385 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.438855458 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.476393821 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.624146688 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.444194195 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.778946052 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.660724104 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.623564211 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.612396102 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.448622761 seconds)
    (86/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.708759054 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.448571428 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.677490832 seconds)
    (89/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.442087572 seconds)
    (90/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.656239526 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.462390434 seconds)
    (92/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.635142779 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.960219034 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.643231727 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.666252392 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.523835329 seconds)
    (97/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.526532459 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.745742737 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.462565387 seconds)
    (100/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.667462392 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.615845842 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.663370879 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.443701255 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.825873807 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.663897483 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.764872055 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.823112841 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.52732439 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.5403009 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.451746762 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.627171095 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.532074924 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.659085278 seconds)
    (114/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.482887942 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.663990302 seconds)
    (116/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.537870144 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.607549815 seconds)
    (118/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.546058126 seconds)
    (119/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.446296418 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.777976515 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.534032924 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.529014199 seconds)
    (123/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.489807328 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.629851883 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.447936361 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.862450385 seconds)
    (127/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.451557912 seconds)
    (128/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.964603669 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.907955894 seconds)
    (130/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.442521637 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.445715827 seconds)
    (132/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.633168855 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.558356967 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.470430073 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.713289379 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.640810399 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.838432807 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.699872519 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.661592232 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.830015954 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.446085357 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.82392775 seconds)
    (143/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.449795397 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.880863411 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.864267586 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.601311102 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.462758428 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.657008479 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.647246972 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.473942811 seconds)
    (151/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.756790162 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.472453446 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.805003416 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.63967478 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.713053106 seconds)
    (156/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.698136265 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.447096171 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.53535907 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.673555974 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.638217542 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.565904855 seconds)
    (162/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.797508049 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.663663654 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.454651251 seconds)
    (165/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.472871027 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.98078799 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.655275996 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.722413932 seconds)
    (169/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.478124069 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.575742976 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.660247857 seconds)
    (172/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.47358704 seconds)
    (173/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.610979371 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.680147176 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.479843631 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.88896095 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.616078693 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.784131558 seconds)
    (179/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.670296063 seconds)
    (180/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.874134832 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.447585967 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.543890323 seconds)
    (183/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.882706104 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.447609155 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.721981406 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.756477831 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.798275675 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.457479195 seconds)
    (189/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.44706125 seconds)
    (190/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.800182482 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.721692962 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.724657514 seconds)
  done (took 364.335892304 seconds)
done (took 365.670029347 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.533267185 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.653050643 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.50474554 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.50318829 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.505886398 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.476780532 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.531760149 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.503123617 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.529622447 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.527512961 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.479299987 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.51147398 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.528876472 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.517497093 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.547899562 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.504322232 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.50624189 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.51762127 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.532031273 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.531741362 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.508032412 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.509486227 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.54448579 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.504286124 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.525695342 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.523180427 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.521782693 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.491841596 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.508311846 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.533708511 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.475983154 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.517765004 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.534603946 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.520161677 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509511301 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.52183249 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.507570062 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.654731164 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.537936982 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.51978188 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.515911416 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.533728835 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.520617252 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.518643956 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.522741893 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.545953784 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.52447298 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.532348981 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.476762653 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.472438011 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.534315223 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.531521501 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.518968858 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.478621897 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.474976392 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.524968224 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.520262388 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.535693401 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.51358647 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510308259 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.549077365 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.53571603 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.53190954 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.525382662 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.514141568 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.530516485 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.520975467 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.537299471 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.515526661 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.512907124 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511903992 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.518516915 seconds)
done (took 118.874496753 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.688314555 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.479715891 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.722709082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.510723605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.738480291 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.685011132 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.512036481 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.515015981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.51216925 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.373912772 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.511925434 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.511041523 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.482152164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.514927143 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.684218154 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.51264445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.513688019 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.272368784 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.515463384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.701484176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.486675645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.514300806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.513396362 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.379533459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.482936692 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.49004849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.694350937 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.516766902 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.276015966 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.490795023 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.481132971 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.279105604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.697847191 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.531855133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.525873228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.521153144 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.729964125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.518660438 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.687130256 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.689144967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.728033711 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.555162706 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.488648242 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.487830052 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.52117249 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.519908712 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.516976914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.547862406 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.481442856 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.516652991 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.276055914 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.529424237 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.525451386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.516991442 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.511597669 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.543855123 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.524253189 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.522775278 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.700064582 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.517014419 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.692694162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.381532805 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.375729763 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.515544749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.482392489 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.516122337 seconds)
  done (took 121.305945613 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.637231104 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.639538031 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.692523959 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.505519382 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.600872429 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.68912178 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.50602664 seconds)
  done (took 12.620719017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.528877869 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.517521817 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.601977738 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.605155097 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.51993588 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.744574153 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.515660336 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.527743646 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.51631887 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.603937275 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521221658 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.51568939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.523249291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.486943836 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.604263643 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.527835488 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.686971646 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.511906716 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.519046381 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.725470258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.517565118 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.527188827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.605250639 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.531363241 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521391932 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.524310808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.361810954 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.520296122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.518278476 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.518544572 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.518840629 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.631139825 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.51741014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.488044395 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.518368223 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.684703062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.523444147 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.518273029 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.518230147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.490325271 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.519587651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.517660381 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.520359188 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.519460192 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.518617276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.544992139 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.51966322 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.521309938 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.519637169 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.519883988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.606081821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.520846541 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.525658116 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.517462312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.610639802 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.528841132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.524418712 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.527277386 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.519005385 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.519847112 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.726748283 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.605673529 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.521527772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.605707681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519898166 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.521052572 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.51935075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.521956598 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.666327192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.521149582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.605438722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.520928185 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.759265965 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.546462927 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521902052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.5182768 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.519770496 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522835131 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.489413004 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.527938015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.522469372 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.517248318 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.528061844 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.52142797 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.520403327 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.732562221 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.68591858 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.519907595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.537077725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.532392632 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.51967216 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.608759046 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.522282198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.521368395 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.609214342 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.690650466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.611781708 seconds)
  done (took 156.798965571 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.538656278 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.536298156 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.52490404 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.553540084 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.519190813 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.514724254 seconds)
  done (took 10.543823904 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.520293258 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.526819576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.523395957 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.523094802 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.526362605 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.52789199 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.526625837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.519305563 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.52856533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.525415488 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.524363539 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.527188059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.526738631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.527214319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.528957488 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.5281342 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.523750681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.525294802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.526801767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.527434319 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.496029628 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.527393253 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.527414764 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.523445125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.531098194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.5266859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.549479791 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.526812033 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.524188516 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.525650923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.528586421 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.529382403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.522391709 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.527517291 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.532130448 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.523556173 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.531178092 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.526973297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.525345506 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.52660677 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.528440034 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.52768072 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.52616684 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.52828785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.525797939 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.526678567 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.531004397 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.554348078 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.527762714 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.528544447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.53133293 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.529137679 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.529628034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.53128446 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.525047634 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.525071729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.534064283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.530291946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.533386054 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.525035272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.531897666 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.530684663 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.523414745 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.531208682 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.530142206 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.531254149 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.524768827 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.536199959 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.53376662 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.528783863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.531106016 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.52845093 seconds)
  done (took 112.366640202 seconds)
done (took 414.984190248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.012968129 seconds)
  done (took 4.373911725 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.7342785 seconds)
  done (took 4.098985772 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.647115531 seconds)
  done (took 27.021675592 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.574313466 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.532211394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.507337769 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.4987438 seconds)
  done (took 11.472471464 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.878752039 seconds)
  done (took 4.243014283 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.506792239 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.517652838 seconds)
  done (took 6.388956515 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.922652385 seconds)
  done (took 4.284474024 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.902507994 seconds)
  done (took 4.271928016 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.512387225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.53366535 seconds)
  done (took 6.419828247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.476595452 seconds)
  done (took 3.841689995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 23.476182062 seconds)
  done (took 24.83945689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.52697211 seconds)
  done (took 3.894112791 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.543156081 seconds)
  done (took 3.906452001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.820336162 seconds)
  done (took 7.181143356 seconds)
done (took 117.601448134 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.496937774 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.500267108 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.499467775 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.501770511 seconds)
  done (took 11.358937544 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.649548382 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.652607989 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.661573165 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.644832908 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.644389415 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.656591177 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.56473599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.566879699 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.632531344 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.63133615 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.660618714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.64226233 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.655994104 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.570844728 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.629350562 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.663758849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.633209712 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.65790133 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.567409654 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.645119676 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.533535933 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.647973321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.63189949 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.535595902 seconds)
  done (took 40.346230622 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.086739312 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.657700186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.739405129 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.622172065 seconds)
  done (took 8.469197934 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.701559675 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.70571593 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.7161711 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.752400637 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.805741638 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.71370256 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.569198778 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.568932474 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.553263373 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.705320209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.780193836 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.699128848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.923214258 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.53617796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.921270994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.533359445 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.535203604 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.702764297 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.754992238 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.779731905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.535012238 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.699003483 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.708446724 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.741312565 seconds)
  done (took 42.006807012 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.551673436 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.558175379 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.544056824 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.560836123 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.537156296 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.541368284 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.542099523 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.550236521 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.538519319 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.540285186 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.542756031 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.560834657 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.538883192 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.540120919 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.553210153 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.542125923 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.544525669 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.553674668 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.557907469 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.54411612 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.53942551 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.553034572 seconds)
  done (took 35.401289718 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.504597547 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.503342569 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.942570281 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.85084039 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.505101103 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.499583152 seconds)
  done (took 15.172966059 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.630531997 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.841623925 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.52482051 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.011432878 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.144648562 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.535932957 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.534435001 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.885798326 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.26718684 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.244033546 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.616225569 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.632195268 seconds)
  done (took 23.238263469 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673814945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517721772 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.516451569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574515586 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516656483 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51233198 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.580441619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44648911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.539259566 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868918667 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516954146 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67933527 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848436942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530225876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519713575 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.498222086 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827639185 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17700079 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514343339 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527088536 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578739517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52662004 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517694743 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820915775 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518924439 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516571486 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.862252246 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517271575 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953752359 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90699341 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908620573 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51928908 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86987661 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366475164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692262263 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814553094 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527376351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515692673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.502680264 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.51740106 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541032767 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521553264 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905545111 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520965271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519171118 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519155683 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45545275 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.551477461 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.516708864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.524971576 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917759235 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682514934 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.544151879 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.518734819 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547481701 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51626621 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.545170584 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732374277 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240235228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52064456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524502243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.521927474 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530629908 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524125589 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386195688 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.546923809 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.543232557 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549234648 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52926933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520340541 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572239249 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52068395 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.566102435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52195108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52136141 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530221476 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52319677 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239413197 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526577158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.522180579 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834943815 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521181988 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5215335 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.523137893 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520945575 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509761612 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554656077 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.488811391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626365894 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451526483 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820673355 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569228881 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580826584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826246061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.489868998 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523979551 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.531790949 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52751324 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570028284 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459008649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524297678 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.543500748 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855706302 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.817205736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523057436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.504623109 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196606356 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53917436 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.579134609 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.525219164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824365025 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.365961342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92828257 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544462044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588026103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522585798 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.533984244 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535443159 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.550248743 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.525702187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936631188 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.495349584 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520809805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67493045 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529337634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527000256 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541336367 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523944281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526585818 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826154988 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528379272 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914652275 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.530404949 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52378623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.521556407 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531204422 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.528241615 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.829558145 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539386468 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876678033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524911792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525534707 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520204769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.827488118 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.539074906 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.54652292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954442391 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527905749 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.528530269 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919456727 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591157367 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722084562 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587646167 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.5288111 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861337535 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.55300489 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.550679594 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527530352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523812491 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527525462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.556870535 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527122478 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361730915 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525381754 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.531234035 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528589984 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.570665376 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680169874 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556830027 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826296836 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.528660803 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521703284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.546569155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.530771825 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833639319 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91501531 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.531889635 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780615259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.199430738 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374346835 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575669574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.529269958 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.528228625 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.530822041 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527307837 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528260403 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529776587 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828074785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933996076 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529553723 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38775692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535083616 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53000385 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.55645058 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920514613 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.561865584 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528178758 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.543867555 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544746507 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532614308 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944433507 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833325592 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.569905712 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530274695 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.134204147 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559093164 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530824485 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532512759 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586538344 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532362041 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553276293 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956163699 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535542054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922477084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53248608 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.573074202 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.53138538 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538321249 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551871785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.549884032 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561431521 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.834306932 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535389801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535740404 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256814711 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532496067 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304641603 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54921593 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.540496107 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531277197 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475081293 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532639242 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534040607 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915368568 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469035553 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526663412 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204776669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.533913566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.562191324 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926852151 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847927589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535753325 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.529304948 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933682418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833492513 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590407621 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532034136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556058211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.498579324 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262341671 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52772032 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806625689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449012965 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547317784 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534508823 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.567394639 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538793446 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111487641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533907629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534679306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531729139 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551590255 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538076944 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.563831406 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534412861 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380631923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536222588 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.213046087 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534149 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835998279 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92938732 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.910345652 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.53485747 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.531058594 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.859389242 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930502685 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536940766 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.540343503 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312109592 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.479710094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.565155457 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537422951 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540060087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543397732 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976447773 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.550693423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.536540505 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540258227 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.535246766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534482562 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.53570681 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545581321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536524093 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197820617 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.527665704 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521640356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.547018934 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537846747 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874145798 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.582015004 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387799245 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852253139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532879635 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589826052 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.56066585 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536318899 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.50613189 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537210213 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53550008 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627940536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836920952 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53956617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.506029153 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.614457188 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827756658 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.535711769 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.551834419 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881913755 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.538685681 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.56184072 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5394605 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608446088 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.554655169 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541413542 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533626168 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63170589 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690105774 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841380947 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.938573893 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939328319 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121994005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55495451 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5407189 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.580497702 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699008862 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55516969 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.55537635 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.540751516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386620185 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543165859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395904395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941793716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544962247 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542641561 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539938913 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862938436 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538113192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900575555 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539904271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.536452227 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583428661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538361338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557544573 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840028749 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892354957 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54143631 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549216698 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540777846 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.542427078 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948408383 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.845055297 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215610239 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266739646 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536569839 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554059563 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488982084 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896406659 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541318627 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541403275 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541384767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.561234219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542582964 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.568095496 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561496892 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853205006 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932881828 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396564466 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932317301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.572014081 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.543329847 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563927787 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876139207 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459968478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.844466394 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382767879 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520871893 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879527627 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696139223 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845051455 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.542828526 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864680139 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.554876985 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536852766 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54390918 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545068755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.543417986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933641282 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401630054 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883079126 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.569094226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.547012298 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594890942 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.846019665 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850236472 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.52144508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847167227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951984327 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.558167348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.543864133 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403251839 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95020547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547893207 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.563672238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888752473 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.5457532 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607175815 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.502726778 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.542608526 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270037552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.839601601 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591390078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55938077 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528350847 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408202677 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.549638331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208141203 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542243675 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562957971 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900970647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.570980569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545232184 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909504833 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.567861528 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.559285018 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854095971 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.398224104 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.559793113 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.554088128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541663014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.548271816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545423619 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632210353 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540128113 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548488813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.133003226 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.550006464 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54789153 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581592394 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.557617628 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560069196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.550045156 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545576152 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.571061375 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.523788046 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.515901079 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.56683996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766444881 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279075363 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550494376 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.246087229 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.970764928 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880158713 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562050802 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.519780064 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.571628627 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546846635 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550909442 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543170329 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541396989 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277540252 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.560232974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.944313589 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57616433 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.845568211 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845350935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548145612 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855553768 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563470816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595333108 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.517494858 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549010737 seconds)
  done (took 1083.153440071 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.602592551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.629106467 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.57116956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.581703581 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.578893168 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.611251822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.615445372 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.616468267 seconds)
  done (took 22.205232454 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.559056567 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.564799685 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.543610818 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.572650893 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.555527488 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.200150452 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.536693807 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.567889394 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.594092517 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.545850209 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.536392512 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.369435666 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.568001908 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.545049199 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.554309455 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.566257902 seconds)
  done (took 35.787428556 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.836663867 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.795247776 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.288435841 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.567590334 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.576971624 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.560257278 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.978053634 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.553971842 seconds)
  done (took 29.559237107 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.583076521 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.579681048 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.580350406 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.582854425 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.582370775 seconds)
  done (took 9.309304347 seconds)
done (took 1357.373149163 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.5758865 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.580971714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.577282418 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.576255053 seconds)
  done (took 7.708932121 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.523563157 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.523138033 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.523631881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.557856066 seconds)
  done (took 10.529954472 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.525462561 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.301978974 seconds)
  done (took 6.230860991 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.203450662 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194789994 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.195405156 seconds)
  done (took 7.996782901 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.942751798 seconds)
  done (took 3.347470653 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.544378863 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.569284055 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.550154458 seconds)
  done (took 9.06959656 seconds)
done (took 46.286991175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.548336977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.314190163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.70909527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.547119784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.708642419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.706970838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.838871619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.544198603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.573461681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.539300074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.54026598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.706748743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.827099103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.319579955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.820652962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.322088235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.71393534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.550364889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.551202566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.558121043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.834829834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.547214419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.555088744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.556870396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.706402399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.698782716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.546658342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.337105857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.552727689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.555492287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.693105108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.558683265 seconds)
  done (took 88.48593966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.547251435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.544250774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.543552082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.546118958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.545146348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.542323993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.546143682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.544316495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.554754205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.55472529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.544009472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.542675154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.546069092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.544389479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.545011765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.542287884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.54357918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.54305572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.543850932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.544472031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.544995771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.553410179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.544567714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.559939012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.543120532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.54625927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.546909632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.562680492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.544037758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.561255031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.545073155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.547087168 seconds)
  done (took 82.915229585 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.56020371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.545198729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.543521701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.54573134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560441869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547222451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.54449864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.546713587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.55541588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.557187964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.546067275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.555386618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.546199904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.561191266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.545756482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.556713183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.561769691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.55637543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.545373332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.559173412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.550017569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.557143126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.54733301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.578844698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.563682435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.545825974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.565651959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.546570832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.556285475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.559412897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.547594216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.547039955 seconds)
  done (took 83.112823497 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.881237901 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.587531278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.590250688 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.558840199 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.59285912 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.585768204 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.561679806 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.886544302 seconds)
  done (took 16.65346152 seconds)
done (took 272.571919732 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.564826715 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.246820912 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.618786509 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.564514733 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.598413248 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.620592604 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.888224194 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.610019542 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.873064305 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577750774 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.596192295 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.578922572 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.568605756 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.787955088 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.55347988 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.578622882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.549957854 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.554091411 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.304570993 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.900649517 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.614455721 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.569402995 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.558046872 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.56017305 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.535267299 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.666126747 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.671521009 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.809276934 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.769981714 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.662794968 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.220722621 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.567229743 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.560394028 seconds)
  done (took 72.311065326 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.574907606 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.588064865 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.589400929 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.586437004 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.585964598 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.591531368 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.578649701 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.58843684 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.592440841 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.587444535 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.589174294 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.590646897 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.59076472 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.590278205 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.590970612 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.567196639 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.577962183 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.589613246 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.581854508 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.566415674 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.591048903 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.595118416 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.589081195 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.591202554 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.592231317 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.589536351 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.589500103 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.5899547 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.590624269 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.590665196 seconds)
  done (took 49.018079954 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.589665138 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.315581402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.52553757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.59148192 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.581693105 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.589375996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.99752699 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.587567176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.589705995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.587834249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.221787002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.592944396 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.636014398 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.541151427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.582122629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.591558187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.591805843 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.582736952 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.325825372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.597525984 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.99739066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.584864877 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.993411592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.598163356 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.586492458 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.584291899 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.59706161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.560200218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.60407123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.225847086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.55938978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.985281159 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.469792562 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.583080362 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.553385943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.5966742 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.595699146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.231027982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.579251244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.58537374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.991288976 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.579856069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.548609149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.376059693 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.598164333 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.594849387 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.55984717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.219602996 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.903157239 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.593823489 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.562389044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.605666056 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.598609502 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.589456732 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.908772687 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.583836115 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.586563068 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.569514182 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.595174149 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.987607433 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.590181964 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.586612795 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.32704983 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.582579601 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.320361549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.583644121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.605728424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.586362973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.550446045 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.590220936 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.401616924 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.60042768 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.59725032 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.228763309 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.319285225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.556613449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.582853099 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.330066484 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.503970372 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004034591 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.588914135 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.535854943 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.007387951 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.588178706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.604338233 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.60203829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.597870791 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.743064255 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.989609922 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318388812 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.397146452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.577756222 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.988439103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.602241877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.588508008 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.577652228 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.592330492 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.597856194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.55366908 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393945138 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.603115801 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.609025282 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.389481023 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.605117173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.996978178 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.600412874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.56756121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.586075925 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.741102972 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.599214048 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.605600336 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.595652142 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.994611257 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.588483704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.598597699 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.384704857 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.26056009 seconds)
  done (took 225.478907973 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.568047235 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.562543673 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.568748512 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.563545057 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.566376352 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.59120884 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.56490794 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.567281426 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.588468478 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.566089584 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.565637851 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.59108997 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.592196116 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.565916239 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.584567912 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.561527762 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.569015306 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.585024744 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.563706111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.565706086 seconds)
  done (took 48.869050458 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.600113255 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.358225931 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.319999422 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.595844905 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.599339274 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.592224542 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.67406393 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.599501585 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.599169699 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.019662207 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.833751554 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.600673102 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.60082347 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.602127198 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.325724661 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.574339237 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021521661 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.353747219 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.597461171 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.360015265 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.574609103 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.604738075 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.592633882 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.359777874 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.026270589 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.986123096 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.671420228 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.359926147 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.595799298 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.604766361 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.358902832 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.596758987 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.595388631 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.344403782 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.595871095 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.62923253 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.602373668 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.678552001 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.677683314 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019743991 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.360091461 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.99835901 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.621763633 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837967035 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.599466873 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.579454272 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.373840207 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.600209775 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.583744902 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.610559904 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.61861917 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.340765959 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.588257069 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.343393528 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.599470296 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.603116081 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.357494553 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.335232295 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.323092552 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.827654899 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.589824097 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.993235383 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.599206784 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.373041222 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.598781172 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.606853917 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.605472385 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.835278495 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.359007525 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.99499245 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.020888131 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.020157521 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.599935299 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.694827603 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.606340932 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027580602 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.686557697 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.092851681 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.021101077 seconds)
  done (took 148.153187989 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.983149952 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.745232407 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.14102771 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.36231437 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.280318468 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.805638204 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.751512116 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.937002045 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.586536179 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.78235256 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.507461808 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.718472929 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.48898816 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.692270644 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.737896418 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.800408069 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.161775321 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.59033324 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.440696613 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.465983349 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.578634196 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.759864645 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.234059094 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.873787233 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.568963134 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.252548247 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.599244849 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.300061621 seconds)
  done (took 61.571800857 seconds)
done (took 606.81398956 seconds)
SAVING RESULT...
DONE!
