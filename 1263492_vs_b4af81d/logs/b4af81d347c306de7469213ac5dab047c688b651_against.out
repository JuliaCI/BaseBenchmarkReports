cset: moving following pidspec: 24166
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.568062042 seconds)
loading group "string"... done (took 0.526306034 seconds)
loading group "linalg"... done (took 9.891938633 seconds)
loading group "parallel"... done (took 0.173492244 seconds)
loading group "find"... done (took 4.590714923 seconds)
loading group "tuple"... done (took 2.109477608 seconds)
loading group "dates"... done (took 1.422398616 seconds)
loading group "micro"... done (took 0.191667111 seconds)
loading group "io"... done (took 0.52972686 seconds)
loading group "scalar"... done (took 59.024683937 seconds)
loading group "sparse"... done (took 14.340094575 seconds)
loading group "broadcast"... done (took 1.743896902 seconds)
loading group "union"... done (took 11.241270067 seconds)
loading group "simd"... done (took 3.886363902 seconds)
loading group "random"... done (took 14.173866034 seconds)
loading group "problem"... done (took 2.238344276 seconds)
loading group "array"... done (took 24.346321135 seconds)
loading group "misc"... done (took 1.155957053 seconds)
loading group "sort"... done (took 3.813929412 seconds)
loading group "collection"... done (took 22.355178197 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696529146 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147216486 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.178978696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.226426768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27835921 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166552534 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161162323 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17346319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.665046442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212490918 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136523297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414462203 seconds)
done (took 6.285601123 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.45409301 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241843464 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186896043 seconds)
  done (took 1.154099344 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076609742 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158336615 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109961888 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095605873 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097101174 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109598714 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094298933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109532364 seconds)
  done (took 1.493610885 seconds)
done (took 3.897843085 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513383511 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.94398317 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.539263338 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181088181 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317215618 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30723041 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265938287 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221499186 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091333472 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085898982 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177288257 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.440546036 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387460515 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.988689344 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069767671 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094282869 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152778017 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.84284475 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082077965 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111315133 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53553521 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213366169 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116754791 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108004446 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191347029 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134574655 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141894929 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101877621 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.722945215 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138118821 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.220473148 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083413191 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139540859 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166828757 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215929205 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110694104 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.73891219 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203616745 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099424165 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102197843 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.755838434 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124711669 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206252974 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106521437 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069432153 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171869831 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101814972 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093862983 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094947829 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085917909 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175820682 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.529517546 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107054047 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194546248 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094912978 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.76372575 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101343055 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284787263 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128269175 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097233733 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092596133 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089585555 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170727158 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097716756 seconds)
  done (took 20.791786442 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168198205 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186709288 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079068923 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157961567 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122511809 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098428159 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085347096 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07891653 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127472984 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183047718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139437703 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174535533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094188863 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090963523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17008832 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231597817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12614572 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105875824 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090024227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108044954 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123142336 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097894083 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109945266 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092331364 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174615989 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209036917 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111522911 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123450754 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092784704 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09974781 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143371235 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14570114 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092346869 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088960405 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172225672 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123489517 seconds)
  done (took 5.356278686 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244208778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104386598 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.254508621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199388414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154658075 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184713433 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17733959 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301014814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.31959944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165469156 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133141931 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097683791 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080334936 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080281158 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096780743 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318728869 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.195136407 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.17256559 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186640494 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099410477 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100876655 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.731961027 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102409112 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086747414 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109922568 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066562515 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225542648 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095471219 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.083130055 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085977763 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121262208 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116047369 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210604295 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126006945 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122025574 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114870613 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116778049 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106334471 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226044876 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103928021 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.18088208 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079372942 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11592794 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137288269 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132018603 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094517885 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126734552 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226427746 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08825885 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.10061887 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11364888 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.13464729 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198666255 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.160637467 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085604112 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298790579 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129367778 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102882846 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111902847 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.829321592 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130549353 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082900416 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079936352 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114548016 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079524778 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.820471374 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126545003 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.908185532 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082533261 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160116171 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099634318 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121703046 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086970417 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085753503 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128491549 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087879541 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097009054 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088822119 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081493883 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111295368 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115213533 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086132391 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098554851 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149041997 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098598013 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.127374996 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109956371 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107428326 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087883452 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129578349 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083949921 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090414919 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188210386 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098267734 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13317734 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115367115 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13017214 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.107184859 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.30135131 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086646842 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123275662 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10384924 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129111949 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100750033 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080943254 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103405119 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080898416 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081813686 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162186197 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090468278 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081424111 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106461862 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086591528 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093047936 seconds)
  done (took 30.366994714 seconds)
done (took 57.230275863 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427284923 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083771477 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083247806 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104236929 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084355839 seconds)
  done (took 1.580918705 seconds)
done (took 2.354329415 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316412652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201554262 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088192709 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191534831 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088523338 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198077074 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185476449 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103117024 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210449527 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086926347 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196305969 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086599909 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107777322 seconds)
  done (took 2.862258741 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10554303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107553411 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104028103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122329243 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087124767 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105956142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120441433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110196765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102670179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114822283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087562532 seconds)
  done (took 1.943495957 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10144614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105459919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093465726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119007103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086970906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100090173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117809953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108675482 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100424013 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114483203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087876887 seconds)
  done (took 1.913103825 seconds)
done (took 7.491970732 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.225213346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.114020435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194129365 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251440424 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.358336629 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301416193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.624701996 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204906923 seconds)
  done (took 16.183669516 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.20621959 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113216492 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096744007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092458825 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116832385 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097404076 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093845943 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116446232 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092432005 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095661955 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091573586 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113417007 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093114844 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096536717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108526859 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093989745 seconds)
  done (took 2.554613056 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146299889 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.125709562 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118059357 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101200998 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095333632 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118124938 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103256007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09854207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114242111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096455561 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103111576 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116050442 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099790833 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094297466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116610359 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.124089034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094260869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116257172 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120010861 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100827626 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117660982 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09856868 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115297344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100666014 seconds)
  done (took 3.494746294 seconds)
done (took 23.01037234 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150433376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104251805 seconds)
  done (took 1.033747169 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167640941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18434949 seconds)
  done (took 1.136956731 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114676384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092382628 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140155882 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105926179 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093613231 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109426206 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118913935 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110644657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092596272 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092877104 seconds)
  done (took 1.862555567 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096031556 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096075485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12529226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170460643 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119017719 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094670418 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095776076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113753571 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097706349 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09400567 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115182664 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11136465 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097735892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12956934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096971829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097602915 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11958937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096419524 seconds)
  done (took 2.755549362 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092964894 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094345656 seconds)
  done (took 0.97703891 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095877696 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092343098 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093829739 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111810238 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093687543 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091065212 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109753202 seconds)
  done (took 1.478372773 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.538402754 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241072695 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380721668 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07480658 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126426063 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.461515812 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107420015 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074417703 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09407991 seconds)
  done (took 2.92353902 seconds)
done (took 12.953388626 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094353898 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.245515159 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.646954407 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115506937 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091693993 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163672908 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.32423774 seconds)
done (took 2.478146977 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357733969 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.16797583 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086390245 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094387212 seconds)
  done (took 1.501706537 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084042112 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100826788 seconds)
  done (took 0.988305845 seconds)
done (took 3.294148788 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091211389 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.123960596 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110371088 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090667395 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.091575332 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091320063 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109969641 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091576799 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092146005 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092226952 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109732459 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091337453 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089472272 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108172205 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09124191 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090811827 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089285935 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10730317 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09077558 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090266436 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108197349 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091196094 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090683809 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088635783 seconds)
  done (took 3.158402615 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113709362 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094051904 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112822378 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095838374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096369727 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113794498 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095707212 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093006589 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112969324 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092742171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095620819 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094996368 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109996459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095400051 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092135739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112305831 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096074158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09278652 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110878695 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096321257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094121187 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111199685 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096860851 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094760584 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113046219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09618353 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092648653 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112429102 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096824324 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095620679 seconds)
  done (took 3.825207312 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09805821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088503922 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090899269 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118223972 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088730138 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091725771 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105680688 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091996684 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092194475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091599078 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112090302 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092425929 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090771109 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109453234 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093271358 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095569276 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098713391 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110263184 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090895358 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092090761 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112385171 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09158078 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091178145 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090356671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10916891 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089544558 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091057459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109216262 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092455263 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090504805 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094551688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112708676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091652857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100899702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113168511 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094059168 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097365454 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106157145 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092635174 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088862487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087750265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10961799 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092312228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097769835 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109217101 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091561714 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091450945 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092127219 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109498631 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095015295 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08795029 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.108796446 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094277142 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092844418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095173834 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106139335 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092633497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087942538 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109984098 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092006184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088145846 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08908584 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.114222835 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092943383 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106744091 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115582506 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092625257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093122666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110757031 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097817886 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093908171 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119700348 seconds)
  done (took 7.870322965 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116379394 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100978204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11112726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094425765 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092948343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091240932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115869134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09373238 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092683993 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11668502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093350209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092336882 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110605336 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093379053 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09230685 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092675123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116235032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091982507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092485783 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112515774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094588425 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096838711 seconds)
  done (took 3.014108847 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242222911 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098782603 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143524955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124779904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110009799 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123793396 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096700565 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098619943 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113495298 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10158282 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102817754 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11487229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110226796 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101321055 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120666601 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104288471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114535165 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104982135 seconds)
  done (took 2.94087677 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107379577 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095335587 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156514247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095085625 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094538698 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113000124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100620826 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113820759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115016861 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094738514 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102378731 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112278105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096189955 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094762121 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112575768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095113632 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095696177 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093136774 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120589496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100505169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098670648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120370055 seconds)
  done (took 3.143814657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108671221 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094389866 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12985974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097050958 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093699555 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092285688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11921921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095071238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099516426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112388034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094734184 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09390419 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127499314 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096316578 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099270166 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112920784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095327136 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095072984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111874702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095416184 seconds)
  done (took 2.882579971 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198733233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128969473 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109428161 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117276366 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129419181 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110687399 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13704578 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111978975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11138274 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138432967 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114138955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109008415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137165208 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116919128 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128273435 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119053757 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119888849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138962225 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110095914 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128042819 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124283542 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109222898 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13606849 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111556295 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109738955 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129034635 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110289444 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133742426 seconds)
  done (took 4.299285964 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093057294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09473586 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091838285 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111587374 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092979142 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093557218 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092140907 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111455724 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094156806 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092519726 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111478911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094855708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092484247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092766057 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111490784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094369892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091948215 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109943311 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093047028 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09339826 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092192031 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111679565 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093873948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092463714 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092090342 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112575139 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09367511 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092505339 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111779019 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093988139 seconds)
  done (took 3.759567959 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106655462 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104172046 seconds)
  done (took 1.03294567 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102145391 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107316301 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091933618 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112556562 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10118242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093136285 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119978735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100095201 seconds)
  done (took 1.651047875 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168441811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191963726 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099942946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124251625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173162383 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.185236404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133000502 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.120119535 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094136342 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085590843 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185805471 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084992163 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112059781 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09275118 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093384571 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120458963 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095123618 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102919931 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120535998 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096869232 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099219601 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116941686 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097853784 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104003799 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107587913 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097419371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09751715 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.126197473 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092445485 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094960679 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110664421 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095525416 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097676597 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098607721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114216549 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.174564028 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122517535 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09171704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114450098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100586535 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128349492 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094022222 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116230074 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093480672 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096244571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117635978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099215061 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095252825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10605818 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090382443 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094829726 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106894668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095121384 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094776438 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112861279 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102080998 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096978393 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109027692 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09287005 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092152431 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093518247 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10967505 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097192528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097105644 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115147394 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09602087 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092806495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113649509 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096709854 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095633599 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112761057 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110543177 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095353606 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117442867 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100379734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095650152 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109988219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101502433 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094404883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112542454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099105689 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125227727 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114043832 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092031675 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091776335 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101009283 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.116936379 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098409442 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087881357 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121913199 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096759371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09580932 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106652879 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094517187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091254481 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116308575 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088479897 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09575205 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094168819 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119219141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10126176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093687542 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115625807 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101312814 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099880508 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112343546 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159494863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111171818 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092019593 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097577562 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118540563 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090452983 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094549732 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093134888 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112263299 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090661878 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099366058 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114437457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097477479 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099048 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115567978 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097135606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096043708 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113850371 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092560095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098857614 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12203179 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098046895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097551023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095485047 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.115499254 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094917447 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098945892 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111004479 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101764268 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092040685 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113275229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097371391 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100958718 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113148396 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091109421 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094788451 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113932644 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09560273 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098667225 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114051585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091450596 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087973827 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094722101 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110001558 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096863784 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104092636 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109718072 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099039061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091688964 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123247167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092148729 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100443778 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119170601 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102001378 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10187287 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086401909 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111586257 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098012324 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096093365 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110903279 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09698873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094630469 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120778068 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089063071 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098781417 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106463049 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093330094 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100677677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096255676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117509147 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092164862 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133624464 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127609314 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102139805 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093344552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114974327 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099770718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09292704 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119431808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103145169 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100591143 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110667634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0958184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100049454 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110062111 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09921101 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093326393 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094829098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.108243444 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096986774 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086443884 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11956716 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09810661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.100138433 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119221795 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09809788 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094817994 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12254638 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092771713 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100657423 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087216887 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120648093 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105885043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101299125 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121037948 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097224654 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093513148 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115997781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105137881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097832553 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114095724 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097330045 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088813877 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088416411 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121182239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098094877 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090840532 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.114406936 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100176706 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098017842 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112525902 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099873804 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100119854 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119239954 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091314754 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096461708 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110635577 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094614475 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103616039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106992097 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092756349 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097912521 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099793906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.115261026 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095524438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098095924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.120663668 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099651848 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098651441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111847114 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105553367 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094547288 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095468565 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112323431 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098746566 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089138291 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116466486 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096355968 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092491021 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.11062112 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100490083 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102083862 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.121083205 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094964729 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100894953 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120510087 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112494752 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092917053 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100817708 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112047698 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088907535 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092105777 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108179818 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098394216 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091347859 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120986405 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095383009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094721891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118389078 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098448762 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092286526 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119683585 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107337253 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090075072 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108595514 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094466971 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095966044 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110870244 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09245617 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096994317 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096734787 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.1202185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098402458 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092476285 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115527401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102114451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092050253 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122198501 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102314198 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101915404 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110803825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10105908 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093282323 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117612722 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090611104 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095427079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094285942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115555687 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093233225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09409758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111410397 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089820151 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091835352 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122209186 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095745765 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099402445 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113976085 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094915143 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092257612 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110821425 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103823818 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094082005 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101904858 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116886722 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090184932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088749833 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120465808 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097429638 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101144915 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110903628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100930712 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102732338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099292305 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117189693 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105658338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103477824 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123963669 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101242414 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089022423 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113731572 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100884547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09603372 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118798556 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098622597 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08903311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116891889 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103065341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097385429 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112106993 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090212659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097611645 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101638623 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120930113 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100259677 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097578401 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11511401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091821802 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099957054 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101996909 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.117240537 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102054738 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095493847 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121330932 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094027669 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100598338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117713851 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090391941 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08908584 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11332754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104023913 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090128849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098675048 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120729668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093205149 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092877803 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121493243 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092984031 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098292737 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122056863 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094799765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105266808 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115563229 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094796203 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100552102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10096647 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110545971 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09454212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094302145 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124809656 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094583257 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100506147 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116200741 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10109442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098200197 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121054221 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102496274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10202254 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088874849 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124681567 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09986654 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098464058 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113467431 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094477168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090351434 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115063724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103771855 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092696704 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124661314 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103221785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095129974 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114568898 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102530426 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094824838 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101472122 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113438169 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097558426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088531999 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117884614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095068304 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101778724 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.114328086 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091282627 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100826299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119515897 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101566058 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098103607 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120745593 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090328455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089579758 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098098368 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113624575 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106609646 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098180921 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115146696 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095401657 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097879206 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116702689 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104571748 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09023389 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111500841 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097956171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097661232 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114483204 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092798184 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099676502 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093733568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118418341 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094639549 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090215313 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115749845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103354554 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094636057 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111935253 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095044419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103443322 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.1151226 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094932882 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090651402 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121495478 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099122102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103288275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09145772 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117953616 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094095485 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098011486 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123222024 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094887485 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094886508 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114815369 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102042376 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101656851 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109537463 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094407187 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105791735 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119626874 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098614356 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099115188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113289057 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104805716 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102072058 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098081537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.11096432 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091677161 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095189689 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110660511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099847125 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101279429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114078753 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094902711 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101534141 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09902621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.120559814 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09907901 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089363389 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123746463 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094033955 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098741118 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11015018 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091280532 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098338692 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100637727 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117823572 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097190082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096207556 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120163395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092259148 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093842939 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121254316 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101212312 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101374274 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097175486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102219563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126166462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098999741 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095268819 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102600407 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123442234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09744626 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094573968 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121124341 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102394166 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098032997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124031834 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094795924 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094712812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122705967 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104722116 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10478623 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11554088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091577428 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100396077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114021623 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091757478 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099297404 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102872439 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.12467584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097175765 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092622812 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125909098 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101616972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09542226 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115376613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095112025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100204781 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114984245 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100477722 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093014831 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123456691 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104425919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102825436 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103552135 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113791774 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102600548 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098131612 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126132799 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097707397 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090479313 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111882104 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101203861 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103374667 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122554761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10247616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100436306 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101027791 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118048601 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098072807 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093182031 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125804126 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102213277 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097110813 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118534697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097425727 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096824812 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118036589 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10356324 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103618623 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097071074 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128741791 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102965537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094822952 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115230366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098025943 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098764375 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117616632 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102917976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09290078 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111303819 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103761798 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104369627 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095112094 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126323187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104534033 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095377631 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12109438 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105490439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101893055 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119899185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099550299 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099674197 seconds)
  done (took 62.989685072 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148607375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105276097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119783598 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100541556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116607915 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121652272 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100266242 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100928337 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12061904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109562885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098619594 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118576042 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117667478 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120344354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136660046 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109292459 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118618087 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101446839 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098709479 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100435257 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136808528 seconds)
  done (took 3.279294805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117250245 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113933623 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132190064 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113032181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10442096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131901549 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11017693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131340864 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114567153 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106329443 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133613359 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110754377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128514666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109711368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107877754 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127579003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114652778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107062008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132599823 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110956009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106650084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131692096 seconds)
  done (took 3.472192937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130257765 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101878947 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097604312 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120555414 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102591747 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098579016 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122828259 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100758484 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108573164 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094019847 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112345013 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095632692 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097354489 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120520912 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094806191 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099430451 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127886025 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104440446 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103923272 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098442756 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112237946 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099533677 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099207867 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110535286 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107336206 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10447837 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099105969 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124918888 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091825364 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100983093 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121360614 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094101352 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090612221 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08941563 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112151972 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102506541 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101573042 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121141033 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100613772 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090540844 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099542477 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125727999 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090665929 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100074108 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.12169222 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094805282 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10219428 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119105998 seconds)
  done (took 5.941038312 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128480026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.555609551 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104467614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138794884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137966637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110870943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102001588 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139551754 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100264286 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125043065 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11638987 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113210974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127365428 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108307907 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104660656 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127424305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1060843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101975957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128561879 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103880389 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107467087 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127181606 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113136035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13333169 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108177653 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10296016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123581008 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107851494 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112054333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130380337 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108670174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10783599 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135794573 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107133666 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102309379 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125747345 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116181394 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104147322 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127349225 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101847029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103749925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128340692 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106477507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136423214 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106040021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106668802 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103875639 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124171517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112496498 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124800647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110938759 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116189984 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128135568 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106254573 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106597633 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134608179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105937564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102335918 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126478094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114313419 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100690947 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128781321 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114991299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103825214 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13224007 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114019527 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127010914 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10736044 seconds)
  done (took 9.335891667 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134455436 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10752785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136905608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115844899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106208199 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130465682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107731227 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106988606 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130645664 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112661393 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128131377 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22782974 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127782171 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114072886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106815958 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130850509 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107318954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107166561 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131037194 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107809869 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106274548 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.138073354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108087419 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137365582 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119489147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103547945 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128970101 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107758186 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13666696 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109110453 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118050347 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129191079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109570219 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116516283 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144505387 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108446542 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102308401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130254553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108307767 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106837818 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.127525993 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116738378 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127657993 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106272174 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108070866 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128804857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115686568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118615503 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13436143 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115140689 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129266718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117221471 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108139659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129445371 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117794588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143110796 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118451516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115481026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129482387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115914671 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114915451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145541133 seconds)
  done (took 8.424320928 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102606204 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100260795 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101354579 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123112862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101896198 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100649392 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099983595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.125022812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100892788 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099940433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121086417 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102769354 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101528972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099621118 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123116634 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101097912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100229575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122158062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102033436 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102176401 seconds)
  done (took 3.02663125 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112141006 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11783775 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124193517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109649558 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103288204 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129420438 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104572166 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103186375 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101804356 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125970628 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111550428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110951748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126076158 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108817958 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134094427 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110222746 seconds)
  done (took 2.731779649 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121216392 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118517656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213323286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105243691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127779866 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109972155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103833315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128312336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103100681 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108650199 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106125227 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.131254401 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103211799 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102983766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126268711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107037913 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100782858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128705124 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103795043 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218040297 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108030707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104356497 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12773866 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108000396 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105201227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13087586 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111179222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103257195 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127252844 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105523195 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104002052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131743569 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104057157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107370079 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103594528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126855936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104136636 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102924052 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128321905 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10518258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104797684 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125890381 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105616503 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105420529 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123015015 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106145481 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101439226 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109237075 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.129439854 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105593036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102800223 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131166959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108491449 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110365012 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132945258 seconds)
  done (took 7.320943886 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114818093 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104551284 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136497106 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103164515 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103722548 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104298319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127446793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106026402 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103661436 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124781929 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105727551 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105726922 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12724607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106417303 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10519138 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104189856 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124167885 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106437418 seconds)
  done (took 2.914723234 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109265711 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104081531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107782771 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126753898 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10347042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103344078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125842818 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10318435 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10201388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102319995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127416343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103333461 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1025511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125995142 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103749786 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103054655 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12477285 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103877106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104409926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102549912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126077834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103529925 seconds)
  done (took 3.325650978 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115741254 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21773111 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109761234 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.225419867 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100511036 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099396229 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.136211385 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100802414 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139488548 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101984058 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100557899 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122561885 seconds)
  done (took 2.476716558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131953372 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140482948 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128029759 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105458523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112303387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13126376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109419151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108858396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141525609 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120129033 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13043174 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118070461 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116332671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139460472 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112791578 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135647767 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109680987 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108472942 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126123232 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125380958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107978815 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138568529 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108863565 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108613393 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132280089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117921211 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137632446 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121008615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108803151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141161317 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114227724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10904138 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14072865 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122506291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127579142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118327547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108276479 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147561362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115120994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138582497 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106839983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113973083 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139268617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115170721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116240969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13281235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115034181 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131467696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110305437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129561378 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136682396 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116796556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135044617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11796528 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11741528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152692252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121684259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140606568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11430874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14251945 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11942196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112975191 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139678796 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120437523 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135094274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118834665 seconds)
  done (took 9.076757527 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144839718 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105647443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131890095 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121792513 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117616912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133646534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110082644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131341562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110556238 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106511031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176205927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109772967 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116879039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141617101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109679031 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131458337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110677202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11798763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129267905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132486331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109376898 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140641837 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117646525 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139923589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120575249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135858407 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111951876 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109596129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130710407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110371298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113664244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131686299 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118076328 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104849786 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14143265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109394777 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10893585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138411525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110782663 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135836058 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119129675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124572405 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132428223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109823603 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142009679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110319616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109647882 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108604174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132346369 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105941405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142692796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121654157 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121887497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142124707 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110171901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132040324 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110397278 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109762073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131712 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115013648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117966258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132995404 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131846864 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132148229 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110171761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117067681 seconds)
  done (took 9.020562183 seconds)
done (took 171.717371676 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176568193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217171402 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199191531 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164640699 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095371835 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154634888 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128489803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199830998 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096425111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095463117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09529501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122787611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.208121857 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094636196 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119865452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098711714 seconds)
  done (took 3.175860841 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183813598 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338861318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110582219 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12343504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103104592 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099823238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123594138 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102859798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09989336 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131543892 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101235499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09649153 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130949753 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097981943 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100043099 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122457053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109368447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100547353 seconds)
  done (took 3.199302439 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121433529 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154846577 seconds)
  done (took 1.198614363 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13092475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215050741 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287678063 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173209456 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122083751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142083989 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152149096 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135699309 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192306508 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137714649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114375089 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099010426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150514252 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106087374 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116259337 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12235264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129167124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11466514 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.139375545 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103768153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14910681 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105426954 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106770491 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137805513 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182878074 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135413099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104626014 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10386258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125967835 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116000925 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107855266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141220262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113963654 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181314886 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104075874 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178478981 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107869722 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124336412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114989972 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101555023 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127612736 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105128313 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114491654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.123277129 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104944281 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107675494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.12843812 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103755303 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131362165 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110096822 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108712987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131272769 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152839687 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1326052 seconds)
  done (took 8.033421918 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.88109319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1423746 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100959835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.02702285 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147391229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11433528 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.875689919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150192493 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253672691 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.900942641 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117239699 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108644123 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264542788 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259337798 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288056813 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36286409 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713025588 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137019798 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131387728 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165227575 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10930112 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147708937 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122517116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.523491779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101590573 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100588699 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132969912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109919913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179588479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101866864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104747538 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196157207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293894007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212058391 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101502293 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122288036 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102036998 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184933642 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274443838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221524259 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17481818 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12004229 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100593518 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10836811 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143362644 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098163251 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181239039 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167866878 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190410107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127947764 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110766879 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11092472 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131485994 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155472564 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123431199 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360181556 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362935958 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101001741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134465633 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112793673 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268608249 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12657273 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237210262 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129550692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216572024 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123310583 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842970464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164154394 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123382729 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106275945 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109383742 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130653555 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108695037 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192623168 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.481578139 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134125087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10591256 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100963467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237411127 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100921842 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12407318 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180948638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102814122 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109913279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135965474 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111620199 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19106417 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247317973 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135838433 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109863831 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130190928 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115626855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102468477 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235026046 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230017378 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17758627 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229799754 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110101082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183004487 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184628436 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107355482 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190744926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110673641 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112895152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132828623 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228066083 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133914515 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126809213 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107740516 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109794968 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160920813 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104523417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134964928 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164449474 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.56178366 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187078887 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098835962 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129656222 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111994968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181770881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108470497 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267600789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134772655 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164113048 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13255275 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098933391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110760873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179969534 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109025945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134644426 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109469857 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133686554 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260006597 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22135238 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134209455 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255422774 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178011953 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130097479 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169405201 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135256376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187657034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112115305 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108439418 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125858393 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835980539 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117065515 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109599412 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131569873 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185866792 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12590791 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105411658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101351994 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097645587 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843078369 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108860841 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104306001 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103504922 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13064748 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110379678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133442667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108118987 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179334188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246426519 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110421025 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133426464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102978388 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181332836 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103424115 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102134566 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123912475 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103663741 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111594847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130284095 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105426814 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190235784 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154969497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253561643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656778002 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102628134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102204337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242234156 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124235631 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327714928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111605044 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236280745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185488462 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098623925 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360939264 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186688824 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210709756 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106283767 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192991022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099984502 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133006369 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156820152 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125476501 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109323818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177953984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11490742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111332175 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.30982648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103192941 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253079529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09987981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189654285 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104013576 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107009138 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351986031 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104555195 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116489744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18212735 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106874974 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126125117 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.689207825 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103410567 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114059407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130231086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234430998 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184519764 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112884537 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112082759 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135393405 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157115371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231866007 seconds)
  done (took 48.143839242 seconds)
done (took 64.669876597 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272262206 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180171654 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.382698386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152648601 seconds)
  done (took 2.006438319 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271843159 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17087585 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.256299701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100274903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262366813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099456921 seconds)
  done (took 2.113126397 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179075914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172984847 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149013921 seconds)
  done (took 1.453851569 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202868186 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220214177 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334851729 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236920142 seconds)
  done (took 2.032748717 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294246705 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117530658 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127388266 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239674682 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256090108 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209293654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124951364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177806968 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131849588 seconds)
  done (took 2.673167517 seconds)
done (took 11.225858959 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.284806678 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.213595457 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.440594436 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.214251966 seconds)
    (5/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.356765968 seconds)
    (6/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.171969494 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.374758201 seconds)
    (8/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.354820749 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107935653 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112326924 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.300241741 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.214208175 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.150627324 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.142438574 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185452284 seconds)
    (16/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.182989681 seconds)
    (17/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111878822 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221412793 seconds)
    (19/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145736619 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.311802639 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104285258 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.309678975 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.403133527 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103460852 seconds)
    (25/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.291279289 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197520439 seconds)
    (27/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1869853 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132110725 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085678004 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.284195218 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179113978 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.197758528 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111099743 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124542373 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.236013881 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109104517 seconds)
    (37/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.098953365 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137822693 seconds)
    (39/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109072529 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081639083 seconds)
    (41/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135300725 seconds)
    (42/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136699716 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121189992 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.262889157 seconds)
    (45/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192481111 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.108833811 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197980553 seconds)
    (48/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180315109 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.1361303 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109286733 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176801323 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161076279 seconds)
    (53/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087811655 seconds)
    (54/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.183848798 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.100016071 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.113413794 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10301275 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.2736334 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125265929 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081581114 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130082393 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.162383498 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119328302 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.21669236 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087726309 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.317417878 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104738249 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101698127 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.146923991 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080810695 seconds)
    (71/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.15389436 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.131670306 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115901122 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105043316 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.147094683 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.135909671 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.199780782 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.129629822 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126091942 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107712719 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.10365096 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.188868082 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.086681484 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103625887 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108478878 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11318667 seconds)
    (87/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.174746593 seconds)
    (88/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07946646 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150117553 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112430359 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111192771 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105226649 seconds)
    (93/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086966716 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107810497 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12320624 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151154836 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.138430383 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202542376 seconds)
    (99/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.151400887 seconds)
    (100/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134939855 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103186655 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10884331 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.197303373 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127964527 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113004524 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088250259 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.151510537 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.114087553 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105297398 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130254343 seconds)
    (111/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.157427911 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.143900771 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201957176 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105693957 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105794529 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105609869 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.203220814 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084771954 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109014281 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081669045 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138267792 seconds)
    (122/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081914048 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166866751 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136220814 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080807203 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088682856 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102618287 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087844132 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137299024 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.089633745 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112296892 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080343806 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.112808479 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.136084763 seconds)
    (135/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083838594 seconds)
    (136/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089084722 seconds)
    (137/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.105559443 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103603329 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14514674 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083960607 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151652944 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126862851 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080360638 seconds)
    (144/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082047375 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130747493 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082424448 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109874657 seconds)
    (148/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084180607 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.10869392 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115634886 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084281877 seconds)
    (152/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114244416 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.108858675 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088251586 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106281881 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106011805 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.13185755 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106669431 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084324969 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.168592598 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10323296 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.237570923 seconds)
    (163/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.148021407 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084741851 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112216714 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.106252758 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.089216234 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113491039 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105311367 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.115123439 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129084153 seconds)
    (172/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081843788 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087520487 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.110029914 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114971394 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106704002 seconds)
    (177/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083763864 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149739084 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088939033 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104327233 seconds)
    (181/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08661716 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128694927 seconds)
    (183/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082324086 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115201591 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087110379 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.112585057 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.082528302 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.084710842 seconds)
    (189/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08218161 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082158563 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081485432 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108497456 seconds)
  done (took 27.859220506 seconds)
done (took 28.814032847 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227560781 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134281461 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113362461 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113034766 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.237295329 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119938506 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.156253948 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115396518 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123426798 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.140292002 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103256147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125825218 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138512376 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208186111 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142470351 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105993157 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103585379 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.150318976 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131170241 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12995682 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.239453146 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105713583 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149369204 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105198922 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238079996 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106239278 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113158314 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140461088 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126820876 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113681216 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139549799 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104833513 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129732419 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153919084 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104519646 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115240772 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102920839 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113229134 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115004638 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113869787 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.15081422 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115198029 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113731712 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129606565 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115297204 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113985374 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104085093 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.143202917 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102737436 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114845191 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132043328 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130218026 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111898867 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128063841 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104430039 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105143817 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.149165337 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105131176 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126578806 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128433092 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106598612 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104583481 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114570785 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130139524 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113304352 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105066852 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138057919 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117264632 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112571089 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130891854 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106597424 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113368257 seconds)
done (took 10.260641874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109073088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14902335 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.239168612 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239114694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132423404 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147969864 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118733744 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128366254 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143385482 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123449497 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142479431 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162901232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.242359241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120908881 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120209211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143223451 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115587185 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113544466 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241078352 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128710362 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159459942 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120321655 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157857364 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120771992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10828898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167943773 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11267613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116475915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132675182 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118587567 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129074864 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133325613 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112125851 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126942539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150639337 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11923737 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120673935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.142997165 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109812917 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109461475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142445698 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123849898 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108668008 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147626595 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117294734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122615174 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140566059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121265142 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109255584 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141709711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111138854 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133449372 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146768593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12662979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121517198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147951147 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121822056 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120348334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137650884 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122283078 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108196789 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133209537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110839374 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130967911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137109824 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12136704 seconds)
  done (took 9.925093058 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128246616 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138600237 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144580048 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120322982 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112826778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127107155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101948369 seconds)
  done (took 1.878779418 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104410973 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247263286 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219725148 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246926443 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.246388036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258625346 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127375904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.131091321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141123882 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114262156 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248653337 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277082791 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114549483 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147222702 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224003486 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131171289 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22402325 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132037251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121082367 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250805148 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12169662 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162427289 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118205395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105078306 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24386041 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105883926 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.297116484 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150238798 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115292175 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11879723 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146911349 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185837249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244753121 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119942837 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140696872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219627719 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.246201141 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145811699 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.233988275 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.137321862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.217831331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.146553273 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122118462 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119964836 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.149079572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.207548809 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151976379 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119832347 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117628506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253767256 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143491432 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218754634 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143732174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119185966 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116923388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148745662 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126300698 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120394081 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.255968583 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12107643 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249086982 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25173704 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.248980753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249479002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129464089 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24920711 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206291876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14656794 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113009972 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1211249 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.252680805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145618937 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117970239 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.240452714 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122848583 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.254110107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253421193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116822397 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117455858 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.136963437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117946982 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104961392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.243475445 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118049718 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116592131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151325529 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119587135 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146996695 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110755146 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128945518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.145856956 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118380767 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123981338 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.145702118 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121901815 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.254390869 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116760169 seconds)
  done (took 17.30676373 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107960237 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106282859 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110965368 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13289588 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107060402 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106825526 seconds)
  done (took 1.702940157 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143064562 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120688043 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154738044 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122302494 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169719278 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.253772075 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262701772 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114714588 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167406344 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132612115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.258017797 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259974191 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258993549 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124755878 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261935963 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123288583 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265230515 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118803516 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128039466 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145132632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12124377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123912335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144852149 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247186182 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121200259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121425847 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142394714 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130821803 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147829343 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.142245253 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124960025 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119359872 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.139865621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114561356 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263088134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111121254 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143503933 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123197649 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122221757 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148103749 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.234740465 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146051044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127574254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122665529 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143571959 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112596651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122782652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141867063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.264398147 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124695885 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123052031 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14898801 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122860944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122376805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139999856 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114711236 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122651212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.263527995 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123581428 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141926009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121525161 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122756672 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142005698 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124745961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148280797 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123935174 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112305901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148094251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118164956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121579357 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149377864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122050018 seconds)
  done (took 11.99181097 seconds)
done (took 43.801645448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.771853181 seconds)
  done (took 2.800894792 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.062707695 seconds)
  done (took 2.091415116 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.816085132 seconds)
  done (took 19.879060459 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.445149904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502497908 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.14265152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152019891 seconds)
  done (took 3.27303954 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.838529117 seconds)
  done (took 1.890664798 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302067951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268285792 seconds)
  done (took 1.606390729 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779792319 seconds)
  done (took 1.827317915 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.549035111 seconds)
  done (took 2.589353785 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.289340146 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244117426 seconds)
  done (took 1.582175569 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655563043 seconds)
  done (took 1.703126913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.82755796 seconds)
  done (took 20.881827152 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263245766 seconds)
  done (took 1.318696812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287414343 seconds)
  done (took 1.344760392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.786474034 seconds)
  done (took 4.84202181 seconds)
done (took 68.671761195 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117086817 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121035015 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118891935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142999888 seconds)
  done (took 1.542125504 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125936127 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121028589 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.150456703 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121653739 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12013958 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146998721 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123239974 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119216906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148984239 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120990735 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11989297 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150458658 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120919916 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11800041 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149752213 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12501052 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120660525 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149008265 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121851529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121128043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148048365 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123618862 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123565573 seconds)
  done (took 4.173007126 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116631172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111167209 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112003279 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135350033 seconds)
  done (took 1.534705845 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129328108 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133834687 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156366532 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128668387 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133443506 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157164469 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119601382 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116587242 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145878048 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129630591 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136448008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160397492 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133533112 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122699611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15801339 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114859299 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120568614 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.160184127 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127567898 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128373028 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148030067 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127297263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125991651 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157274818 seconds)
  done (took 4.327487386 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197709988 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132978782 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179162518 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167169792 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.183578582 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118958074 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148703058 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15388975 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127826799 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.12316671 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150947617 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165693766 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153042785 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123647498 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12107203 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154068754 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133773855 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126054577 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.196872172 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125513237 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154550869 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132303417 seconds)
  done (took 4.32891082 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123959409 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111363812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107986358 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13895985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123916037 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113060816 seconds)
  done (took 1.782590859 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110259761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105083963 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105147379 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.132167854 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109887089 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105715119 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103682738 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132185943 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10515583 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105549386 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132146274 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.1055739 seconds)
  done (took 2.416415034 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206692555 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149122595 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259384661 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.499084904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164726464 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190829574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309998289 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167655119 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20926872 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139886364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220556888 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163542864 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185200087 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214590836 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142556117 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161852286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197210832 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240523394 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144604423 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247597477 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159547244 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208711177 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223461587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152119553 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172575158 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163383207 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120565821 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158381244 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170786034 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195039956 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206044708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153109973 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171695507 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196302477 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265648865 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208896816 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276025115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13539096 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20261543 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219678145 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263603563 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142866213 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223783974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15490657 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158586368 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189133618 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185262874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185856316 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164594883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145763438 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217343839 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208937673 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173221469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166529068 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302196808 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162618864 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144054003 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249347211 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218885655 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205233221 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210260606 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124182342 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206023406 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220739803 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247059979 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143903426 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195980229 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126356082 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197356242 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207651057 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214083439 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190526463 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239723711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133937004 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202251767 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171202986 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185789129 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208306238 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201160986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120953789 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182337922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135537348 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127076076 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21923996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12266944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246450194 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132630902 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.346982881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209806149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156033529 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19403061 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191308825 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164974611 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178508244 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104337989 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144459851 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.192193644 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159759911 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158636165 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15683363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168550973 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129214825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153922227 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.153653967 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172680269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.165343442 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164207683 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203401425 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132512103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208083444 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15038728 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191836476 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170388567 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224575835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130640216 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163627721 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252179136 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17035651 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.165959861 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17697928 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227944699 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150797947 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164853785 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167088846 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225322508 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143455952 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229279715 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168941246 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137005481 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171093685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174177806 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190199605 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161677962 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157575275 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167535201 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223998457 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126576431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16910195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184036391 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163574292 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126096901 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137434027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165809563 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144555184 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.179275381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140980218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182892252 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169404224 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193820736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159862578 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163314553 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17512618 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160179867 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171576288 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17892387 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121482348 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203894015 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199363411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158707961 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183095629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192788203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21184754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172967596 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130680095 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213988873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127896641 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.150733205 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163525334 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200124471 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16456108 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219060678 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20843251 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195207994 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165151378 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179914219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17080503 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214576309 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158152234 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173944326 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176594104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20162082 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121259204 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.153667586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129183467 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138419627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160660235 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137667576 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213383699 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166758287 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20807192 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19601033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140511654 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222999308 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125513028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192534958 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175809298 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169798827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189994691 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221658425 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207946206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142338352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193366978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122534297 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127789853 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165523144 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163729201 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166590877 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137066662 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141800924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221593333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204121348 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150714906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221788608 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195299067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203147481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.151227192 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162839562 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200057214 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168762242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.215033839 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134366597 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161433657 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222310183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171778757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198958122 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200618388 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179146803 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228680966 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.198404839 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13213426 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178501051 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163993759 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140909189 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194137606 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147580359 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161300121 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155085364 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.169921469 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142995837 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220644259 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146485946 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212345857 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159712768 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203273475 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125954704 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172876174 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202116484 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148823953 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106760503 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202265944 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226787219 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152064798 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18666431 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176311038 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159627422 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318886151 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221123231 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180379293 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168324338 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139548612 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202364979 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161812127 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194261225 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185555998 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173396421 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239434917 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175291425 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172417456 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133184395 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149864309 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183240829 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141479164 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.182803065 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163053765 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.175517641 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219527148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137506941 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197740369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179529533 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175001514 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152057744 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140289069 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256901594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200400694 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175316708 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195432534 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167404738 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21454474 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125043135 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156241726 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134218814 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215981935 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130976292 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178544632 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198745525 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213384956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20568237 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164822077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171034389 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129267695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167946986 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180964074 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215573992 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137666878 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168399138 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193456165 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159558908 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132040813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160571048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322154026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179967579 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175080086 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108673456 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315424608 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159995695 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13436108 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16387042 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201970726 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133554134 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.214042721 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175700764 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170892821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164581893 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165501493 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181663464 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211606238 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198328153 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176998975 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176250555 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163172426 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193697536 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20394011 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147961343 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148223947 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190463117 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195646457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208432162 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13158929 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199776871 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170185608 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201563272 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207697292 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140532256 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215537604 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129319937 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196655175 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139971501 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124889205 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191466806 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195375054 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132881562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20849439 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171781621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160187689 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13053301 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14808594 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196337467 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141481329 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.160647664 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187791129 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.16019586 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182769122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244946512 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130608997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198079937 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146847444 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161059378 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139728313 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17319891 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133774554 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178452022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211935051 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131594598 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20942775 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166788459 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196686953 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188085859 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145720486 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265367335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159317536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191955695 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182738042 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23014854 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152016119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208388092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171180217 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181109134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166386452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180808607 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221776735 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197835284 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16876783 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162174044 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145006079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138918364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163749525 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153911681 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200733836 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143421311 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167432186 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168177392 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175749933 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14846434 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141993895 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232638941 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182758925 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191168095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219973853 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139295507 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207707209 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210035647 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129321403 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194326737 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174379298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174731577 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153347992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134663633 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169016605 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215020849 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.158284654 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162098756 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206278256 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169366021 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204106262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136525392 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210179032 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143479349 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207374136 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127796139 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184674951 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171104859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166918502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13043188 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200659664 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163254978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196106433 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143057647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179444886 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226496819 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124342209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165658845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291758121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192519384 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226513022 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139224687 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13916658 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180210975 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160688171 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.196708184 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171971939 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.162343899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130614654 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174889209 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160717505 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144148498 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197904356 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212610975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164626103 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2170973 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137011068 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284301028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143758574 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172007279 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148794131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129813016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169907012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137351265 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14394987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211940779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245825045 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163838711 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179833692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135994668 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.157294165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13356936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164946115 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.717002421 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173651692 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179376582 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106207361 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171151374 seconds)
  done (took 87.413433442 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232986541 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.181724994 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.197174585 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.263592109 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220810971 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.327939049 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.256205835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312520188 seconds)
  done (took 3.140567386 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122962005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161301308 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143875488 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145192066 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111535342 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.491497976 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163055371 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123145757 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164243721 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156834469 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138420465 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581125365 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117581991 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147618562 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124332641 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137951201 seconds)
  done (took 4.180575407 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.967348501 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55997931 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.453321194 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287619257 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267235799 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207646029 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81561524 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20659394 seconds)
  done (took 12.914813539 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171613234 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168329716 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458993145 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.315321802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186984253 seconds)
  done (took 2.458367437 seconds)
done (took 131.257132143 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126358387 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125920831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125402888 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157574368 seconds)
  done (took 1.679893442 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1978936 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093620286 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096046362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123247936 seconds)
  done (took 1.665650011 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468047787 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093689079 seconds)
  done (took 1.744878311 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.162312051 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13982211 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.17002644 seconds)
  done (took 1.645547174 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138411177 seconds)
  done (took 1.298963367 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13127235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133836432 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.275468899 seconds)
  done (took 1.707089079 seconds)
done (took 10.903703117 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122833288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.938541836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438356791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136892268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71625903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431766707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.428953081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179145197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179615578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140654339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135843811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694840175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.444789313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.885646142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.401326873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.915471025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707871791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115224359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14729848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114566105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.410532094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139710015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115138384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115055483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725765266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425639741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111786283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.930037821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112019343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115864664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431231513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114067508 seconds)
  done (took 21.173165597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114785267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171253482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15058081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114600048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116181953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143233787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125700692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126829885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209228632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113155311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164382706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112765458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118587287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141718091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138795303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113245197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115856423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146033095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120887789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114502689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165191119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111877146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114317959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144597787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112894733 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134055944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142747482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125947022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111896841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147286955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118488741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112514168 seconds)
  done (took 5.384598419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16323696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181214804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151689891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151732564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194112044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115522861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230579461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1527901 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210766187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114885489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135083379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141021913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155964177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114032867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168032262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113341718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116039128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145633254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122484709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114574207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165189651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112982385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114542219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14537526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113511083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136403449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1422954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126355174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112555165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147069471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11944857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113023311 seconds)
  done (took 5.714990852 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12781814 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129207003 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135476865 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167111194 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123991955 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126104374 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158174653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12316217 seconds)
  done (took 2.264975595 seconds)
done (took 35.703064196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138676503 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133056934 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133898103 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159138394 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260678261 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124733808 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.132571048 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120163744 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159860064 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136121989 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113152377 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.15240716 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134108255 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124607535 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.261086832 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128471993 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.267836015 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262119506 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121437649 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127776165 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152481052 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.235438808 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158583434 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121615046 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.254784285 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.118103427 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254664577 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124277535 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1242621 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114076867 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.263883557 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126347701 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.156020329 seconds)
  done (took 6.557873805 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.243623787 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155622792 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123762316 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122274976 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123082691 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152488456 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.251388742 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154542069 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122186208 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12075551 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15332222 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.231106135 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161578438 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118601255 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125266767 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112752188 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282465389 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123429663 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146964499 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096681219 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118441807 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121489751 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.295509575 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149606316 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123075078 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122521236 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12504125 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159117092 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124848907 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123897459 seconds)
  done (took 5.769246984 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129037847 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136080084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139660288 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.224795975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153566036 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.166339099 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142085666 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137131684 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175154047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11616994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131578045 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184995592 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132671341 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126515809 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146552924 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135472534 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138891126 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147585458 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124722285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132626014 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1675623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134270217 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139024802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154251738 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115433115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123439929 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155828266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127458038 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124327751 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129392362 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148115762 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1200645 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117490709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181932213 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118087154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157945155 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142505203 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12813473 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128969054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.180801972 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119770329 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116649051 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.173030384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170785963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117131725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.158807835 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127208984 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129173409 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.145812886 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134937481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157980495 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.147034759 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13688689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11421641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.145592746 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125717593 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11645573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149535705 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132630553 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117736201 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171882053 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123570043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126859708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147101248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128014812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114760473 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113816079 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150955928 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142632384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122278399 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184266798 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116408449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12576718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158664171 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128947543 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127721619 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144779445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129288508 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126479492 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122398456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.161109803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119289751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118053699 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164298197 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.138451964 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129540146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157382094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129832851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11823389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148778277 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133786287 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116239014 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151291376 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129931117 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115971381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148947502 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129348781 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126248317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112150784 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172204371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121037738 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114804124 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172720078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119305045 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121251242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.157031282 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158219072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116095071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157275517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129984476 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114538448 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15445763 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120786519 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114076657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164331931 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.133168331 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122833916 seconds)
  done (took 17.366884085 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363885519 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.349694888 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190138006 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.438917198 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129563752 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.279056715 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.349885625 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.350895948 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116509369 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182914741 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178434213 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317762126 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11554095 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.178636683 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.352629619 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.410390315 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179749254 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152371821 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184149046 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130976153 seconds)
  done (took 6.150957953 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136681697 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151572697 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169916999 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144426048 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126145441 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164885004 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117042258 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138504624 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159612337 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126174006 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118380976 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163593359 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129559562 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132938553 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162722089 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150394264 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124632469 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151985388 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13979564 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120646977 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134809391 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143211578 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125538799 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169103068 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135819995 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126733714 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145768676 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122801859 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122253535 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124023802 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151393414 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13456823 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.123767555 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139483799 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128670692 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131079099 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152337319 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120461547 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121767928 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149757452 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132819404 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129870076 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122960678 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132403289 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135980979 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113684987 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129167543 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.159528806 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110337425 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134680325 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.160589206 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13192355 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123257783 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16831498 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123459834 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133069645 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157588475 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131177086 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121660024 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143713667 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115899515 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120425091 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124729688 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161072788 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128682844 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136806783 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163512902 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116718544 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121045141 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150466271 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120426068 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12979807 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167249481 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125786666 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122477795 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158489218 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125422234 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098152845 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124713973 seconds)
  done (took 11.953430671 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141715018 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126859219 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133691652 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182705217 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132713874 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121977453 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157268812 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13610369 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130473225 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167139899 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131458826 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129389009 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169848904 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126864037 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125184634 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162901651 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13107393 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153754817 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.166086204 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144370663 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.131123308 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152278163 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129242831 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126875701 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177544714 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128087238 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143183571 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.16098381 seconds)
  done (took 5.235488046 seconds)
done (took 54.207885306 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.346826995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.618625664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.311639909 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.310978232 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.324042533 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.359483354 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.316143834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.310692862 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.862656557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.282659758 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.311263045 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.309756569 seconds)
done (took 29.867882362 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.376630646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.325660267 seconds)
    (2/2) benchmarking "String"...
    done (took 1.677886273 seconds)
  done (took 5.213294792 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.300430383 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.299572104 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.632048112 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.300064834 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.299623646 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.300517615 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.29963978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.329528148 seconds)
  done (took 16.658054072 seconds)
done (took 27.745990535 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.344349306 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.622743227 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.550286038 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.278398112 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.321391987 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.311790347 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.303504307 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.36793373 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.304172479 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.279586322 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.818239317 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.597190397 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.324415905 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.725388403 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.278198086 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.318021865 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.31808591 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.679569169 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.30148778 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.338781558 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.278181883 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.278851312 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.329228668 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.306023692 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.317128317 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.307120759 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.340305426 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.309842404 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.643702247 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.346215116 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.343558074 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.304028396 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.341378188 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.30444926 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.331015487 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.314274462 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.610750292 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.315965739 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.288036 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.328333792 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.621330897 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.329900961 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.318499929 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.307361781 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.28047568 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.354683022 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.305591653 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.486040229 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.341903185 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.306192289 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.378105624 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.72307519 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.31063636 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.313529674 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.320665358 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.656793088 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.31016528 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.43861695 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.337480905 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.312857872 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.316534177 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.311903211 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.368005806 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.321991994 seconds)
  done (took 151.593323079 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.303734294 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.303693438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.30920608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.324222584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.303580574 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.304186029 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.303918886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.302694847 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.304021762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.330193944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.302516891 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.305538505 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.309779407 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.316331707 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314389561 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.326250007 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.305220307 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.324009429 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316486126 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.306027184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.306475705 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.305045634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.306212124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.304860416 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.3069222 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.398112009 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.328444211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.316424386 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315460716 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.306137673 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.31981993 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.310868931 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.072890065 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.26576096 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.321489764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.34409264 seconds)
  done (took 84.246379517 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.306727902 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.307431133 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.310272067 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.346807789 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.310326613 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.93387993 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933811764 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.380451941 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.852378156 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.851468543 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608871073 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.307729216 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403833127 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319976094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.308806308 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323484781 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.335309888 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308856944 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309181985 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.930457986 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.321122399 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.477198812 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.499484048 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.324945652 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345635503 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.700854697 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307692759 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34576848 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.652686351 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.364779698 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307581502 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.722078904 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.624641793 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.425817417 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.314645947 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353115295 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314274741 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.313105249 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.599297648 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.310182811 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.310393242 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.310469789 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.311883725 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007272224 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.307359476 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.92938271 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.308218454 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.318747517 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.310312505 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.308834384 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.310349173 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.406611344 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.143415375 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.314508849 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.310745591 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.313665865 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.310029788 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.309630016 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.347022342 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.419057969 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.413923237 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.312006157 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.315301757 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348819917 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.31148095 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.472892678 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311713801 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.66531163 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370888644 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.535820442 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.935972724 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311817585 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.412781192 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435902219 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.313497966 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.3116881 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311489471 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.310726804 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.426768795 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.312807097 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.053550385 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.500814803 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.330412967 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.88572227 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.418679219 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.31230417 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.713206686 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311232385 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.312302912 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.115490384 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.411633281 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.311779662 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313724322 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.311635229 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.05426591 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.956466671 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.682405493 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.317443929 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.930855453 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.317272259 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.234656307 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.934459054 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.070350008 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.319855339 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428186782 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.50170989 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.33231691 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.32298381 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.920724417 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.318300463 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.369189336 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.319013612 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.312534855 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.718654517 seconds)
  done (took 389.936645375 seconds)
done (took 626.974713979 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.291831734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.291425258 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.292744769 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.292505144 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.292561575 seconds)
  done (took 12.669661205 seconds)
done (took 13.877282231 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597736974 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.596830156 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.412688164 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.599659705 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.379464595 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615292419 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579930101 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.361356217 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.50236046 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.433853774 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498455775 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.400210949 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.380477364 seconds)
  done (took 20.566394791 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.696186855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.327252998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.447604685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.687252059 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.39038442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.70132836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.732285998 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.32612122 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.563753883 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369938384 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.365414903 seconds)
  done (took 19.817638682 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.698646315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.326127925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.449580635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.717161309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.39030061 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.701950018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743718597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.327148376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.567083077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371475661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36673232 seconds)
  done (took 19.869941143 seconds)
done (took 61.461784633 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.380273497 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.453870356 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.374984277 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.357072642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.356861581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.356806477 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.358614877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.356733073 seconds)
  done (took 12.205864726 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.355100743 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.355142787 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.355440521 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.355120228 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.354805175 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.355233302 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.354926768 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.355334082 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.356718197 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.356208915 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.356094654 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.358127175 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.359847925 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.355960489 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.355288267 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.357162597 seconds)
  done (took 22.907982433 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.358968483 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.354787365 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.355839594 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.354951632 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.357446712 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.356575791 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.357265893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.357139899 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.358150363 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.35939654 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.357031994 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.356472077 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.358966597 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.357076134 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.357590794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.358874338 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.357588629 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.35675256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.35987649 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.358806591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.357377499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.358769785 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.358010331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.356501968 seconds)
  done (took 33.793184456 seconds)
done (took 70.116837834 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.319097212 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.327044033 seconds)
  done (took 5.859012029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.457181112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.455343797 seconds)
  done (took 4.126674838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.358525689 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.357671601 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.358203372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.358169639 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.358082757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.356790064 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.35794461 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.359413093 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.35850383 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.359313988 seconds)
  done (took 14.795977617 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.360222414 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.359131423 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.3591331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.358826077 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.359286401 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.357736973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.360330318 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.359282839 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.359315176 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.358233124 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.358744293 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.358811061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.358350178 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.359450388 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.359377893 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.360420275 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.360031957 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.361889315 seconds)
  done (took 25.683629881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.381523516 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.388527898 seconds)
  done (took 3.98528102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.542412971 seconds)
    (2/7) benchmarking "second"...
    done (took 1.441097153 seconds)
    (3/7) benchmarking "month"...
    done (took 1.525495177 seconds)
    (4/7) benchmarking "year"...
    done (took 1.513093529 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.435117483 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.389505817 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.440897827 seconds)
  done (took 11.50345662 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.352848082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.709115663 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.905843823 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.559913241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.344007782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.36538557 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.300888751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.368725869 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368992314 seconds)
  done (took 15.492324269 seconds)
done (took 82.658858856 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.323918217 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.389479696 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.341404099 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.362085849 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.764203186 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.324718178 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.329987284 seconds)
done (took 17.053593827 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.303218656 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.320148603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.306348174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333617565 seconds)
  done (took 10.479499663 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.327569937 seconds)
    (2/2) benchmarking "read"...
    done (took 1.738826844 seconds)
  done (took 5.282124354 seconds)
done (took 16.979003476 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360627214 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.36123183 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.363404382 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.360682738 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.362117767 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.363536872 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.362768059 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.363110072 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.364462687 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.361125811 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.362086128 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.361878351 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.362756046 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364241989 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362067062 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363036389 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363681024 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.362663855 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362759678 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36058957 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.362985056 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.362007277 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.362211563 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.363489101 seconds)
  done (took 33.917063337 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.363706726 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.363370999 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.364358764 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.363826154 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.363836421 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.362856548 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.365222701 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.36319465 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.36380604 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.363790465 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364222433 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.365109418 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.364722287 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.364185627 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364359741 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.364507875 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.365348974 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364941869 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364468694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.365194903 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.364988383 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365204821 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.364710624 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365193926 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.364975741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364968199 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.364561094 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.366867253 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365171297 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.364685202 seconds)
  done (took 42.155516076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.371684904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.373238664 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.365215577 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.364995787 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.363381335 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.366025177 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.365518968 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.365254967 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.366163393 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.367604498 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.364676262 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.364943824 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.367327507 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.367264999 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.367597305 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.36616877 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.365837024 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.365891221 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.366773875 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.366001151 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.365753425 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.36669251 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.367039062 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.367455317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.367362847 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.366486478 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.367901113 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.366829819 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.366629234 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.368167418 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.367967114 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.368827558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.368735926 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.368862968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.367643819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.36839112 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.374997617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.37880704 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.36869493 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.368270504 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.368390911 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.367905165 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.371527902 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.368840548 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.367822472 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.368073412 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.368336155 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.370508429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.368859267 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.36833364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.36874312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.368854517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.370065286 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.369084853 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.369939292 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.368714276 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.37045039 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.367774492 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.369250028 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.370777737 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.369655736 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.36902046 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.367765203 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.368932111 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.370331451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.368892511 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.369873013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.370925451 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.372093267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.369453686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.369335025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.369123127 seconds)
  done (took 99.741667291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.369097146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370149444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.370610606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.369521641 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369585964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370095038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.370664873 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371713959 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370222498 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.370422454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371228841 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37135686 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369212942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.370368467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3700986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370843387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.370173888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.370198333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.372661006 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370260492 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371347991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370401012 seconds)
  done (took 31.37573137 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.372133077 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.371878226 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.372379686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372541439 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373272118 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.373111553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.371778981 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373518867 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372569724 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372156613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372113451 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372218283 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.373649261 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373171337 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.371080568 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375429934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375205465 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.374528772 seconds)
  done (took 25.937940713 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.373129083 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.372807813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.372040117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.373046251 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.373672169 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.372229597 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372366765 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.372726238 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.374020677 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.374065235 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.372798455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37255834 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.373639553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372782181 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372964118 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.374030595 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.372205642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372676721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372995896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.372104301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.372629159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372750334 seconds)
  done (took 31.431178505 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374915903 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.374304093 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37451208 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.376476716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.37527342 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.372640124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.374355845 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.374299763 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.374526118 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.373655476 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372854398 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.372902099 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.37684869 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376729471 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.375090017 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37427022 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.375317979 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.375373084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375454797 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.374052944 seconds)
  done (took 28.722132403 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376834722 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37626796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37570483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377033001 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376374328 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.374954874 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376952474 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.376271242 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.375179972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376306163 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.375512976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.376317687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376771655 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377054233 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377681547 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377611008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377271509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.376478321 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376050893 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.377678474 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378619934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.377347357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.377370894 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.378154582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377052906 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378017763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378136284 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376750493 seconds)
  done (took 39.780447361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377863064 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.377039706 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.376500252 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.378651504 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.377481382 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.37772003 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.377646347 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.377871446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.377968874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37863984 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.37877177 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.377806354 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378610227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.378404964 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.378132233 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.378226518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377242246 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.38001718 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378762691 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378750538 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.378224424 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377364398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.378093821 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378685586 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379007624 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.378842799 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3781513 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.377984239 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378546532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379028157 seconds)
  done (took 42.577050057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.404727166 seconds)
    (2/2) benchmarking "in"...
    done (took 1.404582804 seconds)
  done (took 4.040711881 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.37894309 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379743332 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.378667427 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.379623204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.378491846 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.379589331 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.379940633 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379335389 seconds)
  done (took 12.266736713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.371700061 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.379986659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.380607897 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.378707237 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.380821961 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.370770683 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385625364 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.384568247 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.373000784 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.37468794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.381782279 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.379669021 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.378000861 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374367439 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.37413787 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.379601344 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.384985339 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.383677003 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.383389187 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.382628056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382693986 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378530888 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.382256919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.386410661 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.376106626 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.392101398 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.391065651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.386620254 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37594222 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.386967854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.377516582 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.385393282 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.384052818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.388445556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.383499815 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.385136267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393141684 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382138189 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.392035677 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390498331 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.383226178 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.384949581 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.380896901 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.382977612 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382734704 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.38832487 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.385251714 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.383173517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.37601269 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.384885536 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.390481638 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.376088607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.385588978 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.38748859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.383959929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395736846 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.391364014 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.381448716 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.384658063 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.397503133 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.402927285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.393972236 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388417969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.392521563 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.395635856 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.407203109 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396997202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.391143246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.386365892 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.385328888 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.393557798 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.405109895 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.402967724 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.391971563 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386768387 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.386766083 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379566564 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387836889 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.394178198 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.394810611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.391496712 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387658654 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.396436237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40039519 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.381078767 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.389963626 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.389154934 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.385871206 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.37995076 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398368815 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.395991557 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.385929384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.380032684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.382724786 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.383881079 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.390376318 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.375974836 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.383735809 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.392260776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.388195384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38784981 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385927079 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.39671197 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395337354 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388349036 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.397827964 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.396329659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.381238355 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.400080206 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.396085145 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390583258 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.381506894 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.392394103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.391684096 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385810095 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.393056687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.394500935 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.390587797 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.394551499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.387798895 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.397125779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.415085116 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.396335805 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.388622813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.391349346 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.399771088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389701162 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.392044198 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.396763024 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.388923759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.389131048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.39246974 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.399335139 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.38455798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393771932 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384451961 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.393313074 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.389996731 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.391426312 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.393478668 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.388606051 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.387474133 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.395361799 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.40084839 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.397830827 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.394029227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.406908937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.39128188 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.395389386 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.395442675 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.39611371 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392572338 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.385248571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.395710656 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.382509186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393057386 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.384535911 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.394488712 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390952439 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.390737886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.391613976 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.384036755 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.389142083 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.395500782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.398393329 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.392102724 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.394416147 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.392534554 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.392347449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.384099961 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.394990243 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.385302768 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.3963907 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.400120504 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392596922 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.392898985 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.398757202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.400776943 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392642738 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392792687 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.390829099 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.398818802 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.399847704 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.402946842 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.403791711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.39384275 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.393696014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.387793168 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.388852521 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.396329799 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.391841868 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.40267446 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.409073877 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407566284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.390396712 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.396413888 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.386174736 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39867877 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.40301766 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.401989876 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.39371976 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395212059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386785918 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397894173 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.393610528 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.398688827 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.386175435 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.397016967 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.39498675 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.394302027 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395091653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.390040521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3947451 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.398055507 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.395240624 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396189418 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.387859238 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.397773209 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.38592694 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.390754788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.398096364 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.395766948 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.404028194 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.40445234 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.4002502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.406686074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.395913126 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.391145271 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.397819164 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400717089 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.395517615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407394823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.398300092 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.393406172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.410109135 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.400480605 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.388472445 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.405710949 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.404995915 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.3974731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.39263268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.403906321 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.399027907 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.399621209 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.398013603 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.391846756 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.400702282 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.407403413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.406931007 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.390363817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.401083545 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.394521747 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.399619113 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.402834886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.404490124 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.401311159 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409154264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.406049191 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.400138104 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.39474063 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.402284397 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.399064365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398226409 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393253919 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.405332061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.40803869 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.399684694 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.403397039 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.396407253 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.40198834 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.391365481 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.401575019 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.392620808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.417938553 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.422754249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410376487 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.405750061 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.401868911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.410055077 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.403870842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.396437354 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395764293 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.397193596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.396067615 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.395007424 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.404291844 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393559265 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.403379578 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.408267071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.404287585 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.403696238 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.400908872 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.393604382 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.404587902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.400457629 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.400765279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.39214009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.402552448 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.400251386 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.40995255 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.401584098 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.395089907 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.416019453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407047642 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.400808022 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.399146358 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.397707418 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.394413633 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.402684657 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.407340486 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.399366707 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.407484639 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.398765025 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.405610238 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.398998364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.416581606 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.413083116 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.399805241 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.410804614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.403128498 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.393931588 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.396844808 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.404700695 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.415380964 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.415375796 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.395820796 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.409237446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.404423705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.40298281 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.40493215 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.403956537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.404078899 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.403503896 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.416251745 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.410079801 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.401836295 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414667606 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414346475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.403905413 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.40424561 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.394403856 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.415465333 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.414998025 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.405016379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.40220806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.400095432 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.405933255 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.403461502 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.403947317 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.405237426 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.406124829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417066933 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.41197264 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408631852 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.404086092 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.41704626 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41755212 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.417227708 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.4184808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.402666359 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.410566526 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.405720099 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.401453215 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.40065486 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.402866803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.408251845 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.397712097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.408601052 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.40665269 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.408482671 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.414532951 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.414847376 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.4012094 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417201797 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.428339875 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.397566618 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.409744563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.405718004 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.399117234 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.410176322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.406307814 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.397650847 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.40395067 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.409104957 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.416919847 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.402747235 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.409852049 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.401642136 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.41229405 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.40708815 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.407658823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.406657578 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.40707062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.398347024 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.409109566 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.414941873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.419117264 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.407272321 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.416730857 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.403310085 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.423979334 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.420361067 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.408432944 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414008164 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.408842633 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.401137463 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.411227573 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.413653091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403295 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.412277008 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.401185375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407656658 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.406393019 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.419511657 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.41374591 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.413591072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.403715654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.403613476 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41112337 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.409327751 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408468702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.412816881 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.416693771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.401361304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.403996695 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.411875421 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.40819269 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.416458127 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40472493 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.409352963 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.408666423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.413029548 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.409406252 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.411130913 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.401654708 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.403942917 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.425275169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.418934768 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.413209809 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.410409661 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.41287485 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.406003026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.411707173 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.412726926 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.405669045 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.406680137 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.414508577 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.407120138 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.406053591 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.40771756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414092532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.422692579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.416415523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.406150391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42826703 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.427331296 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.419833346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.402008384 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.412102894 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.409526589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.415186805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.413114056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.405467483 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.428878212 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.420575969 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.416272139 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.421285416 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.415245682 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.407227483 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.417238254 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415247288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.417861866 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.421672197 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.414975955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.421834508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414391942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.413216303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.405229813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.406818493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.41338951 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.416231282 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.421643562 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.426144135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.420967359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.415210831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419139962 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.413442589 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.413415212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.413549027 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.40583813 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.417062882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.40887902 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.424648763 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.415818101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.408895154 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.419098965 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414228304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413666011 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.418113085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.421761245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.41475365 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.406820518 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.418841461 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.42846971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.428253411 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.415750704 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.411525586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.415295898 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.419760362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416669047 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.414694285 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.412202697 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.436860581 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.430391742 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407931204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.413413675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.426738135 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.426438795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.41430059 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.414531555 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.418569987 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.418651981 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.423522083 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.417042069 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42916037 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.424809188 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.413474856 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.421529512 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.414508437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.417525232 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.428465938 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.430200028 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.418547777 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.422557854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.440321217 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.431343749 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.428138732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.454889061 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.42803418 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.424590655 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.4241267 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.410911402 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.419365689 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.421392692 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.425072699 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.418693816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.417560362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.418343213 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.410294563 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.430690034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.434635718 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.430675438 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.417519504 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.410550183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.416041313 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.420079467 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.423291677 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.420981606 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.418632984 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.419943556 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.418676704 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.413309402 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.438914962 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.444550665 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.425776141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.42160508 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.419740317 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.428682516 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.42973237 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.42494929 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.426997804 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.419340127 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.420300514 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.425379652 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.432942904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.421894292 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.41606073 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.417012945 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.414816507 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.425484065 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.437295413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.447727256 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.432539711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.424633468 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.423741664 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.422333035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.41762734 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.423376883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.421128623 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.417548 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.419011175 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.424653792 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.423256686 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.420959956 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.419568299 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.429964592 seconds)
  done (took 837.727516977 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.422670648 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.420368261 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.422109334 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.421898833 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.42254235 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.425074027 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.421554655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422494159 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.420794083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.423078941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.421699016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.422474743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.422808027 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.42249402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.422187067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.42224322 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.422644178 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.424034579 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.421856578 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.42338743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.422104864 seconds)
  done (took 31.137926409 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.42291202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.424163646 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.423699131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.422755715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.423217365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.422544096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.422514344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422420756 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.423540801 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.423770159 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.42337814 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423239086 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.423232242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.423955029 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.42360282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.423772813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.424248502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.424571729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.424079486 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.425062293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.425016198 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.42422748 seconds)
  done (took 32.590125603 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.424995735 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.424819175 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.418459638 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.427817112 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.425805125 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.42485661 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.425293118 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.42585122 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.424870509 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.41800106 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.418064406 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.42280607 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.426866294 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.433199013 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.428590116 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.430864568 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.426355405 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.424756179 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.427913773 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.426289893 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.438501921 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.439734201 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.425914915 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.418778603 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.429600789 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.429025506 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.427812643 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.426913856 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.418484292 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.430947748 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.426988307 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.421585245 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.439559318 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.431289342 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.422562603 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.430458999 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.42768623 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.428691036 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.427868516 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.440313814 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.450710527 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.426792122 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.43980076 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.442394176 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.428304814 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.425673055 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.435420454 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.427074909 seconds)
  done (took 69.838090655 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.426884662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.428197817 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.42754117 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.428164433 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.426755735 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.426672973 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.426329913 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.427530904 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.42838192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.428418726 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.428164643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.42784449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.430032129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.429230771 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.427288623 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.429366891 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.429866256 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.428612116 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.427798954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.428539202 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.42843416 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.428897488 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.430237183 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.428938834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.430563831 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.428263328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.429643811 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.429919545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.429148357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.429372688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.428609462 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.431860294 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.429453634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.431468275 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.429225392 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.431522961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.431004878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.430849831 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.43067425 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.428938275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.431616269 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.430954872 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.429795716 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.432264466 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.431385514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.431060542 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.430910523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.431689393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.43226244 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.430912059 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.436884746 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.431286269 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.432771514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.431507247 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.432933685 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.431625139 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.431902618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.431999069 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.43195025 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.432805317 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.434348949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.438761452 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.43169533 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.432833533 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.431513951 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.43238173 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.431354155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.432404078 seconds)
  done (took 98.538827391 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.432525602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.431790523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.433175895 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.433638873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.434158422 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.434353559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.434168688 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.434542759 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.432501856 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.434047444 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.435304168 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.43411973 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.433158365 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.433357622 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.434500225 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.435047013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.434154092 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.434800264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.435522842 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.433999114 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.432924187 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.434520339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.434522784 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.433659406 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.435301933 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.434708701 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.435252206 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.433983679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.435491622 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.435138434 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.436219718 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.434197812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.436081153 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.434604358 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.436815813 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.435122441 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.434661419 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.436433013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.436184099 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.435010625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.435739978 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.435476746 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.435669089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.435539045 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.43656627 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.436027514 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.435117482 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.437485172 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.438323546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.436181514 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.435143952 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.435679914 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.436715311 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.436943134 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.436711401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.437363857 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.436168664 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.436268537 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.436673895 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.437267686 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.436351927 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.43749914 seconds)
  done (took 90.260031183 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.437196378 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.441716646 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.435151495 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.435485267 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.436568784 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.436429521 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.437273971 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.436713216 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.437918956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.436989578 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438200696 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.437150771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.43986229 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438337026 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.436687724 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438336467 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.438933052 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.438321312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.437292899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.436893267 seconds)
  done (took 30.032657855 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.43741994 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.438945483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.437877191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.437307496 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.436742619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.438395204 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.438777864 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437755179 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444343307 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.440197039 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438329414 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438692029 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438101451 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.438705928 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.438420556 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.438791204 seconds)
  done (took 24.300909704 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.437565699 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.439910201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.439234416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.439384645 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.438658924 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.438265229 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.438971953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.438362309 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.441242423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.440141096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.439537877 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.440572436 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.440167287 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.440557839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.441119573 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.440090112 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.439713178 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.440748296 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.439979204 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.440477242 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.441205407 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.440030607 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.441532264 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.441386925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.439270594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.441134938 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.441097852 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.440960125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.441089959 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.440293211 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.43984902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.442856804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.441918487 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.440938125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.442580373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.450556946 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.446869954 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.445268494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.440964106 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.442078913 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.441730614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.44201417 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.441251503 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.440531998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.439917185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.440055681 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.440307249 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.44087457 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.440167845 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.441646874 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.442424138 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.442412614 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.442921897 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.442828449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.443844919 seconds)
  done (took 80.543803722 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.44387062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.444817808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.443026659 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.443142945 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.442712583 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.444415243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.44474671 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.448417079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.443128418 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.444228487 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.442456684 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.447836767 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.447236063 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.445421656 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.443229408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.444183231 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.443475528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.445607224 seconds)
  done (took 27.288255651 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.442615154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.442860646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.442820068 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.4422517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.443336265 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.442412754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.443872157 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.445378075 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.445433529 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.44416996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445723021 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.445342666 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.443655999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.445032919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.444808031 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445595212 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.445514754 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.446059027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.444890792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.445810253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.44682812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.446271694 seconds)
  done (took 33.067696598 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.437692321 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.438007166 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.436249959 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.461218218 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.456192579 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.435560835 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.437448435 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.436256035 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.468733209 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.494028116 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.488095239 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.45580894 seconds)
  done (took 18.73372403 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448005993 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447108393 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.447315123 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450314597 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446289643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447182564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447785993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448369098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44870685 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449196507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448776133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449914895 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446649675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447212177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448018843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449885701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44972793 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4473337 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44778718 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447212107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445840914 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447215669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446251789 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44753198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44640593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447689612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447770977 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448542932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447713219 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448084355 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448796457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448123955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448087987 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448198196 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449117098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449301898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447951028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449606825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451989181 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450138317 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.449115422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450763327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449470076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448991594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450685035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450879542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44894431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44995673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450742235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.450739581 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449799867 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450302304 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449493542 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451044299 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.449767529 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450915441 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45137381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455910839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45080614 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45139567 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450225269 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449556818 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451226793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452560203 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451864654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451019854 seconds)
  done (took 96.934894028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449966718 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.45165967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450263752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451794953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450418032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450846647 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451000368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451770857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.451491073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451999308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45165967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451514539 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452788585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452968636 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452416889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452589327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452530171 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451913612 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451894267 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452379314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451968927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45246501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451577676 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451739149 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45197207 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452083746 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451687117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451781193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452968565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.453711677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452692693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451816464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452838661 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.45158913 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453136603 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451289232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452598266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453408775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453151969 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455059753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453365893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.453930559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454007315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45368416 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455559328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45386875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454111238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455057308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455636782 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452959136 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455380045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455523639 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.47271116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454036997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455945201 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.454850509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456479556 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455446465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455856223 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455797347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455254331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45704995 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455978515 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456869899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455846864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457066084 seconds)
  done (took 97.23151834 seconds)
done (took 1961.389295575 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.670523954 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.62477945 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.445936526 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.47446243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.444484526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.431003202 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419178864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.444433612 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.445590812 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.446512716 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.44615059 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.701737001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.49699679 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.445140406 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.445813535 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.60170829 seconds)
  done (took 29.281707193 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.485091156 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.464298498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.597673349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.453308134 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.485471232 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.714934769 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.52194689 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.453596369 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.66540375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.476890392 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.420221035 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.503452849 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.452048127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.432362803 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.478234139 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.7106792 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807369289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.421042788 seconds)
  done (took 31.842272611 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.04251686 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.458973589 seconds)
  done (took 5.799195345 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.478314176 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.451546807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.455878363 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.450231486 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.423761569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.42251609 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.451393435 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.422605975 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.423803614 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.608716584 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.456101297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.476579668 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.474454258 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.459727176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.461307056 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.513531853 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.667556188 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.462689565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.460405824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.467652206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.452616146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.610183809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.508082976 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.46274411 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.609368971 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.424409766 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.459398992 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.468828613 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.635332677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.463415704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.454460096 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.455414268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.457587798 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.42655578 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.087339808 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.442559211 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.489211652 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.471156633 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.463990777 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.677961003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.456222401 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.470707134 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.424816661 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.086288348 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.614447759 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.623603253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.444964824 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.476376639 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.457864928 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.536628995 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.459081214 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.459512275 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.54909308 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.363833697 seconds)
  done (took 92.738865329 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.481505784 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.426602853 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.695165006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.447866381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425186751 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429344681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.429893774 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827763852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.45000094 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427722967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.860047985 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.195589956 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.438956378 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.498917844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.466158441 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.485218686 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.428036764 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.444799649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.449212152 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.427164027 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.121307046 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429397621 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.447337612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.519948102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.501930448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.126240774 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.426389208 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.427544313 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.449235479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.426531684 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.167437843 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.431928111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.478954761 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.430292777 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.826754436 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968008152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927585205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.430624942 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457326941 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431667812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.457092484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125777377 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94819865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428564275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.428718414 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146626467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428957412 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.435143952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.438550112 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.788789831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.429110224 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.430264002 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428734059 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429796555 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.429694237 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.487029461 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488138191 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128693669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.439709547 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.430988746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.440799211 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.432527768 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.441648341 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437226201 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.432517222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949173774 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.687354097 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.429896567 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.950182701 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.156844316 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.430378123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.236836891 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.430209805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.455014426 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.480945936 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431822859 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.431486155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12163132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.446573758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.430486866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934907435 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435122581 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.858571401 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.453871054 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432313355 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.150983376 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438724575 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.474636474 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.433083216 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432361965 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.433243851 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437091477 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.83025537 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.489422363 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.434192783 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.432965393 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.478736437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.433425927 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.435301375 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.436744295 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234560834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.433405394 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.432610669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.454804065 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43434392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.434958314 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.435639895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.43413747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.808205848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.43411966 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.439640543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.435288663 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.435157711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.439592981 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.529875552 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.443515268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.883309603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.435987007 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.433902454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.453977772 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434630199 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.4748849 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43473098 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.440987503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.434580892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.858706474 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.457793411 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.434694593 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.435272041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.45045365 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434765203 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.455412382 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.492881602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435191654 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.385725307 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.4771201 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.438311534 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.436405146 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438692867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.441135427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.439594589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.438025953 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837919962 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838260229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69207879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.446098977 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.436884677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.398893673 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.442686322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.711129117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.456679373 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43683481 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.826934416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670989795 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437674023 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.43973902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.439402315 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.806660749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.436835718 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854757857 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.194804871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.436552022 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441753732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.384957333 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.367616091 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.437628346 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.438402746 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.852277025 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.45932503 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.437381876 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.436492239 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.437619686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.437564232 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.443011503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.442813014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.437620175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.438485578 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.784477202 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.721783755 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.458515849 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444645021 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131643347 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.467437794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.440722664 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.439218074 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.442665998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.43889869 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.495184338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.444177363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.444787986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.44014375 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.446133129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.165302096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.439224639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.440738309 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.720234815 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.338111083 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.438984664 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.439665617 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.438992906 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.501849292 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.163569543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.482593073 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.891177083 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.442953465 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.514051543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.440206397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.452597079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16454788 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.441410182 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.458714059 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.332258382 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.440907884 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.930869281 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.439491433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.442025275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.263008655 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.44101502 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.443824316 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.440376042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.460941856 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.83789 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.440231681 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.457532833 seconds)
  done (took 528.92015208 seconds)
done (took 689.877722527 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.441583737 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.449191828 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.447661257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.448621295 seconds)
  done (took 11.102593005 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.480797174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.470718448 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.481118513 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.470972112 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.480339364 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.47094669 seconds)
  done (took 10.171680282 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.441515014 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.447211688 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.44886532 seconds)
  done (took 8.652951678 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.770152685 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.472705852 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.952149711 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.446652748 seconds)
  done (took 9.959800475 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.481691003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.480964724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.480457745 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.480220844 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.481693517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.48252386 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.482521555 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.482113473 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.483203066 seconds)
  done (took 14.652092351 seconds)
done (took 55.854945103 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.634308665 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.630335184 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.112707628 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.658214778 seconds)
    (5/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.763085305 seconds)
    (6/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.511008557 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.42071649 seconds)
    (8/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.770956628 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.584031391 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.508854862 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.718915513 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.430690173 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.697930303 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.420392565 seconds)
    (15/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.672332145 seconds)
    (16/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.797812138 seconds)
    (17/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.511213123 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.875738178 seconds)
    (19/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.758796631 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.525711684 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.632842696 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.853606314 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.684100891 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.633294849 seconds)
    (25/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.452675651 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.735971663 seconds)
    (27/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.806487473 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.606243084 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.803545479 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.943997418 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.795351839 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.42159621 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.531182842 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606506596 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.421470915 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.631076969 seconds)
    (37/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.594343317 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.579724699 seconds)
    (39/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587638484 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.428658141 seconds)
    (41/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.512497155 seconds)
    (42/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.620485538 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.696494576 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.846096002 seconds)
    (45/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.937711842 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.876991341 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.638122627 seconds)
    (48/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.423613296 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.523198726 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.598118168 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.8538282 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.847800269 seconds)
    (53/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.801095098 seconds)
    (54/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.64809701 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.605707332 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.854561464 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.672451085 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.428537595 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.447911567 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.436274193 seconds)
    (61/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.611636159 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.71915884 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.499600194 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.433805444 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.733699167 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.694553476 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.621767824 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.57246777 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.48043372 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.669172316 seconds)
    (71/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.711825575 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.65346578 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.676144291 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.662639921 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.797294963 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.768286596 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.464074447 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.650438578 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.624329602 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.643872031 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.427102776 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.45070459 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.719163729 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.701582792 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.480696532 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.523867805 seconds)
    (87/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.425202255 seconds)
    (88/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.43292684 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613823937 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.521775011 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.509282291 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.426662567 seconds)
    (93/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.783326427 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.640417332 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.477415319 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61412188 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.723921457 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.426350935 seconds)
    (99/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.658485343 seconds)
    (100/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.69764954 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.689332631 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.692917445 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.679465595 seconds)
    (104/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.646906426 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.51458059 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.945174034 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.947949247 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.118512836 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.453071302 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.649586585 seconds)
    (111/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.586934065 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.593758257 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.434470124 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.426642103 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.702137471 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.449509537 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.644124018 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.629220727 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.744459334 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.428562459 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.595566029 seconds)
    (122/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.592171952 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.906863995 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.512889733 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.428426478 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.43998123 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.750033367 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.763437166 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.520570248 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.429040732 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.540830646 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.428035297 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.70399078 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.612814731 seconds)
    (135/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.626867425 seconds)
    (136/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.430712104 seconds)
    (137/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.432127786 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.617229049 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.463591425 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.43371486 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.681252973 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.628916568 seconds)
    (143/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.433466504 seconds)
    (144/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.515958489 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.702209688 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.760172016 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.66392067 seconds)
    (148/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.88374213 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.613424584 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.582170051 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.7007521 seconds)
    (152/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.620726281 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.776847321 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.816349411 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.485644857 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.493906243 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.804796965 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.455823607 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.67976228 seconds)
    (160/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.595416288 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577714596 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.612584813 seconds)
    (163/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.655921469 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.760766226 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.525373723 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.432364478 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.439841617 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.530542048 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.471268029 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.436863026 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.646137822 seconds)
    (172/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.585718547 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.778905613 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.032484368 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.590893018 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.815329798 seconds)
    (177/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.732417439 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.745911963 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.433515812 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.672790234 seconds)
    (181/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.721927139 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.649378807 seconds)
    (183/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.535585077 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.595648511 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.658953069 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.949938327 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.531448587 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.859268766 seconds)
    (189/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.433137342 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.438173667 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.647385747 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.433027971 seconds)
  done (took 361.331935866 seconds)
done (took 362.648269598 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.516681347 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.635815769 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.488970769 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.488536426 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.491665316 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.461225551 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.518583264 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.48805487 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.512311726 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.512479555 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.458818681 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.498651819 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.512888685 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.501110302 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.531781381 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.490657576 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.488998147 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.500273813 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.515484616 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.515798064 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.49109611 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493684637 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.527859094 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.489853912 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.506483052 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.506907967 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.506087191 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.475461579 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.499319153 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.513962495 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.460088605 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.506085726 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.516423492 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.504430347 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.492797652 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.502778251 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.491878471 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.638135478 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.523454415 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.502722029 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.499669406 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.518024673 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.504473649 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.505041458 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.502685433 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.528553387 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511300704 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.516588737 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.460020859 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.460046351 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.540361662 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.513277701 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.500840085 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.462375419 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.462396929 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.517154032 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.504769147 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.523149068 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.50100575 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.501360124 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.535754512 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.52087336 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.514724114 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.510032806 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.502138575 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.516319568 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.504168303 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.519924915 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.502829375 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.498894447 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.49475265 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.502936372 seconds)
done (took 117.767387113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.671076329 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.462864447 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.703750666 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.501245514 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.719710167 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.669684043 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.500406441 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.500838689 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.499436416 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.376607249 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.502290829 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.502704918 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.463953901 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.500260962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.66715963 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.501040531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.499851273 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.262363112 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.502201991 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.682538611 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.466599908 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.50031006 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.501616372 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.363322598 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.466301686 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.461765285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.684285481 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.501358797 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.265042573 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.47225754 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.463362694 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.263930211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.683507169 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.520923925 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.512806692 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.514367574 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.720619291 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.506569516 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.672318316 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.674308584 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.706392901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.542362196 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.471230874 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.469672225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.504736601 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.504920563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.504293807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.53142107 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.467542765 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.504149305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.267834059 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.513347542 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.504979579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.503580867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.505527414 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.532926289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.504136944 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.504692531 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.685356776 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.505397579 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.677948431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.367010986 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.379944824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.506223033 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.465328098 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.503726208 seconds)
  done (took 120.376298554 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.61813964 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.631039883 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.671557536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.497007545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.589108643 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.671949485 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.495628669 seconds)
  done (took 12.51098579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.508918697 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.504894581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.587592948 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.587915404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.505334791 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.728219699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505199928 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.517068546 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.50368982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.589093557 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505968741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.505221929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.514548743 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.471327604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.587279291 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.517861315 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.669624469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.500120511 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.50530476 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.711573448 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.507237268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.516633575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.590725329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.51721186 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508883706 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.512290285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.345153808 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50733351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.508295363 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.508297109 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.508305142 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.617171709 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.507639275 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.471585947 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.507533884 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.669866399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.507478919 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.507951465 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.506225618 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.476419173 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.508465078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.507951465 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.507047649 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.50862725 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.50832316 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.530035069 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.508940977 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.506485147 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.508203732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.507860112 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.592460466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.507854734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.508598824 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.507857738 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.592698066 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.519070896 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.50856083 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.508588418 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.508192278 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510277529 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.711068216 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.591130968 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.509790805 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.590048916 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509062431 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.510172697 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.510711872 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.509274958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.650919367 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.509671167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.59095399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.509346964 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.743997753 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.532063749 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510800221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.50569175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.50632081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510509961 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.473085718 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.514688076 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.510830742 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.503833414 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.516449613 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.509557116 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.509006069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.719500084 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.672104602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.510511637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.524258636 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.515049505 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.510635955 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.59465418 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.511633846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.510118082 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.593541958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.677652723 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.595309571 seconds)
  done (took 155.519124468 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.523251804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.521802738 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.512072659 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.538077433 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.503117819 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.501682302 seconds)
  done (took 10.442353459 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.505600747 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.516475315 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.513846488 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.510764881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.512476552 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.512030964 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.513749758 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.50401933 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.516242324 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.513273231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.512203053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.513043593 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.514304577 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.513155548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.513096044 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.512075802 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.512793491 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.515867485 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.513690323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.51326478 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.474526335 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.513525987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513649815 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.507043528 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.51916574 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.513807307 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.537462899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.518755771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.515755321 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.519104559 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.519072293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.514614673 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.506940093 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.511433263 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.517616102 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.505557934 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.514891873 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.519507892 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.512783784 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.513415567 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.513650723 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.516838559 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.514338102 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.515004667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.509081497 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.511886183 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.520983709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.53710182 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.516079244 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.51615593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.51715969 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.515127377 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.516439486 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.518095423 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.50964756 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.512679929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.521720605 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.516183867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.516418604 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.510254481 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.51844875 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.515114457 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.510196094 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.521924471 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.516498152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.517149562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.510906311 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.519797036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517680426 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.515189536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.517360063 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.516526159 seconds)
  done (took 111.387064029 seconds)
done (took 411.569832739 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.817669901 seconds)
  done (took 4.164263835 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.622561081 seconds)
  done (took 3.971164909 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.629765979 seconds)
  done (took 26.986492487 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.550733162 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.510371186 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.512198234 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.481951371 seconds)
  done (took 11.402583527 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.839039028 seconds)
  done (took 4.186552774 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.488998776 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.499360428 seconds)
  done (took 6.33915479 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.821056016 seconds)
  done (took 4.168867494 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.855560822 seconds)
  done (took 4.213289554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.506930386 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.501347483 seconds)
  done (took 6.365147272 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.457548756 seconds)
  done (took 3.806932502 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.920055896 seconds)
  done (took 23.26954985 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.490370039 seconds)
  done (took 3.841152217 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.521044191 seconds)
  done (took 3.869009879 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.787777831 seconds)
  done (took 7.135784027 seconds)
done (took 115.067870994 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.479779446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.488189664 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.488431804 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.487315391 seconds)
  done (took 11.29316675 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.636799903 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.636957255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.642470038 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.627064378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.627947102 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.639735612 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.552687182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.550689931 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.614634794 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.612082374 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.644002914 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.626837463 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.64040483 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.553872249 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.611828012 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.646071404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.614532477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.640826742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.553486446 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.625262053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.521729055 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.630098143 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.613872686 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.521783462 seconds)
  done (took 39.936156617 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.071922275 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.641355091 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.722229063 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.605474691 seconds)
  done (took 8.391542458 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.685488007 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.689246796 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.702025585 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.741837562 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.792745851 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.697693611 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.554163837 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.550163467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.536785579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.690432841 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.774815987 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.681399011 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906415892 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.52170482 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.903997568 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.522201042 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.523421658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.686088084 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.736975631 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.766122983 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.5240063 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.684645513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.696140131 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.685236439 seconds)
  done (took 41.604699523 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.536968074 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.54673901 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.522806496 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.546601282 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.522124497 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.522709976 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.525625431 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.537186189 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.523044656 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.52315263 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.524222039 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.544828571 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.523860751 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.523547512 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.538201052 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.524631519 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.526145678 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.539042779 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.54165631 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.524589615 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.523594516 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.53981257 seconds)
  done (took 35.033834191 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.486168877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.485609099 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.924126455 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.829889401 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.485561607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.491472135 seconds)
  done (took 15.057215097 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.615560889 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.815757437 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.515114736 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971241734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.097696712 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.51821087 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.517149353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.865347542 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.248715636 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.223716019 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.600298334 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.612997156 seconds)
  done (took 22.95882165 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65551171 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497249127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508506843 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548481549 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502943356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497336428 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.559598257 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370054879 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.525943558 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85802615 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497098548 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659017463 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834753638 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498171311 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504607255 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.467287565 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814825335 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155485625 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501915153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507948183 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561863 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513653237 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512507771 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79570349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500914746 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499620937 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.84841124 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499426289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923430835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881149831 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884573032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502829445 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858490804 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318999574 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678748185 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793828461 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514554051 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50223342 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.473978849 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.512251104 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508881122 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501958105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878692395 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502821693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500517419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51932861 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384222882 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.532173051 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.502796619 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501753051 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89042622 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663890079 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.528494371 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500383393 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532633724 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506351053 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.529917178 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716526941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229829226 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500859362 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518660998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.508691782 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497944746 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5244463 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33790505 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.531981686 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.530266313 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530539882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501420048 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.518017759 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556227576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500529152 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.553610973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502711204 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510541599 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504407369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504568632 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218412341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5039761 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.529500714 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819084816 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503229846 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503941388 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.502497559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50331107 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.439225337 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532897934 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.472940658 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617454427 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377181204 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.802626786 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556581741 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562387856 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810245143 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.471655928 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504219776 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.504238563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506029014 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55539877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379903617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504322023 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.532423222 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842023347 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.805024787 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520404864 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.488657392 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136079735 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50512848 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.567674283 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504932296 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.827781033 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.319196316 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901807136 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51268391 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57183871 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506081675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49836086 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506624202 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.544137631 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.524272186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903006521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.477811878 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511577345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658361444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512977453 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507544779 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518195436 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508715669 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506828836 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.791874512 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524489811 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893967312 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.510082602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507361166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.508055529 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508326303 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.509804355 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813354198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507917243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862589719 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508295923 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50879396 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50847758 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.81426856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523398122 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.538906519 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938621105 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525146668 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516299943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900842419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571178988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70458506 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570181376 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.513443994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848350268 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.536649528 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.53685116 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521436351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511309643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518586896 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.541329243 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513432888 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325940471 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512141732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51887569 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510873345 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.555229684 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662474676 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541240964 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807697822 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.511950437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5011462 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.539906856 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.511180088 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817959882 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895395777 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.526240453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76297335 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.142241342 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326248331 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557261227 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.509241433 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.510988094 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.510345764 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514022907 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509996139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.510966095 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804527727 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906791569 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51520148 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328892452 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51214271 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512458393 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.561183513 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896378304 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.544554443 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512592977 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.525683817 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520506833 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521280186 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900956958 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818032866 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.559612574 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513386723 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.16137115 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542815256 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513085987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51197125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569587376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51267064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556214516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944499577 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519571379 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901614235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531106574 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.560998993 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.513299631 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530084726 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521518135 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.527185755 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545805092 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.814366058 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.516137143 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515580647 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238101088 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532228854 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269111527 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51968536 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.518159048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514728165 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398467501 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515110406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514165523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887529762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392601391 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514855206 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14977135 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529879882 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.518708839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904838317 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832955644 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518336654 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.531970581 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90676936 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81740597 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5718957 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523638306 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515532876 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.483446045 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236018561 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516694895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770595269 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394402109 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534519578 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517931016 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.579442051 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.536823363 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094597993 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522081475 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516098451 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531314143 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532101603 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533717591 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527546974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518126223 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359073036 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.535466416 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.163595594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520049582 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.81655684 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.906012838 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.88096978 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.519419334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.525060415 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.853224981 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909321919 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518242578 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.530012581 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271763609 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.467203337 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.548408775 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519915627 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517813473 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520726274 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944152326 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.52731566 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.533451426 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526875729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52012543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519753106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.519914229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.529232803 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520427632 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17586119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.511978514 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510946329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529140193 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51904233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857335001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.565575413 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340540791 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836276457 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520248769 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583848058 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.547409066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51985668 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.488852318 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520117467 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519677188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591392104 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.829611364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.538268728 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.486096242 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.59816594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.825778963 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519656236 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536889642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86502278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.530470809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.541336157 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520909468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600343661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534256626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520637576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538117383 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621184719 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673554647 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817619685 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.91237489 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913398345 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081606537 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539851052 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524250535 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.566312657 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681220147 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528397222 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.540290215 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.520819931 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338947641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544229612 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346597427 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915572923 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.524447767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524153735 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521600478 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851331444 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521883125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876706039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522839951 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.515688623 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595645997 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52254976 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53272773 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822287876 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878798344 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524083754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525774821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522669957 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.523848878 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920997706 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.824839388 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183375344 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244840702 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525533799 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534732525 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406704372 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883449494 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525740319 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523873531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524700243 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.523646199 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540310189 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.555365246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52429684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859127547 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916751006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351514323 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914226383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.552640598 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.523196141 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530128098 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861257637 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445511821 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.825599889 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351068247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471743788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862871877 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678236178 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828814125 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.527386967 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850361838 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.541365631 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525452364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528010789 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525479323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.525871551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921499305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347655173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867805885 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.555891849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.540838957 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585892522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.84029268 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834337663 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.487518978 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.836288679 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93035099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.538124785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527019672 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356632013 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928731789 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529030682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.555404846 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863156132 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529014968 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594937736 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482322508 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.525765252 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257606921 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.82990791 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578789384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540986462 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47173003 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356541289 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.534806905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200248021 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532131635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539637687 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889330899 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.557956498 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547456419 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896069325 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.558473183 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54855153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846586077 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.348283256 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.54236443 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.533754746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551475506 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.532863641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530159108 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618245169 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53730003 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534605762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.114923204 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536870855 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530166441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57311031 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.547667549 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544481809 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.534136499 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530912486 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.561754466 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.520864489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.511271161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.542218672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750528192 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262088985 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537677173 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.234221405 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.954233636 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868462603 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530184669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.501736499 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.558652396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531920016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532437331 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532005851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526983076 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267229164 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.534981928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.948730492 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561442485 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.829539008 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830348258 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542446145 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842968579 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534456791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604024506 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.499044606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532321603 seconds)
  done (took 1074.085281054 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.542104132 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.563185724 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.575713993 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.592285234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.554354293 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.561037475 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.617487741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.569859408 seconds)
  done (took 21.961513892 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.526619062 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.555736243 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.52299437 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.555163893 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.53116601 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.184373585 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.541261217 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.55643703 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.577026729 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.545693276 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.524267716 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.351124609 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.557918643 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.53428994 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.531444188 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.558287335 seconds)
  done (took 35.551813538 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.782687729 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.778351423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.155779656 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.551494991 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.561046904 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.545843853 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.982820371 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.536721185 seconds)
  done (took 29.282824793 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.571170678 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.569141928 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.570388106 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.571043078 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.571499561 seconds)
  done (took 9.240437419 seconds)
done (took 1345.748206283 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.563710581 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.563490302 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.564030943 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.565001248 seconds)
  done (took 7.643281942 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.503191502 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.502536321 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.503094563 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.545308031 seconds)
  done (took 10.441016487 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.474034163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.24414166 seconds)
  done (took 6.105657291 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.189037027 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.183691586 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.176733577 seconds)
  done (took 7.935516032 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.923299325 seconds)
  done (took 3.310701801 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.526079469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.549165854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.540725395 seconds)
  done (took 9.005547424 seconds)
done (took 45.82957805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.527059342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.301392307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.688182694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.545263962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.690503729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.687432389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.804105676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.546274495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.534719604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.545812565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.544744761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.690965521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.793985115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.299441361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.790980752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.302391108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.693772791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.528966428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.532923775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.541002805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.804168812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.528455749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.540003516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.537837667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.695375229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.680085506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.545824228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.304904835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.532555362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.537164049 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.680610013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.538046144 seconds)
  done (took 87.9047374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.52973999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.529139565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.551178122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.530042613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.527889685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.552198503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.528492834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.530654003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.529782384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.571068919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.530023337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528602555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.532028619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.529817444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.532420428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.530259889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.531147083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.530629768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.530398384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.530773501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.531349342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.539189795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.531886003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.531611317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.530896841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.530475698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.53196227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.551928007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.532472251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.545872139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.530456772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.53031653 seconds)
  done (took 82.497432183 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.53945596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.531774397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.530128447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.551990306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.538014296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530836917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.553252477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.540343992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.532097064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.530673768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.532139597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.540132932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.534601153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.544931028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.535411311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.541941262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.5314342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.567924874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.540651713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.531309393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.533857203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.543582602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.532470784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.537236265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.533356022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.55389781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.539738469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.533372505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.552307874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.534837985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533255172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.546579282 seconds)
  done (took 82.647636828 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.861971344 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.5710949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.574897478 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.54271678 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.574133973 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.570849547 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.544056335 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.868284577 seconds)
  done (took 16.503362614 seconds)
done (took 270.941797844 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.543917352 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.211877991 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.602555186 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.544670939 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.592461444 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.602617344 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.855975889 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.603371839 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.851290935 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.566144619 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.58795263 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.560580504 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.550256426 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.771227123 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.533340448 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.563989526 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.554947106 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.536878886 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.312159388 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.887138231 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.603085141 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.550323683 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.546401187 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.545998482 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.513943568 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.673200482 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.650894991 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.794870702 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.75296265 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.65111129 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.208019679 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.567007439 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.546547365 seconds)
  done (took 71.835539074 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.562270873 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.574552532 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.574970114 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.574614691 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.576365542 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.575051757 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.566888499 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.574483389 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.576153574 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.575571377 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.575431624 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.576193034 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.577617796 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.576379301 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.576107548 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.547163505 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.563271209 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.577461422 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.565796461 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.54792708 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.576138279 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.577151606 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.577379009 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.577308609 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.576259523 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.577817193 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.578096418 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.578261733 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.577775009 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.578808869 seconds)
  done (took 48.587741571 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.579276667 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.293498008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.511756069 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.582653353 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.568220372 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.573083351 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.978430078 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.576156717 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.573438563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.571664456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.205137538 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.581354724 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.617489556 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.526644694 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.574424234 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.577592863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.57869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.569297814 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.307818892 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.588170954 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985444797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.579537315 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.98021627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.590226313 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.573811167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.571942563 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.583058432 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.520188636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.596579216 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.210641032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.549417842 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.974152998 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.458140033 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.570067115 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.550338559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.586945798 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.580881061 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.215141115 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.57411316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.571501726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.975163672 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.571833611 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.525633113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.363855278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.592739552 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.58092094 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.544147199 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.2330135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.895328938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.593212028 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.555287164 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.575424641 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.58338061 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.574489675 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.894367783 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.582987404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.571219357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.549898629 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.584790566 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970953779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.582937327 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.572040271 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.308135902 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.573229319 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.303427202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.574288602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.590145577 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.574937567 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.533673451 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.579016438 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.383327377 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.5901747 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.584222617 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.209710327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.301081793 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.5444464 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.59886568 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.310221223 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.487292972 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.993383027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.581045676 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.497165387 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.995424139 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.580351175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.586740604 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.585884769 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.58747701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.703955021 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.971250953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.316476907 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.381845485 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.567880664 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.982388054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.590249431 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.576104057 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.553586039 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.585664001 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.589748179 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.526964917 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.386673753 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.597668251 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.593410866 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.371319774 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.600716125 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.978900739 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.589551087 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.547782368 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.598150016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.704564596 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.583777588 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.591501964 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.581249403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.977995805 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.579650178 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.585965505 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373533254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.249428436 seconds)
  done (took 223.925814943 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.553454039 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.554198827 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.548531207 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.551844128 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.548291861 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.577552984 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.548546781 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.551854604 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.583687912 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.553083881 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.54771106 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.57979426 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.577423917 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.546536958 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.548110343 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.549543625 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.549666826 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.550819905 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.551271359 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.55011374 seconds)
  done (took 48.528945826 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.587628218 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.369641349 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.32120621 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.595223876 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.587917569 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.579399936 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.655485659 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.589410567 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.588408903 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.002493404 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.817681774 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.604217128 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.58806717 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.588968961 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.320349606 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.565865115 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.000687518 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.340185648 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.589927183 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.340121883 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.560143228 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.59029811 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.576724386 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.339567483 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.01293279 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976629989 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.657877513 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.341299896 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.589901342 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.588511011 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.339704232 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.59127938 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.581461651 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.322952451 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.589977329 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.612657098 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.590011481 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.660746524 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.661748606 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.003947499 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.347306037 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.986889953 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.60986212 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.843032204 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.593495025 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.558792637 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.352008171 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.592452155 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.561195247 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.592561317 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.605242398 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.325290877 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.584164858 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.322427804 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.59324618 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.594230035 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.342511781 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.324013969 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.314646507 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.815693742 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.582305753 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.97924806 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.593037844 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.354284299 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.593814758 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.592269659 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.592601266 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.824651305 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.352590298 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.981630625 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.006795766 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.007626249 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.591557208 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.672702723 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.592267914 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.007840942 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.671321541 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.062864139 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009659748 seconds)
  done (took 147.159871801 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.955454251 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.730411808 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.135823208 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.349079865 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.265315582 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.790787851 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.732872665 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.916739342 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.56841516 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.756453038 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.486976731 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.755336485 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.499552912 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.679375498 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.760620956 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.778740928 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.151773071 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.575514596 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.435619292 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.46393637 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.567220944 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.772899124 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.190397815 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.865469485 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.556716396 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290728661 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.581383289 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.280934398 seconds)
  done (took 61.308382583 seconds)
done (took 602.740460517 seconds)
SAVING RESULT...
DONE!
