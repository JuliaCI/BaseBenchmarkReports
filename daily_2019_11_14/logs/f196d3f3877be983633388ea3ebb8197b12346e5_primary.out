cset: moving following pidspec: 16927
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334442604 seconds)
loading group "string"... done (took 0.548960169 seconds)
loading group "linalg"... done (took 6.956355832 seconds)
loading group "parallel"... done (took 0.1541249 seconds)
loading group "find"... done (took 1.119098836 seconds)
loading group "tuple"... done (took 1.707742973 seconds)
loading group "dates"... done (took 1.202018816 seconds)
loading group "micro"... done (took 0.214831419 seconds)
loading group "io"... done (took 0.986471811 seconds)
loading group "scalar"... done (took 37.568866096 seconds)
loading group "sparse"... done (took 12.00613733 seconds)
loading group "broadcast"... done (took 0.952078539 seconds)
loading group "union"... done (took 12.487790028 seconds)
loading group "simd"... done (took 4.655042962 seconds)
loading group "random"... done (took 8.915272527 seconds)
loading group "problem"... done (took 1.843075619 seconds)
loading group "array"... done (took 20.343840695 seconds)
loading group "misc"... done (took 1.697384849 seconds)
loading group "sort"... done (took 3.239692265 seconds)
loading group "collection"... done (took 17.25785387 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481661515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121867032 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112558775 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116664813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143617112 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.108648273 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120940792 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082966293 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.770954664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145270593 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117008443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408838495 seconds)
done (took 5.015501002 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169905919 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081332189 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079882194 seconds)
  done (took 1.28299323 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065927283 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120550317 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065505956 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065729995 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065988401 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065289618 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065141494 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066540816 seconds)
  done (took 1.636348501 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072389224 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067978022 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068494983 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067355055 seconds)
  done (took 1.400461347 seconds)
done (took 5.687026771 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741977973 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202770254 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181455261 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393231972 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130677895 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158692576 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643427601 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301962008 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180610623 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080716883 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104345919 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317479658 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106123474 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63124517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073086401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088986491 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135666992 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431543882 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066591441 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081059585 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088011898 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127003192 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087261004 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073564296 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141990277 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066539252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134259903 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078991715 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065760607 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20444597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171982165 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656037603 seconds)
  done (took 10.106999561 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095843275 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095869209 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068294896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122125349 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095118478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068535516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070149698 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066210108 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085900524 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126794156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087232023 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099919559 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065198732 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069110172 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084962825 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205378123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081557929 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082219711 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070865032 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076020192 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109756302 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079335254 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079286679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078511844 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129727166 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182209916 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098592258 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098540177 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068122703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081129069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114167808 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12459904 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064314806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065399035 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122699582 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093107437 seconds)
  done (took 4.562140057 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.939223854 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138360963 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088639266 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130334731 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063923697 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105100378 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064627806 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079514816 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197133062 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.336242599 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568603608 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110027901 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102717982 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066729658 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082894435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067116642 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065855293 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325092528 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094186485 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103562889 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081409318 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069596912 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068188212 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340699085 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067079137 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063504706 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067585248 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057375374 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122545006 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067270258 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.002518944 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.067460243 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122613616 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065637571 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099055063 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088251486 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085095961 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.268114754 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068283731 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063492875 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147859094 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064100569 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069169676 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065047054 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082845001 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103035314 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110740234 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065389666 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065813314 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159212985 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064740618 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078278089 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642757619 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152715662 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074965875 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063194172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247414313 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085169201 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068733629 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063511464 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206494355 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066496921 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133247232 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067070648 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066113962 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067478223 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068822519 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360334642 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065019012 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.987039462 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066945284 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074862876 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067808597 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07048015 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072217216 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071132042 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084501038 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06542743 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074669519 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064817405 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065171056 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066278626 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.0832283 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354505341 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065623614 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067519418 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06378156 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085844681 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096120919 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065643296 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064714201 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099803478 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067795225 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065492381 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104412163 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065492165 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083934347 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167125703 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113017573 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067866833 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111017022 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0665434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098673351 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073371557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097880181 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08016765 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067618736 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.393794304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064356509 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064470435 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067391654 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06518249 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066935257 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065091828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078612021 seconds)
  done (took 20.666546406 seconds)
done (took 37.397222587 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230377945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074742064 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074030533 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073996137 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076236348 seconds)
  done (took 1.74167032 seconds)
done (took 2.935051959 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118085672 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097149323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063467957 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093889144 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063473925 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098342636 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097490398 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079977692 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097777823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063299078 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094882529 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063293984 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063344816 seconds)
  done (took 2.304692833 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081695634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082230818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069141406 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081259582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062621328 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081410038 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080135043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087836118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081791034 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073194283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064939881 seconds)
  done (took 2.03156316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081659767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083567501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069104943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080522851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065605858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08003468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08034474 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085688417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0804411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073042368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06281859 seconds)
  done (took 2.028174494 seconds)
done (took 7.544199675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076525313 seconds)
  done (took 1.252818708 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581977505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.060361612 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080453807 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11074452 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181684915 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117958603 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273909114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085670043 seconds)
  done (took 8.84690833 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103005096 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069812544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072661838 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069588623 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068966508 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071062329 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069370042 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072321961 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070653925 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070120075 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072105472 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071359206 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070460366 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06975677 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073125241 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073056366 seconds)
  done (took 2.412322983 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091345669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089857144 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072968486 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073705352 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071240601 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070848222 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073468336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07233088 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069744284 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071311457 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073449514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072530628 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070726272 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064164292 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073249203 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074616256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069956034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073286462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073816457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073815089 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073897921 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063533303 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070644142 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07328706 seconds)
  done (took 3.038874956 seconds)
done (took 16.735852638 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113143129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071481836 seconds)
  done (took 1.365529054 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081959079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082701088 seconds)
  done (took 1.353386339 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083142085 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065068087 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092818744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078080128 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065303699 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065376412 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088065486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065644681 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065515253 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06512367 seconds)
  done (took 1.922750616 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068512621 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077810649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070361532 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080218528 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073458674 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063459981 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071766206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066930471 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077741764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062248863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070612518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081583405 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070553234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082986512 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071525435 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068072192 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071062347 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06842576 seconds)
  done (took 2.490315489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065619599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066194489 seconds)
  done (took 1.327324802 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067366554 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063439685 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066840018 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066018355 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062827193 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061863658 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063578917 seconds)
  done (took 1.643044938 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368989881 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108727731 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300726803 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070804764 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080860773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248583409 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064257398 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071064987 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070357927 seconds)
  done (took 2.619829805 seconds)
done (took 13.917409829 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077413975 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08463668 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093476067 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.356317716 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090430615 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065093244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113027441 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187747637 seconds)
done (took 2.272663463 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208811678 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602745925 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386377745 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202286356 seconds)
  done (took 2.388372472 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322897752 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087676705 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060723631 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067702958 seconds)
  done (took 1.7446623 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064969935 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067871229 seconds)
  done (took 1.336763564 seconds)
done (took 6.884554112 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065515944 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065211215 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085459988 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064201803 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066551532 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064099641 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064185068 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066690541 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06673781 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066955688 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069032306 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067086705 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066831432 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06441143 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064486227 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064452404 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06669437 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064367373 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064517216 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06439246 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064366435 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066699829 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064135116 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06427557 seconds)
  done (took 2.829074438 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082766798 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066554451 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071168017 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069598308 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069333098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07197264 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072431706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067320194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072596098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069117605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071048712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070938719 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069045158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071264344 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068853772 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071281303 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072423447 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067269887 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068928346 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071276105 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07178404 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067719177 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071046305 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071964705 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070997117 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072804988 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069042354 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067393725 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072876158 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070726007 seconds)
  done (took 3.335887711 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069026207 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063002013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065662165 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072118538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064975781 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065810017 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064618495 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06495554 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065412365 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064388593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066620182 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064160248 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064607569 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065573559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065838119 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068483657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080283781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06512583 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064335888 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065000214 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068137699 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064514591 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064924036 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064438073 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064714129 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064600293 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064963154 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064593793 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065371401 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06466289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067401292 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068108308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064343971 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071452547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067994359 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064244402 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068003753 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064441839 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064960686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064214074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064422399 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064142091 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064612479 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071153136 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064405901 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066150382 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064133343 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065128805 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064554254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06675987 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063584597 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064749594 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066202879 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065458254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068074675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063966649 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06499313 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063589863 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065569822 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.173417905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063367735 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063828335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06647586 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064606211 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078369124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071273231 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064341278 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065808687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065133473 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066542872 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065682828 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077453962 seconds)
  done (took 6.09015355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088928238 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086668813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065117245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064224547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061178558 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063326717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066635361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064418178 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066782539 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071081188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065222197 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066399079 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066344969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077755263 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065600077 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066688381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070818365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063039511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065401353 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068212829 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06537054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068388941 seconds)
  done (took 2.734789922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153828667 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069111508 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104046823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072081597 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066565674 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071873844 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068857416 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0697927 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068990725 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067263638 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067000688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069216472 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066575903 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0671748 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067221628 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067070002 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068974962 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066998769 seconds)
  done (took 2.574195498 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075884804 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065873172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085300294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065206989 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064901858 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067201558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069893039 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073568759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067147282 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06512245 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073037169 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067114553 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066988459 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064818453 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067059896 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065279794 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067467727 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065211035 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073272907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069494678 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069360831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072832647 seconds)
  done (took 2.743498319 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078754223 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0678685 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082485884 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067887233 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061509294 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063526596 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070635547 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066888686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071303534 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068567022 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06679588 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065292339 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070720748 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066601985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070057023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066690874 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068381221 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066762142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068097895 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06295126 seconds)
  done (took 2.594518008 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086395033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067437366 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067418323 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075228249 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068151714 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06871306 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076148714 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06819444 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068542384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088101496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068256152 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068188678 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076297675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07272052 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068356264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075610534 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076319866 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075876916 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068272174 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067972101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088074368 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068280222 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075628216 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068135406 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068148976 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068293377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068016518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073190722 seconds)
  done (took 3.255473935 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066428302 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065034317 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062718118 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063239119 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062998025 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06301048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063082438 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064290322 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066843479 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064940928 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067173003 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067058194 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066810861 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066730283 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066867388 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066844457 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067108991 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064138648 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064849817 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064380902 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066782725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066703362 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066746074 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064249419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064087279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066697877 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064211554 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064261473 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066473067 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064421065 seconds)
  done (took 3.188009779 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073711114 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072198418 seconds)
  done (took 1.374759613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062684351 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079350773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062628207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06952322 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070909749 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06752845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074413731 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070905712 seconds)
  done (took 1.782797266 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080262222 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076427431 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067454909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078976397 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075699416 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083211241 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133316196 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068895821 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07398884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065110621 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081215578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066323299 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073602066 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067508131 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072626337 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073423226 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065104862 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073543919 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069636781 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065646653 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068483143 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075620033 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069513875 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063017265 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068333576 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089286983 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07828797 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066770223 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06970924 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07396955 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072587519 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061081406 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066847281 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067351202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06518287 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076687057 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08236808 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069866358 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074593275 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066522762 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078108168 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062415536 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072136638 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073938314 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077308322 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067803949 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067993952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06254164 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064980702 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06974715 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062435701 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066859776 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06207915 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076088646 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070395618 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077208387 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064401455 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067180566 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069158385 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068523088 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07167469 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067589561 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06784459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064949384 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074497503 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069833083 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07404957 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060564766 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05945924 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063120055 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074279704 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086987586 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071493817 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065954714 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066338751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06326153 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068172077 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066643563 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071058068 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0719769 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06600835 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070874484 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073018037 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065942747 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067852947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075308484 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065852081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070842398 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065268406 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083276188 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066443799 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065686913 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065446754 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077989981 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071180889 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067039051 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065093943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073360434 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061165595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066417604 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065986527 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065765489 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074651443 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068696786 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06922165 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07264138 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071709847 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064560315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067278102 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061714216 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06499745 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063917721 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071047458 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058518759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066810758 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066170826 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066637125 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199736911 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06486424 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066340267 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074229199 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071886124 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065284348 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063845846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069065121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066178595 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069437092 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073626148 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065296656 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061462883 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061145571 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069743488 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066045968 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070193493 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072713896 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071408748 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062946586 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066600499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073394935 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076890407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069030354 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068919149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075037055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06998677 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067405783 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074859014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070126285 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067549765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074152023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067960582 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061405678 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069716604 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068423098 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064533997 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069663774 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069910957 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067768249 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066665674 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064766846 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073596674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06634389 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065542363 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065446615 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065309937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076739326 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0678101 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061450225 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063308348 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075394557 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063762737 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065418964 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065421054 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067883209 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066714185 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064420235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065845097 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068367785 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076773441 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071685779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066646644 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07108629 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076865879 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067774134 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066209752 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067297073 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066868343 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074304847 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070910743 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070272211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068168664 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062752652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071005703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072827899 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064745308 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063653259 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065671618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072126598 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072796717 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071899034 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068260918 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065608081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06780478 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069234731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068046148 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065325889 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065051867 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072382157 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063969291 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073163365 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06659893 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075512221 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068830447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060827785 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068830189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064044809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071600161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061163102 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063395951 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065086241 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066504622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064330963 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067232696 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059323755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070424407 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071180125 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064711232 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063392235 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064032124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07087807 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065509082 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067769567 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067257076 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069780953 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074242739 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06345236 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06720388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07408964 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064555523 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058661657 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069615953 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063152728 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063591122 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063590793 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063236899 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067569511 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073799123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070650113 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058489125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06738507 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062973401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063146298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059796415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.068754855 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.067485489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065237318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071946003 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066715869 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06604423 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068254776 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065243052 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065931159 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065024008 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066940155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064294012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065840262 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063640625 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066768225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063192064 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061928715 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065710029 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064171187 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06411096 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068936273 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063363796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064190186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066246817 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064681345 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065143463 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064794583 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06386711 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066505444 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064192398 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064325359 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065355914 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05859083 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069736463 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063139873 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070340429 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064113953 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060797617 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069234827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065874156 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.067977076 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063874526 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064037402 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064363454 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063180415 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066360823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069527524 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061575422 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.072703552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070445853 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063381571 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06584618 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063580169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064462592 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062642005 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064064578 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064310641 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064372431 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063562602 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067714499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066470068 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063992601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065436956 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064050053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063344089 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064418872 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058049579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062736709 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062434575 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063219371 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071839339 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063284473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063441923 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062668879 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064567871 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063219125 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060441156 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070473323 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070897843 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064377797 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069784564 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06252882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064919491 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072419157 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057776641 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061388553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061888661 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061887973 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070751774 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063905046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.072027467 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063670668 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063187004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06025072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063441746 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062952192 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058712084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060942627 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066748903 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062894739 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062176618 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06413882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0655128 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063782152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07181083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062285623 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063672088 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063582582 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061224397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.298787924 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066687092 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07136703 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068768241 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06604237 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065831732 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067641267 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06930605 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069235915 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067281677 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069213805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07632744 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067587895 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070508766 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071257891 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062887895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070548704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06715757 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066699212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066194262 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072817365 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072619673 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070238668 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078474084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067476266 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069613367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069036336 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066952483 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069003041 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068491043 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069122244 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068032626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070554839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077306204 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066452896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072569683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068705331 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069103333 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075382582 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069807351 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071532981 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076681713 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068903782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070470935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076487482 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073556454 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071827077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069891181 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070366065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074329497 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067906304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075621495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068611787 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069924029 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070863232 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066305026 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068500612 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06832684 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067542191 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069369847 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067044548 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066362357 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066379895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067462242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071739103 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075314222 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069634705 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06880327 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062431739 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064313471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067836818 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064501821 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068493574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069777086 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074428155 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070242606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069260555 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066759595 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075138332 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071986775 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07005381 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065947319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072293677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069704283 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071538856 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069171659 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068684998 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069932652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071846928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069764414 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067672958 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075157555 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071615099 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069512757 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069659285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068915796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068614336 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063637047 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06897871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070119212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073261494 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070475139 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068355843 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078685686 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066182623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068252283 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071599117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067699339 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07258642 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063234386 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068814366 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067045878 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066800125 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061166518 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06511139 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064126143 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06746603 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064477767 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060921871 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075470535 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0742627 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068634547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064462255 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064292987 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061119327 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060908809 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064589644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066358112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067000136 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0747284 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064107388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064196865 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060596027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064853155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067196222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067514407 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061900911 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05975649 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063503394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06715395 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069507934 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063320707 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063984079 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067488317 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066761126 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062347661 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067243962 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061215434 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067707261 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075953606 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065062542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064725709 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069583431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071234769 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064749034 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059563564 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064555443 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066803703 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06434218 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064674682 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06495076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078089269 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066695963 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063985551 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063003933 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066575332 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063870615 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072353497 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065055769 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065067455 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068674155 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066153839 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072298182 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066854342 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071226305 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066639679 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067112309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06309584 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064345615 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062068627 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064497352 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065020116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065585993 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068697537 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071599652 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06328086 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074098182 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072417802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065680952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0613897 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063529024 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063445837 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059433282 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064823883 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062428862 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062154126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062217955 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063055415 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064965106 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06923164 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064870459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064561128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064036691 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058632539 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06630488 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066152874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064790303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061103061 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063898199 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064522635 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067447439 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06701127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061834008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06591577 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065675353 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06485497 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059335382 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070077016 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062968907 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065896978 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063428635 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064190042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06478548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067057685 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068164978 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06483575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066005192 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06745048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065999884 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061613743 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062039985 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069205931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061922979 seconds)
  done (took 41.93867721 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106339491 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064874631 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06403816 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064481623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076208279 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065074702 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064104378 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065126229 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065119771 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067197863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063830655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063315381 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072150387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079086902 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07508559 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067901924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063462576 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0644524 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06353261 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064265318 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074625937 seconds)
  done (took 2.951346458 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075292862 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0722947 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073799644 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07710967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068312635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071576566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073643895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0715547 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076801495 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068011037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076766467 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0714495 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067928691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067784894 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067972339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071716562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076531918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068028748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071535579 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073000605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07137037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072966482 seconds)
  done (took 2.946456497 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06844673 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066504301 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068898808 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062191865 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066394678 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062218544 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06986604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064715416 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.078034806 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065298787 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065087424 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064790435 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067550664 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061739891 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066439355 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063859011 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108096533 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069752212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065510232 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067114899 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061589625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067928347 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062457834 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061972952 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065081369 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069788685 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066730494 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064567045 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066105493 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065078102 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06591024 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063979989 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067671966 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06647105 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065440594 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065740137 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06591553 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066129712 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061597314 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06468818 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066971969 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062436633 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066316171 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067286428 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064344323 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063954149 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067861198 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065920594 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061238494 seconds)
  done (took 4.627974046 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08057816 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10956718 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067944038 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089243132 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08058158 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075111322 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069249158 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089545869 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063752432 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06425677 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082258355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080814215 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067427721 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070933003 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072296086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065530714 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066811521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064775208 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06939624 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065096346 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069500847 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072869988 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080472904 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078843173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069697518 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0648435 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066778792 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071213197 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078204906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070384409 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070854819 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071094161 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080613831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071361841 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065015762 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067993151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081752546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066442531 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067906468 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063632942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067996458 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0700931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072053436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081795335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065807976 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071136679 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065893382 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062777885 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078296189 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068018033 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073249058 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079969821 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069793509 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066405854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070188326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080771359 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065795947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064281852 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068815797 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078514089 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063648205 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069643036 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079151907 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068105132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07315211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079463717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070991592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06944282 seconds)
  done (took 6.421747693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075384277 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071930768 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080727808 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079633891 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072011665 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072729971 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072039997 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07200549 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07224602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07651291 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072050703 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092503422 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067510729 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074627479 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072166792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072675274 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072925719 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072447019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0723266 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072042724 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072145741 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082084993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074545694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0820034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100954003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069750533 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074289264 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07476534 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082638927 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074416352 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081505631 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074758174 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074279254 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082597739 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079814506 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071991159 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065158653 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07183343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071861873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072070055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067554093 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080003545 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072089537 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067406844 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072316499 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071947035 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079592953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079134202 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074628735 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076545183 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072128286 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079653797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071957546 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072193783 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08016861 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104894539 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079445995 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079808268 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072394479 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079637462 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081250537 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085623812 seconds)
  done (took 6.106695121 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082811889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075315292 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076343921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061234591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064228476 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069899806 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063778558 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06414326 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07405462 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074143305 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076609289 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069478888 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072289718 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076707504 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069505786 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072582438 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069970054 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069556477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074129348 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06945329 seconds)
  done (took 2.81219331 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074477913 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082887728 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067952368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072215466 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069618937 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071524811 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06871063 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068965998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066973705 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068768009 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075726234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075825416 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067017797 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071646264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075800455 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071459562 seconds)
  done (took 2.527739986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075186715 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072846218 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080136805 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066889299 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064040323 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06274189 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06554984 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061117138 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062126013 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077537096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065678321 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068438812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06580404 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064827037 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062740484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068664775 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063188437 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064761989 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067176794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078167781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076310445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0644261 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066554224 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065546242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065628477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072395315 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067229231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065701568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064986196 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068285876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068150662 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07154598 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065129855 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065797166 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066427277 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065157271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067815545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068063329 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070733005 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067418065 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064440124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065361686 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065396822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066390813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06137668 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065561275 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0633632 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067613289 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063489748 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065409077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065370571 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067188453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065388162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07159916 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067802483 seconds)
  done (took 5.07706177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078288003 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069296263 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062220285 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063491409 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068423686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066765113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068983688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067159462 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067316465 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063640285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06790336 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068637608 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067390449 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069117943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067555681 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069033917 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061604871 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067339777 seconds)
  done (took 2.605218078 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070756703 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065642445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072823679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065905966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066213587 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067522439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06187133 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064465764 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064116302 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06550181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065711494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067955895 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064289852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067872244 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065571581 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065258569 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067765097 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064556725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065739566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061515989 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068037745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064577926 seconds)
  done (took 2.838791805 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092830374 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081778627 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138000466 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079098492 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082965062 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071349568 seconds)
  done (took 1.932768129 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090608352 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079121397 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066471653 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088319242 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073482396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06706058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067059498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067350502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076444898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075685139 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067183726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075565505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075227108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074806361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072653638 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072769422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066955747 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066838914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065912309 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083597294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067000725 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07557796 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066988716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066744466 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067362333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074889696 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075541018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075599148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066901348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075372841 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07242245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067019914 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075743836 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075471055 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06873147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075644041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067093604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083987018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072933369 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075121413 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069008201 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072949705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075600087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071496709 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075167501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067191463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071585433 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06674575 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06692855 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085313599 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072520185 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074274804 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072781318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075385708 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075425604 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085703586 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07614243 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074734837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073011919 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077714912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074714092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07271951 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075274121 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076335329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072849861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075299759 seconds)
  done (took 6.237364207 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081555486 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086270389 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067691838 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07591213 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075475052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067675289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067266475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067572308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067290462 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066794082 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106702214 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067626238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075526825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075277899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067790492 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067437455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067263782 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075029886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067218479 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085602871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067418258 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074809592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075191797 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074978544 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075934039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073186038 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067339166 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067321738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067316294 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067150981 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07231371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067896395 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07519718 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067211576 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074852851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067502532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067234046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072224407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067456358 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072856173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075215098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08328418 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067034751 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067028245 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076279122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067098499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067217898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066961487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067300755 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06709497 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075609367 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07586058 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075784483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074480901 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067110442 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067134504 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066998698 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066932461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066963668 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072496458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075004514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070022412 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085376288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066839194 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066828712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074823682 seconds)
  done (took 6.153288211 seconds)
done (took 128.88226073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185458197 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164187447 seconds)
  done (took 1.735009683 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069210499 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097254072 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076913184 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12851036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065826967 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099568165 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098717987 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077768341 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066218347 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066586134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065708192 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068375498 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13093989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066178667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066042566 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068299395 seconds)
  done (took 2.709037013 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097575261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157206381 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09958939 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065392105 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096483425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072646652 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064686744 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075007063 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070539818 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064806752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073047784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070224073 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064746319 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069896882 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071021772 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072403934 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064198358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072715562 seconds)
  done (took 2.821582733 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100536147 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091571828 seconds)
  done (took 1.595766164 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160091234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106226194 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145488877 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341258377 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171064919 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230660974 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129133424 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128732501 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119121398 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124960231 seconds)
  done (took 3.055489547 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096577062 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151267766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254505285 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114453167 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071852887 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094165974 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115297975 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077053007 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080372859 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079842389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079699505 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075534492 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09743127 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072742514 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072956561 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075413268 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101435782 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071772551 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073383439 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075805362 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098143145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065298373 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07322894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071598696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07677694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076526337 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06493202 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06472638 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075880328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073358968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075890157 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092681069 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076415734 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106188128 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069602369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108515568 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075603306 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073166229 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073247632 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073373613 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078253551 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077950749 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071798994 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075601062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065033203 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075631043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0652839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065094592 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076875293 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066254533 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077041981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075861154 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105927127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06633486 seconds)
  done (took 5.964252849 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101003214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102396981 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070308869 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110319403 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099530143 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071684391 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100122651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093217984 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102005622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0695993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067572634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069564202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08150057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08270894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111793472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103585522 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073196961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070895267 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102969101 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101718783 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06818435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094076175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088667437 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100729545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067034677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06965244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067532687 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069561733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076431843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077642571 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06899075 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079978236 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084196628 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077845074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066455143 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067843914 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068101489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079490147 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07867671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078206425 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076996307 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067492032 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068069307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068756559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069411636 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067106336 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07830975 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079814157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078323909 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069375174 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069429642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067521647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069378917 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080302282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077332297 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080765975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079175521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067459852 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06777604 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071663953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080137498 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078480638 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078546517 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069576672 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078458343 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068005965 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079466793 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083135925 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067847653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069291873 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067756631 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068640077 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069128457 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077061952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077262001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068872189 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069399792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067773109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079951012 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077916159 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067569373 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0761506 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066642571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067765283 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069240411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068980674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077420232 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079812307 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069694383 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067719569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068649915 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067972349 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066516945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07653848 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079839693 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078957573 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078508388 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068871666 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078285002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078081306 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069019049 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078442791 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067354778 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068871908 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197253237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078843387 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078256663 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079896454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069688851 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069135243 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078989765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081126032 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068518952 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078523586 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083146847 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080489608 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068257076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081489187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068653204 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079539326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068900439 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08027991 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068547824 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08019731 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069105867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067893583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068667299 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079664165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07120339 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068075959 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069724038 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069350762 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078789009 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082369491 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071306204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081588831 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07925438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070409496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079709051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068420838 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078428977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070462467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070237049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067545243 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081835581 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068496188 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067923544 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069379465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081279525 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067919791 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079893368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079309098 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06829321 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081747274 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08061813 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076678511 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080084966 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070057513 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068973868 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068318409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068985076 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078804949 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079468798 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071052062 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068112676 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077548289 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079457287 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066798813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07781897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077460677 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077852387 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068228059 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069078674 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079848705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080346079 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077846152 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078054019 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078037034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06776124 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076721719 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078012248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067129143 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083337747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067393701 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082527977 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078642136 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076638543 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078223678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07986636 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079586054 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079624649 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082641005 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067506507 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067535279 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079578684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067654549 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068839973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077889376 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068944158 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069334889 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082726173 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068101381 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079323515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066974754 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078403358 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066251514 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069197279 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082321153 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067210822 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068470899 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208904335 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069436992 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078364493 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080506619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078419962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068163093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069787132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080040899 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078783992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068562545 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067868535 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070186343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078010627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077701551 seconds)
  done (took 18.607021902 seconds)
done (took 37.895703143 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208556779 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148781962 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178253646 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11699386 seconds)
  done (took 2.149532242 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120819591 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101559527 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094222744 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064499102 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100950817 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064726664 seconds)
  done (took 1.98307783 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308681741 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209125822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180384386 seconds)
  done (took 2.131718429 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19745153 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187088232 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388963452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251288465 seconds)
  done (took 2.565366627 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143489893 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088694688 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066503643 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082423986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133293899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159053212 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100073484 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12468623 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077014403 seconds)
  done (took 2.460632389 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145534379 seconds)
done (took 12.867586968 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15283194 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.206255341 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182692092 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234257836 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.16947817 seconds)
    (6/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111695503 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214087458 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188957517 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.107387824 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081526444 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075637828 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165538692 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.151182729 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075154763 seconds)
    (15/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072872182 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071406948 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069143023 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073838048 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076566845 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07212721 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179439434 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108234581 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07285103 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218701456 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199640049 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14171463 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075632252 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104236023 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226045027 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175165845 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074787245 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065851948 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097017722 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076730813 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070490697 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200369137 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073307199 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07177227 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076384288 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159163971 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.178430943 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071010691 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156778541 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137794174 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071311044 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.127917718 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177532246 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106676028 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.192050644 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051364279 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072227404 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148197283 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091107398 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071766195 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084475288 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17373002 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136055625 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072152929 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187404274 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138203948 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064576735 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088664521 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066707041 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07528984 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108181902 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091134095 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090154373 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050963344 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051977859 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086184229 seconds)
    (71/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.167425805 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065730866 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113428996 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067687169 seconds)
    (75/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068601845 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.146259938 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134145551 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116054291 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071996658 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088648578 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.235247848 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065549046 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072321444 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.066090535 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071391928 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052841422 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065430133 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108701948 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072786669 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135609703 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065092998 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173057146 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107846492 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07411489 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138304898 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122003565 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070522592 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158794694 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067240461 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052036618 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065476787 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111764801 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050819446 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11911372 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15720085 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.140595284 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066649523 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07156741 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072226378 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.306130277 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135382618 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.1041701 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17207708 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065919175 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073948698 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052014157 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183767652 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065129596 seconds)
    (119/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09666332 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051697721 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.132775657 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072486369 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087755209 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071384501 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086495118 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071925979 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071152311 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171404335 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174503594 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073373546 seconds)
    (131/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068253033 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071786429 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08658281 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060144354 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 0.137793934 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088505204 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064635517 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065842922 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086900499 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070997212 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14653909 seconds)
    (142/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066884267 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0642681 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051843447 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071416073 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069094482 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051072148 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050614974 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068801981 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070977808 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097586382 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077450161 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074874099 seconds)
    (154/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09610993 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072887963 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07430853 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.0915549 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07068301 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074331882 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074259245 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081234736 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064434875 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064523128 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077107797 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080506036 seconds)
    (166/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098399658 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099358605 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088844075 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184320836 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135466845 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08481299 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090021877 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086115342 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133765406 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137045727 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087693559 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076990813 seconds)
    (178/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071610757 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074591642 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094024935 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071203795 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079410161 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064220646 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066622516 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077811965 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069281163 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072317626 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066620189 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086480106 seconds)
    (190/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.344673989 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051867311 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052705912 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076737076 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063235718 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100485918 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150930568 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062276415 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062666982 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064111002 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05241907 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067853171 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072757394 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164465045 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051335567 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052025689 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066337422 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066484088 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051440831 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15079674 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051332793 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073922755 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072689474 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088729853 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071971131 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114677504 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092834053 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089653026 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051172835 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0654722 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070445442 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064996058 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068803152 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064091404 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099007646 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072052962 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051278403 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089064968 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051340113 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17311858 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053106221 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 0.125884248 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051570243 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051998354 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129994421 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070230036 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086265132 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066181714 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052525208 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06643169 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134448573 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076379018 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0521554 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052542177 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06465668 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051039696 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050883879 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066142031 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060680173 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064784455 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060356465 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166060827 seconds)
    (252/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067384893 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.074708362 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067808506 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078567283 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 0.123567655 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071249433 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072251795 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066857758 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064575793 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052879505 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072457584 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08864907 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064478214 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136698873 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050968073 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062153812 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051347595 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.14824234 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051923711 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06056055 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060264497 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050492906 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051422011 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099102966 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05050164 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050652338 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085627919 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050867782 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071743983 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06357858 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051433025 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063273996 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070482291 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.086743784 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071819332 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06154974 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063468548 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061185551 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069899625 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065796606 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068961825 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051035254 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061082561 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051045188 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064908282 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065351628 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06438704 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052254312 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051282105 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05109289 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087180036 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070200776 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063859857 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052972698 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084521939 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0539218 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064605279 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064461288 seconds)
  done (took 30.232431328 seconds)
done (took 31.678527487 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082979393 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090677423 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073140097 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092115713 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079527902 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075099323 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070685277 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076616793 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078354994 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080171589 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077268637 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053841031 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072849544 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0727753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073120079 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090166805 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076571786 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071399112 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071773888 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063824383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07194294 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064521613 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066603152 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054041151 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076418125 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071118088 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071368398 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072827229 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064675081 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0654808 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068623306 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074715198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066752175 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07900779 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072014796 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072471977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074878861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078133204 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06948801 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067864439 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074030741 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066599779 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073654107 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075296483 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073550717 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072421837 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074392008 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079531403 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093431951 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070529702 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074953796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077148156 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077942992 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073739076 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070832745 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074130385 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07215856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093400539 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075054899 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070627219 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075344805 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075067707 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072780274 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074457311 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0743766 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076645725 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076405008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072068154 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075875776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072401909 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066448499 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074494669 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068860071 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065489837 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074467015 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075614892 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064172455 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070095465 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07124656 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070355229 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064113122 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06622083 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066063576 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070287868 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066077051 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053555895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068061138 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070193965 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063749437 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071874698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070544597 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070899047 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065966107 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074493005 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064158834 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069190547 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064225424 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064551794 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065850155 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06840819 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064118661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066671042 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072984902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065789211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070424207 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077327683 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064237631 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070614843 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06352075 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064254088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078315158 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073586775 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06466034 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066979518 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063890286 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071717222 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063847614 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064387518 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064258133 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064687462 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070103306 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064253441 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066218961 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071044507 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076441116 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064060475 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067474912 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066364787 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064058307 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069254664 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063859907 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064243457 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199191472 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061445097 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067532061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064934335 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07246702 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066641727 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07243159 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066528829 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072745467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069646329 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070621106 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070771518 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063464847 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058097394 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067475458 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067923237 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066941627 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065030217 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067341956 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06499456 seconds)
done (took 12.429959932 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066074565 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140623199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098259949 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094145841 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08488405 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065871023 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075213645 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101019641 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067149341 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100900652 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086786431 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083607421 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110863191 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06390488 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064998421 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069272401 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066522889 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08048716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099515415 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085285754 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115795262 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064591394 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093471215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088706295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085902246 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099986682 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066218794 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068674534 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068583443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08985542 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085652096 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068770408 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065852259 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09891238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091191922 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082204983 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065575419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081238107 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066011278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064812136 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066551954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096712929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0794108 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079522739 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068847276 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068692246 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068261092 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085329311 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0912903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080277921 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088486831 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104656819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070330645 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06706548 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06668255 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087377688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066863275 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069922206 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066686136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06722576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065075775 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068513151 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080010494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080903574 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069124874 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079007095 seconds)
  done (took 6.807177231 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082796712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088755048 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082266872 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082535831 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065318138 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065811912 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065597019 seconds)
  done (took 2.071196599 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06591688 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086631067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086996844 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088222518 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083638936 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085960767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074724063 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066113608 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079662889 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066640434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086191918 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100709662 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066254509 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07156939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089390993 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065609144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089498158 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065588061 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069158024 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088720161 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067201391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08087856 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068683901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066017622 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079316154 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066027524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11203119 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069661265 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067152638 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06831426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064204772 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106170117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079268542 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074767174 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065509376 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079995122 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080864644 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064181119 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081636571 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070232176 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079307126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066083316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066223131 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063660806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069883405 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075863174 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066675828 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066210626 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067688643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084921457 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065917523 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078909267 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06863196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067805868 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066741189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069512964 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075092189 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0663031 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085331991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067136642 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081743024 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081706597 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07890732 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081754036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068657666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07891723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07951187 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068346388 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067285827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069086144 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081900307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064216545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067302408 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076099722 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068091985 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088727015 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088008557 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067447778 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074552073 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065856745 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06578495 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06565086 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087728651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068192062 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065154183 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070002802 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068357993 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064269901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065043888 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069115955 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063709288 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067080563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068316097 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068336925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068347125 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081639592 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067683524 seconds)
  done (took 8.70615338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068003644 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067234371 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068139091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066607863 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067572829 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066861207 seconds)
  done (took 1.961573439 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092513123 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069113134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079009354 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072133342 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103435486 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085525159 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086141135 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077891237 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082964292 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078141816 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085916994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087460937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091938351 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071895521 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085321342 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071224969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086283142 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075078718 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077531959 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072664728 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085457047 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071761875 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072655634 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080878088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074508966 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071383441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066452722 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081404297 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077247627 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077763634 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072017489 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074792924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069995226 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077461469 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085903404 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069797112 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071190681 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076129971 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071953135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074663698 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08711008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072113178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073654765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076109564 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077510682 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069847823 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076470467 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075118848 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085824479 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076761684 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076290105 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071289573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074434408 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075919657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069531188 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077085609 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076403507 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085399331 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071053787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06937723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067959191 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074614024 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07719459 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074137781 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077649928 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07572954 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069333091 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071629316 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071912978 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070466547 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075813564 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068127775 seconds)
  done (took 7.063217204 seconds)
done (took 28.136517864 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54475648 seconds)
  done (took 2.070686074 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59895164 seconds)
  done (took 2.148276913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.988750561 seconds)
  done (took 8.537258189 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394625098 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489210548 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68259578 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128854194 seconds)
  done (took 3.290429015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67387554 seconds)
  done (took 2.230532764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206703868 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19395943 seconds)
  done (took 1.965920891 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371969681 seconds)
  done (took 1.919422304 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101011605 seconds)
  done (took 2.653853379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259723393 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161645764 seconds)
  done (took 1.975100263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45847922 seconds)
  done (took 2.008927131 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.799413004 seconds)
  done (took 6.353647769 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203450666 seconds)
  done (took 1.797235696 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23836171 seconds)
  done (took 1.788488559 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.668184156 seconds)
  done (took 3.219402333 seconds)
done (took 43.512877194 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078896296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080128323 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080279834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076744672 seconds)
  done (took 1.8549158 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07526834 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072276365 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075277797 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071240158 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075735811 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071463312 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073236247 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076095997 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071307651 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07212125 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071339904 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071234326 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073846734 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0728267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069403969 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073504456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074790234 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071190216 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074312508 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071136053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069481394 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073831978 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073710183 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070657032 seconds)
  done (took 3.298476029 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076906013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071353501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073590321 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070629933 seconds)
  done (took 1.852677179 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076176473 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090755906 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08888501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077129672 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091219434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085055519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068239319 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06789891 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071222746 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076117643 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06694036 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094258197 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086597033 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075421458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077650929 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064887706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067093904 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085776107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075516944 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076320639 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068974525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075593983 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066692714 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086480247 seconds)
  done (took 3.41687249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076422862 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101729753 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07644757 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086179498 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088216252 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064281145 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072994251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087520358 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12082622 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064336536 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068998694 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064110031 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071170059 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063980333 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075064955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103273334 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106032948 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06752909 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094154372 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064274579 seconds)
  done (took 3.183959178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072095391 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06830944 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06542759 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067363265 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075909597 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071199692 seconds)
  done (took 1.986503941 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067098136 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066270845 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066118016 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066100173 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070736044 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065909296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065030996 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066374373 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066173598 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065742891 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065718784 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064792041 seconds)
  done (took 2.358652339 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191807025 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067660897 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067985671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065055858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070106719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065337202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078281481 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067136065 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088806739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065268361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065714598 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067759931 seconds)
  done (took 2.524820041 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203205563 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075087866 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233965161 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134777291 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109815379 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11419442 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101892719 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111967738 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14172835 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100127978 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165284459 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163215762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10543078 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135307126 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08755198 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.095579367 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153361972 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159628081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102111668 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163430365 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141886572 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122313277 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144699736 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099912739 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104382609 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120231743 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069807657 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078497092 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167662479 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129272346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144539031 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10931832 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092186684 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173875139 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168571168 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140819879 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132561701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082836758 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100244563 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131358811 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197613453 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088080758 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162142643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242781039 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079276668 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131909748 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117958513 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119155735 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106460491 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089320129 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144165013 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181332727 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138300038 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086715803 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11135113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113934756 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115328844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102076915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179841393 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158229985 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126828633 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072690835 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097388932 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151026902 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129751188 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108075738 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124056855 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092678929 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133967057 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15348009 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116930404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141353478 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126814818 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08713185 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11771647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137281227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126473277 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167301552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122515873 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071638772 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123770538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102267298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079553983 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138258025 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074150034 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172912561 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097174674 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104480262 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110948346 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106826194 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107362202 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159782235 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141553967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240768864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064801537 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102273191 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118356821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145947975 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086041349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107172836 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115421013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077287348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13726687 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073727132 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122020076 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074210263 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123766629 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131401842 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074960474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120130977 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099744547 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098687327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132306216 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158723923 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088365427 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081563788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165576327 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122022345 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10285873 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141896514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153787062 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096909087 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101596563 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148535933 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178234297 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087556349 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160525224 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10607724 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083655479 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085986678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122406616 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110718093 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120604815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080707546 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116689669 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166300837 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07387396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093656279 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131464377 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077592248 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079643784 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102005022 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099427256 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09370236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098880337 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102457381 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135594723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122120876 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103074904 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265088919 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097520307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169534835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087107564 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099090997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101399304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069513415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13496855 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155516259 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078799117 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163949108 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122984641 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104130008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118014455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081867823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13903645 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07764034 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068964047 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143028779 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108847977 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109228662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149653545 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102246272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125952602 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118886108 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133605358 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131125636 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127057663 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10370804 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086406886 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109917895 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124210319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071180246 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089352636 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078701705 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102107642 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094306817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081894809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140345869 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123193068 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098420643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109778253 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095301336 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144517704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075455793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127028057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118354315 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093560124 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150100945 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149952452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129255058 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097560966 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142905862 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069261413 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07212569 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08826118 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262113315 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082100891 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082775389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116955462 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145216854 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128130192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137115329 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11105481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119173748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154189395 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068611599 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114047498 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146707132 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119852625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102913938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08879739 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098186662 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140921379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10822554 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179745773 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112189033 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124370095 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15194276 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098300694 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078480897 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101104764 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133853521 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103368865 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142492396 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097404442 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086178627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108377525 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072605396 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09880144 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125182672 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11797159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133305478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113089346 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131688403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075789786 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115975101 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118472397 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120965211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06333457 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11842327 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159374373 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092183787 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116720398 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150746948 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07799435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122665874 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316979199 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145700537 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084025073 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109482943 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117683547 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126958887 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119247596 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138774018 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107266483 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134124792 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107193539 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084332782 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086545422 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096908093 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104040586 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092501122 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10706965 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113828376 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094212657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130601788 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102508835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108477282 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116337735 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094615334 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087696403 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094969936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171971291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117662637 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169379201 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096974559 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143580483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161870819 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073305763 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07761575 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076831353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137688366 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082363166 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129140935 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095679355 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104310309 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122147465 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140117254 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093682552 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067114365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106507979 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132564702 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110066216 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096803537 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103387273 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161271877 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098776082 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077696777 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111672186 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103193315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103979302 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16996805 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060215134 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095571348 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074557048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079187022 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124979269 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149023872 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078782008 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10183144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116691753 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107924711 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124710417 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097979444 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09551767 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110977204 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142982166 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123402768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086157242 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107780668 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123267738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150174357 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100666561 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.091909698 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162591647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145427501 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154431888 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085038986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109717232 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109099909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103657898 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133357697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080146363 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156322297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078573124 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129762067 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099421631 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08580905 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123833605 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.094313605 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099809833 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140202313 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111568296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07880693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073883607 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111913238 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114386776 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101752893 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072274575 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132042046 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.06981109 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125982148 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160533647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076831538 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098168932 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.348153388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079907355 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109436262 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102910629 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089148695 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097466736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173382691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088227465 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150885867 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142136941 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114338751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135512867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0998067 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635338855 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077631241 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151747733 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116712205 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173864567 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096630654 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11830571 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108558993 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123862703 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144426264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1041894 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174707063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132244078 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11579804 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078985932 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102536885 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101523969 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088220731 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104060884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112199951 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114743463 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092393837 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114016695 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121930553 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080703766 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095022034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154274348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116493323 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142387601 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138596718 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084063201 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11668141 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138138164 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078997835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119962025 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150087344 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104540469 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096505985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079107725 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.24736686 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169014729 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072703781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162289446 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11943012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108181646 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11158421 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112119276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128603076 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1060247 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118922181 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092279814 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108015661 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110299345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080557371 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075979016 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102745927 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110213078 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095657241 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097224108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095222407 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151023166 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071350721 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095945332 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102146215 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143173259 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172140665 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08670959 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081410801 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116787737 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111706626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114621794 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120282068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077713838 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081091862 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080815838 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07598555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10613816 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111092684 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102790217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109805808 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161951728 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082067073 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218611316 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093153586 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10293675 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068675715 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077349199 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094141107 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096237337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106426552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098871722 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168086622 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093302788 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088423162 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091096435 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071576817 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081364578 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125837781 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254115888 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117461166 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096412034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061119217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108432887 seconds)
  done (took 58.004819362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107451233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080639831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095078773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148636424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121321836 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210002648 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155748091 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198014538 seconds)
  done (took 2.798001282 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066915507 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092929495 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098645106 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080503021 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065754355 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067196456 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220883853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078466363 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065072903 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086881012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077496891 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067168434 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412212278 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067053424 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068632079 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064285188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069430912 seconds)
  done (took 3.422632545 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362110732 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605174728 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36991814 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072059043 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.400347987 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090649422 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.036122069 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128332682 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07251862 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536390394 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695618468 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122398691 seconds)
  done (took 18.175400101 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072843936 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068338912 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082169773 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082154364 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070318812 seconds)
  done (took 2.056798761 seconds)
done (took 106.522115271 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078923447 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.374682481 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052533031 seconds)
  done (took 2.134586153 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081058479 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083355142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083377003 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081388839 seconds)
  done (took 2.020009096 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072661789 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07483955 seconds)
  done (took 1.832060977 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219843159 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154031634 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085113228 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08140925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077091777 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077414977 seconds)
  done (took 1.925789746 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0715258 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074267834 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071588498 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075019229 seconds)
  done (took 1.977129271 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075133168 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052785921 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054538284 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054484693 seconds)
  done (took 1.923083872 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084305216 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078297078 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07759623 seconds)
  done (took 1.927858483 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099248859 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084175525 seconds)
  done (took 1.870550303 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080494475 seconds)
  done (took 1.768595249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097312691 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112424116 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130125388 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107817328 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135917604 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107175323 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08418589 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084986208 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075803669 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085941825 seconds)
  done (took 2.708306428 seconds)
done (took 22.303191627 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076103737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.357162468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36085563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089888499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66816122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358343303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968707274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094618143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115922766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068977928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085860589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648443492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993593751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320112655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981885693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320114789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650722838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069884372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068921427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069269265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953690637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069696671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069790331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069899922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650782307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371237951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066912496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.312785051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066309011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068479132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067176557 seconds)
  done (took 16.168305047 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068656718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115806461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073459051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083124702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070548892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068536272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070175291 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068050185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117420441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066742391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083124201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06701094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070933266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06747113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085268549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066883369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067817594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067230954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067112186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067371638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084748196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066520016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066797056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066993196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06670777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078238928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06736931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067129674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067154451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069147291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070330419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06786784 seconds)
  done (took 4.056021701 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11286314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123225813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075776563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104921575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11458845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071882593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144942208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09259597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129194087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069424018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085643166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068727033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099802553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069485791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085796226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067840237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068186834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067833476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067350115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067382391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085638504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067375755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067339213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067256607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067643506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080357832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067302326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067589358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067650481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068894793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070507864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067826973 seconds)
  done (took 4.34035095 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071188469 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073719189 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081563456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082780823 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069660605 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071657563 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071893188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068437238 seconds)
  done (took 2.296974384 seconds)
done (took 28.560028025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07783623 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067998864 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071375682 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.07997537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071902017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077705724 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066244339 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073320899 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071238246 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071651181 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073444294 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066518678 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069596402 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065986475 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072316133 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066788035 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079417129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070580165 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077615481 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077980027 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068824369 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071505123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07351363 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077461103 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077748922 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077990961 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075735781 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071928845 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067716429 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069069721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075151544 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082067565 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068162959 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077789247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066806736 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066720528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070195897 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067135936 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077418689 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074802323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068446275 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074598676 seconds)
  done (took 4.734320579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084747642 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089149665 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083078997 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061191765 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065890716 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063903958 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086899958 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058435686 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058494184 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086353491 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05460107 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058280081 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061179919 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052993647 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058010499 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055847441 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060260491 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054896088 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.057854951 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05844847 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086340007 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052914966 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075544872 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061278985 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057383582 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060524274 seconds)
  done (took 3.418952645 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073062478 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083714999 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086281735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12362282 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101000148 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075303311 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077687966 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090704451 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083680799 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065536501 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069402174 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091589961 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085817449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072361011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065819164 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082289887 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080508655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067327272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071430934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089860696 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083227364 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082597657 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090032002 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078997648 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065174165 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068048442 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070354366 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07931289 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070494527 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075047217 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070660285 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0692826 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067853882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077366627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072585469 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070542618 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090807022 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075852299 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076174139 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066972452 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.06945328 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067133888 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089100019 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123577982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067955995 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074568697 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075066779 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077564451 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066814186 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084782809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076863316 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065713347 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069343193 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065570891 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066572863 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078776704 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067794238 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068886969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074969075 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06889381 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087743754 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070030329 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080951208 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065882144 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074001138 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065361493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06704216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065271797 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09077021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069805172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110477803 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070011966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069152966 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074689154 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073369678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072187056 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066544234 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08090625 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076397239 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070334222 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074512447 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069613085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069236307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085811817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068669654 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06788473 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067383277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072881009 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069801249 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067467068 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079039462 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066724749 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069043756 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082764302 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066200685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067769177 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072495029 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071472431 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065719651 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077053036 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070776226 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067520207 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075100262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066096522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068841756 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077440834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072360035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065049502 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070930753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072694455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067227134 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06774876 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069051069 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068320733 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074247646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072484593 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070485191 seconds)
  done (took 10.484281798 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156383194 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162016251 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069331368 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144143931 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075109138 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077219006 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14463675 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09256786 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067206854 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067515036 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067874121 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108323626 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103878888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113477986 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077005227 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066974872 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082247261 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11151055 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145926408 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140475756 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082152311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075661282 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068675029 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067641193 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069438534 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076815316 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083736056 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07543578 seconds)
  done (took 4.413923135 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079667068 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095271737 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073199104 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088042645 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090171068 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066776214 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068890334 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068471301 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079205417 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077274889 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066213576 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071807607 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073290551 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070052798 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067774475 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072983767 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073881802 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068055427 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06994044 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072011471 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075932823 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089834893 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071062263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066074759 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071358805 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066216944 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063291552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083367251 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067045363 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090078679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064693836 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074721049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079718085 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067620517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066496218 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066223813 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066529762 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066334397 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068330319 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06572621 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065165804 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05648549 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065472512 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078226875 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072421449 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055559203 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071144554 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071443502 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071483056 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064233174 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068872077 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069119857 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069446995 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073269218 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071317468 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071712805 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067586217 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072452682 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074212851 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066188218 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063511891 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064996687 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070841182 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064828338 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.073830172 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070428427 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06498967 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065826358 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067797575 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072599523 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065953335 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069516095 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064124756 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068466545 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.0705768 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068102464 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066916248 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064916837 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065851692 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066650189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05428336 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06608677 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052662378 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069191786 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064583413 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064869736 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066298006 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070905056 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078574607 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067183177 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07176409 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067227981 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065476386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069552876 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059129357 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069036804 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081074668 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081118073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066288894 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064941031 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0801856 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071149644 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065692881 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055206627 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073165834 seconds)
  done (took 9.083394801 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087791346 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068368423 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083114543 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088691502 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085080385 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073774203 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074829697 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068459253 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080286686 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072086672 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07517135 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066762563 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075659495 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07512666 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069224411 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07530741 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070987305 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081324091 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080253828 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066983617 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074464954 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078449752 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087339113 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07889205 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076746603 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078566918 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088196437 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070538703 seconds)
  done (took 3.904541661 seconds)
done (took 37.737608048 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.783964764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.95946313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.779573329 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126441364 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.882829168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.875262306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.903855776 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.783599202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.979699724 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.822976713 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.0571208 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.81736376 seconds)
done (took 65.491673543 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.79886106 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921959189 seconds)
    (2/2) benchmarking "String"...
    done (took 2.060270609 seconds)
  done (took 5.704491053 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.124405941 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.369676587 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.014623976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.781797362 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.787159412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.015459294 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.573381832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312693073 seconds)
  done (took 30.576653859 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905961492 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.011284285 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.455437059 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490220891 seconds)
  done (took 15.634073286 seconds)
done (took 63.642046831 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.798736298 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.819530029 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.807065772 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.765660309 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.836185516 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.796750767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.144756924 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.072284109 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.777770349 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.76128725 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.780312834 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.210022335 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.785381922 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.178233034 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.775448085 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779651054 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.845541085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.362731847 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.932488212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.78722758 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.801471387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.837128445 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.782678701 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782569174 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.813434006 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.77969816 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21311059 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.791198457 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.616253522 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.789896384 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.838253175 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.364342849 seconds)
  done (took 206.147373774 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.780132202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.590846554 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.696485048 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.828725101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.122481881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.964820996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.900613227 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.226556121 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785254295 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791608425 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.981659449 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783836749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.969150269 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.753631199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.81562517 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889726844 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.952902129 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006410584 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818190489 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.953324639 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784619769 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.798887802 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.739300814 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.985635893 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.822479049 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874426443 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.803203391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.814543681 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.979941193 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909389154 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.80513005 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.792617442 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987837144 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.656445897 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.806984042 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.807760273 seconds)
  done (took 169.703364889 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.1581557 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.785269374 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.782436524 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784971072 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789040724 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782787569 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906143841 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912199115 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.235192173 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.045385627 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.836438522 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60757011 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.781741942 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852754064 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.783996725 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.796835112 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.785544884 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800014312 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.811896839 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787165487 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785659033 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910774818 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.795795121 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.251841681 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.794398585 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.786161621 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7874536 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.153009622 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784767635 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791977248 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.821187417 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.036697217 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.786788535 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783650491 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.685809436 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.786850171 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.868819069 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.786964023 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79306497 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785062619 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.007654986 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.786685981 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.786154158 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.789425226 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.790393862 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96306676 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.786163149 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.911678025 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786961012 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.287026076 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.785149993 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786199838 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.575365381 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.461026786 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.784554186 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.786954284 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.789960318 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.786572046 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.78652345 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.791515435 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.509212441 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.789277239 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.85638741 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.792042908 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.78923975 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790855089 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.784027981 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.916800281 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.788837576 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.261564254 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.841112338 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.900001995 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906274709 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788985796 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851225515 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.879418941 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.786356528 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.784947939 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.789685254 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.785951141 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.867347565 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.785655327 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902835212 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.795757332 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.786915565 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.836506729 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.854910194 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.787520936 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.691651339 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.790016033 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.786926674 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.100249184 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.85482772 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.786679903 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.787658016 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787212649 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.909312358 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908582707 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.579543013 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.788786289 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.577175268 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.793893032 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.925623486 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789784596 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966463072 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.792681064 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.871676902 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.792998077 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.789419902 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.789916523 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821578268 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.792663815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.850204028 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.790184431 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.16053987 seconds)
  done (took 404.292885281 seconds)
done (took 784.078517251 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.481699319 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.427934952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.535626093 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.450202283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.423132908 seconds)
  done (took 14.046467005 seconds)
done (took 15.77298313 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.877076895 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.879137363 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815214755 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878511988 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810429684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.877017001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860108623 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.817923459 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845514983 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.815482241 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848776338 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.815540524 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.803331116 seconds)
  done (took 25.672071588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017964362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.029942824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.861143159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.02704951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.838483097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.024995426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957204438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.941026543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.945794531 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.808388237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.803772571 seconds)
  done (took 22.988446513 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.054911498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.036906161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.872327589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.048221314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.842554443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.032481867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.955315822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.947507182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.947567889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806590894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.804837555 seconds)
  done (took 23.078421528 seconds)
done (took 73.465771548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.803075943 seconds)
  done (took 3.532939363 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.819247459 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956668265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.806737339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804073788 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.800137096 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.799054144 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.8006612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.800127567 seconds)
  done (took 16.317731401 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.802327524 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.797805444 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.801380371 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.797110688 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.796821116 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.802247425 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.797654105 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.800242068 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.797690396 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.799670211 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.799158503 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.80262902 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.800934219 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.800441499 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.802384977 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.80313913 seconds)
  done (took 30.531916608 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.803680726 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.798141461 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.798898946 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.800714345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.799668228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.805783154 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.801148869 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.801488596 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.800234002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.803227185 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.801689337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.801240861 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.801418895 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.802019525 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.80135086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.802945251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.802608341 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.806387788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.809420428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.805490781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.802959049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.80232192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.806591323 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.805775699 seconds)
  done (took 45.000114117 seconds)
done (took 97.111863138 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.710200494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.455613637 seconds)
  done (took 8.893271627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.807037898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.808711183 seconds)
  done (took 5.391392946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.805918885 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.800141 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.804776195 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.809038378 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.802863391 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.808651667 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.803972852 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.807236076 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.808809703 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.812491603 seconds)
  done (took 19.797513847 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.804689368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.808074396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.804649618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.807497284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.799738567 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.809039501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.806055324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.811992811 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.804557376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.807866238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.804696406 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.807947948 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.810240076 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.807798225 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.808467579 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.805781804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.804901121 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.80589475 seconds)
  done (took 34.257902704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.807253492 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.810426327 seconds)
  done (took 5.352859487 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.803721711 seconds)
    (2/7) benchmarking "second"...
    done (took 1.805171026 seconds)
    (3/7) benchmarking "month"...
    done (took 1.805482539 seconds)
    (4/7) benchmarking "year"...
    done (took 1.805580743 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.802577567 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.803689462 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.801639912 seconds)
  done (took 14.364921065 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.808388974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.977505914 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.048629697 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.472990582 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.811587233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.815718933 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.748425898 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.816926971 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.810550084 seconds)
  done (took 20.048286409 seconds)
done (took 109.838750528 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.639711562 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.803268355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.187610907 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.862034772 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.859632234 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.138495693 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.834069711 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.020281373 seconds)
done (took 43.076714637 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.885541152 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.360131191 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.394752725 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.162633766 seconds)
  done (took 12.651226441 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.787555168 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.32480881 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.843063922 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.399380322 seconds)
  done (took 20.114063054 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.172094668 seconds)
    (2/2) benchmarking "read"...
    done (took 2.166142029 seconds)
  done (took 6.080904906 seconds)
done (took 47.467987872 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809230332 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.81168904 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.809123474 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.812545561 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.814508196 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.814374385 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.811997459 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.810447661 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8136926 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.815983607 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.812926467 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.812740757 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814489298 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806446858 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811847282 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.806751132 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811036708 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.811476169 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.811292148 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808210726 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80769852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81503513 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.805977066 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.813152124 seconds)
  done (took 45.209990661 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.80942156 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.809554664 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.809501223 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.810801405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.808195457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.813549623 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.815052422 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811708624 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.811497411 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.811995267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810743837 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.810243038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.810472066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.807267609 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809654446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.806633222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.812066058 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804911335 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81607053 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.812046775 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.814458169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80994142 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.810645051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813575987 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.811584947 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813407717 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815043193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.815196499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815057822 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.810308019 seconds)
  done (took 56.082113375 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.816893614 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.818502782 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.814013836 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.813762539 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.814588689 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.815419703 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.813994869 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.816157363 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.813482137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.815658909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.814156708 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.815781592 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.813549334 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816215087 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.812485009 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.815140493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.814524461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.817360238 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.814865399 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.813924706 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.813830563 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.812495081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.813622189 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.81634349 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.815638112 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.81407475 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.812656482 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.811972978 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.816618081 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.815598915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.812727199 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.818458206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.813300348 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.813210741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.81724011 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.812484949 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.819644678 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.822520276 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.813527104 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.81607418 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.813285452 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.814759612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.814687145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.813200664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.813568528 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.816040299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.818961292 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.81750755 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.81617924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.817174891 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.815423496 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.814505447 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.814725158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.814719451 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.815957685 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.816977673 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.819025787 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817543663 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.81526068 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.817810918 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.819378365 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.816481872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.815831355 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.814196748 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.818030295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.814839934 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.818824903 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.8207867 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.817578167 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.815705717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.817973437 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.819130459 seconds)
  done (took 132.472429517 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.816054704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816041536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.818182053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815449204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814259576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816861772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816041589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818518968 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814736472 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817247336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818526229 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816217205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816881162 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820658148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814860853 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.811584496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819063974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812697343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.818115714 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818652145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819089169 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816063882 seconds)
  done (took 41.715019282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817676551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81794313 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.813712354 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820145775 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814434059 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819651256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.818766722 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822242723 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821953758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816805162 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815106434 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820693231 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.81340002 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814400441 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812557729 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814080296 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817553624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814862209 seconds)
  done (took 34.451270139 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.815704678 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.816312552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.819322788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.813621205 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.813705835 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816869507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817426141 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817859963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.819482667 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.816506157 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.821704418 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820848172 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.818224756 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818353526 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81981223 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815105461 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.819149561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816652173 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819637041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816946564 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.817808708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819550179 seconds)
  done (took 41.739514345 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819158552 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821556557 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815294489 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8192637 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816479243 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820549134 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.819116098 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819070265 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.820081015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.821317912 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819129063 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.820684213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.815517572 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818796911 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.815534538 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817800474 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818752767 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818058523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818547504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814085081 seconds)
  done (took 38.117453931 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.822249656 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823231943 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821480772 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825204984 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822218385 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824414203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821680215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.823559072 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820997411 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821517933 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822146482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825438259 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824500962 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81921001 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823130827 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822562761 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.822078854 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821852619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.823983067 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823776353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820794752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.822678273 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82166345 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824019074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824029876 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825818004 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824804611 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823989919 seconds)
  done (took 52.793743582 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82472495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823019711 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.820740487 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.82034947 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.823126868 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.822226165 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.821720734 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.819817645 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82111833 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82132263 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.826819379 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.821949331 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82483664 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.823045196 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824604739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.823631338 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826322157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.81943815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821813767 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824088365 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.823657518 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825669983 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.823455123 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824332225 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824960025 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.826087963 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8229954 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823385979 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825060254 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822387891 seconds)
  done (took 56.448396338 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.842260109 seconds)
    (2/2) benchmarking "in"...
    done (took 1.845150827 seconds)
  done (took 5.441984765 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.822764371 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827287537 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.826886519 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.823548566 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.82332854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.825958007 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.8269372 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825575119 seconds)
  done (took 16.358226938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.82482325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.826813572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.826905347 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.826978689 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.829460101 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.826900842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83264915 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.826283238 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.829889905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.828056136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.832933368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.8352318 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.829033461 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827422063 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.82645691 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827779141 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.82611924 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.828845348 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.824786187 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.830178954 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827255288 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830563631 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827384331 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.824524931 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.825335983 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.8385117 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.829438129 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.825605153 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825826291 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.831214208 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.828305218 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.820606907 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.826064735 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.828647513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.829065788 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.828388779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837897522 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82941985 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.835176063 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829716515 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82314665 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.824650837 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.832122079 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.831617393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828052672 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.826829711 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.829611003 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.823554313 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.828283874 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.829468539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.832781382 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823413463 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.828266778 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833199456 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.832355159 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829837599 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.829893079 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.834056551 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.832927407 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.838721188 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.840090825 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.836797945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826027038 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.827725863 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842924151 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.852640142 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837538015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.828364265 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.82774597 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.830134264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.837598323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84447111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.839077678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.82884626 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831144125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.830406212 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830999208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829950487 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.836220504 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.833523984 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.830131961 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829484929 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840050341 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852666571 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.827884953 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.831421474 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.830858547 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.834110997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.834844309 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840377595 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.833091569 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.828157676 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.829768249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.827791097 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.835324586 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.828071828 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.830274692 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832795322 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.829011679 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.833398046 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829969917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827920587 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.8370555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834051122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82822045 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.835215037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.831374351 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833674784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.839133125 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.831422321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835507587 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833019974 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.835841747 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.830488691 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8350282 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.841906342 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.835429058 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.830064583 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.832773549 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.831339355 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842355559 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.853827229 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.830908906 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.83349225 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.837365058 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.843468112 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.835248821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.836178947 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.83269257 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.831234125 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.829201994 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.836368204 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.832986566 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.837802297 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.831658933 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833265711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.830039982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.832256148 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.831463192 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.833539582 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.837920077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.834219334 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.833336357 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.836918949 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.834965584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.836094712 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.840436689 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.835718014 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.835486471 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835457141 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.829113186 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.829442613 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.829412864 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.830651995 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.834193839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83588766 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.831188415 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.837599748 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833531195 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.833875349 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832009309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.83668004 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841009476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.835627579 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.838024035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.832358507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.830940656 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.837351114 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.836767022 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.834678755 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.838007246 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.836162541 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.836225847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.841225238 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.833401133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.836621295 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.840098475 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836699936 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838632257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836070228 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.837647965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.843285629 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.833045787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.841815945 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.836005643 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837257352 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.835078557 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.839948036 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.834087118 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836250859 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.836147159 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.843605647 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848747807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841618707 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.837275955 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840401415 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.840257918 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.841878443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.840141648 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.83879447 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.836057707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836504468 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83613814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.840022777 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.840098518 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.838090553 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.840452985 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.834210644 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.838470977 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.837446475 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839092206 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.839897234 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839507899 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.830435999 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837009219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.840287678 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.835793326 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.832091811 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.838651347 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.837739062 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.835310388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.837794058 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.848724654 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.834291109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841422047 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8392826 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.8393647 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.837459562 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.838882513 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841213959 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.838705727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843563805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.839320512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.840435507 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.842235284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.836822434 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.838975849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.840571296 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.839276107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.835028183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.839787039 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.845526078 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.838830578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.840718221 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.840080127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838495831 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835509371 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.84845052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.833659391 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.840734861 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.839114649 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.841565104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.838741389 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.837774128 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.841095056 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.840295623 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838568508 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.839553081 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.832263145 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837418668 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.838235702 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.837839648 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.839426926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842252134 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.841341305 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.846705626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.843701017 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.836882899 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.839033846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.843562228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.838004827 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.838155177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.835669891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851958364 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.850914798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848019696 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.847485948 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.842046943 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847193299 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.841835492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.845885127 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839796982 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844000591 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.84033845 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.841052773 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.839414359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842434079 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.840955399 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843377928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.841207009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.841952655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.843236746 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.840562782 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.841175772 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.842484508 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.841203008 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.842221273 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.84175508 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.843572976 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840603979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.841244343 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.839058167 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849729678 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841219395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.842054885 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.843049353 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.839822944 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.840623189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.842805802 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.842387178 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846279535 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.84924727 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.846761886 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.849423047 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.842449264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850886453 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.844094129 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.844758588 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.849536367 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.838430391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.840055695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.846020069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.843392704 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843397813 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.840711875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844201022 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.846902721 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.841756391 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.845742483 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.84188837 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.846692605 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841511796 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.845980153 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.853657847 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.843672607 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.844754417 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841543031 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.841437367 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.848561619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.846174047 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.840434782 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848328526 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.845210782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.842029655 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844320858 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.838490763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.840995759 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.842271571 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.844159077 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.842119209 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.846076179 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84854907 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.844731258 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84840035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.842207611 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.856895797 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841495777 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.851230482 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.849563649 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.845563144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.8426419 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.840990582 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.847317682 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.844292406 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.844673489 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.843072123 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.840647789 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.848405943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.848617287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.842731352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.848335855 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.8459452 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.841575088 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854503564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871062492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.845488623 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848727814 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844125527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.84551468 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.850554074 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.845472516 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.843285628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.849705634 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856600165 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851410077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.847844922 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.844080948 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848614658 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850264488 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.847693672 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.847513717 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.849967302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.847835518 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.849864519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.846672736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851829879 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.844953718 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.848781131 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850550122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.850447086 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.858629774 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.849421431 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.849753766 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850904486 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.851475839 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.849013191 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.849498643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.846888551 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848714672 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.847942535 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.850689881 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.854417289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.854921088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.850454662 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.84758163 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.846123645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.851386878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.849472414 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849738186 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.849634234 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849585765 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.849702775 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.849492054 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.847149128 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.850517847 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.848431712 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.852387816 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.848380761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85398866 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.857988185 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850264791 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.842243159 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.849081942 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.847758672 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.850108281 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.851304658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.855418747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853789778 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.861807732 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.856907255 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.852065684 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.848736811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853293584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.859671026 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.845482084 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.853093238 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.849532773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.850777861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.84976814 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.852497223 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849474613 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.857340766 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.849481343 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.848617503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855810654 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.852363902 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850073128 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.851118219 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.855103966 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.850112913 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.84936444 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.851702558 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.852297316 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857925357 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.854717445 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.853276813 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852558941 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.849498441 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.852311361 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.853667198 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84922332 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.851663828 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.844736947 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.852696922 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852451577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.851212112 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.85072269 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.851406384 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.850257087 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.853886771 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.859408565 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.847835104 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854462763 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.853186326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.851309543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850590045 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853763792 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.848160875 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.849074809 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.853393206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849286461 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.85500549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.855238572 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.853035904 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.851785378 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.853466618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852908852 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856597501 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.860876846 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.856796961 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.850178229 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.852285159 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.854865423 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.853562107 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853827943 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.854740213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855630004 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.854780942 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.854920115 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.853419003 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.854577499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.854880153 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869230611 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.854703235 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855224223 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.854454048 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857596504 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.853266426 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.850340185 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.851691006 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.858588286 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.856731712 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.859216532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.855601217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863968809 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857637787 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.857704821 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.85740989 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.858166997 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.86091813 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.856067459 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.854040667 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.857352484 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.85685798 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.869316136 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852607248 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865365264 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.884746402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.855487316 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.854977287 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.855557091 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854116701 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.856399268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.858450756 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.855217785 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.853655059 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85150946 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.85277855 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.856959431 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861597387 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.855790169 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.855658849 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.856197131 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.85802751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.858901936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.855257387 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.856494107 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.852425775 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.855721544 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.858039317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.855832807 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.856861291 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866639604 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.865045745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.855319834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.85580427 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.852016876 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.863456904 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.859070882 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.869661915 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.864779955 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.855115667 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.856421583 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.857670843 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.857672655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.854745559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.858677691 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.860012065 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855308307 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.855515561 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8704471 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865894672 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.864302364 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.860033095 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859680529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.857604245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.861626229 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.860781356 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.860605559 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.86039385 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.857613463 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862394931 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.858530612 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.858034202 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.857501875 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.864961174 seconds)
  done (took 1100.570777849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857159109 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854257496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85654494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856703267 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854464136 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855212571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857328573 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856687862 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.856662808 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.857165849 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.854825662 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855547535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856042734 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856175838 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854787573 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852742818 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855459599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85917618 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856699933 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857476015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856793105 seconds)
  done (took 40.763763503 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.85781532 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.856438338 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856021714 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.860226407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855353745 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.859484832 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854702175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862668614 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85899671 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858072444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.860821798 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859634085 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.854004722 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.854718316 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859691579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860171043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.858906906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857262512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.859277887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85616075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859549571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.861104741 seconds)
  done (took 42.669719249 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.857571288 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.861470576 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.863554772 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.858403667 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.857634678 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.858439577 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.858605274 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.859393701 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.860005126 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.863165868 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.864185498 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.861679548 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.865552734 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.865375536 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.859843758 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.861714523 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.003263971 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.862589188 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.864111293 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.865039055 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.858606385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.868547785 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.859753826 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.859935779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.86053815 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.863010769 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.861056318 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.863034879 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.863204048 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.861877511 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.864290267 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.862696499 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.861708567 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.863141603 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.867346652 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.863367031 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.862621872 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.864593116 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.855023501 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.861917829 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.873703656 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.884223082 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.857366002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.870090006 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.864097601 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.860364141 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.86557113 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.873505109 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.857687233 seconds)
  done (took 93.213694023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.860298876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.864447306 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.862526764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.865366372 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.861328659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.863640884 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.86017424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864413102 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.863554566 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.861129647 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.862501545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.862332628 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859653377 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.865958335 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.863026373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861301299 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860669969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862163829 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.865462767 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861660012 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.857958488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.86069578 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.861632264 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.862901449 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.862059367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.863773748 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.857601623 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.86423898 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.863543308 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.861854102 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.863190519 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863567823 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864768185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.862083677 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854517674 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.8620769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.861088627 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.860943133 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.866131712 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.862726321 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.865837624 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863846086 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.864045851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.862454036 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.861772647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.861819457 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861270199 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.862423366 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.862826581 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.866187895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.868224487 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.86440043 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86415143 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.863540247 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.863375905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.866298897 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.864514116 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.863995406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.865360675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.86652266 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.862261261 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868494605 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.86281366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.865552985 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.865456015 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.860041578 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.867532337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.866828029 seconds)
  done (took 128.480510242 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868684677 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.867967752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864309005 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867396773 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.868215046 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.868744547 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.871379222 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.867184152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868222173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864468512 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.868124554 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.86684788 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.864268522 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.86985714 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865441984 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.866726899 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.871250769 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865907525 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.866873144 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870300876 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.870198115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866676537 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.871377164 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865346729 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868861635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.864942566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.869471423 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.867698945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867248207 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864749134 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864858815 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.871229298 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866178206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869722744 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.871413175 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.86588644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871334339 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870940773 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.869948891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.866862282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.868604619 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862851742 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865285158 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.868202481 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.868252883 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.872397735 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869675349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.870473591 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.865396319 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.864321513 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.867397555 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870286756 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.869187681 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866003994 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866081312 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.869585951 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872542516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864958007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867509695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.870500394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.870552689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.873543304 seconds)
  done (took 117.615935556 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868517809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.86907733 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.866409698 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.86881354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.870186855 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866549635 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871051687 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.868650823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.867618531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.868167542 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871837608 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865963676 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864884111 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868757285 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869161153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865546399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868217732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866609822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871305755 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.871845944 seconds)
  done (took 39.168710377 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.865885828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.87417869 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.865241224 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866902468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86661288 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864275079 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.868915553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868298766 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86645368 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86947882 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.87055656 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.872790094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865913766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.867225435 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.869900136 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.867189286 seconds)
  done (took 31.687287682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.869498112 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.87175337 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.871038667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.874467786 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.870356963 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.8694082 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.870360997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.868533145 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.867752556 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.872445486 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868914762 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.871858404 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.86773673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.871299571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.866668097 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.873139946 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.868512626 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.869384336 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868421438 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.873977921 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869768413 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.867116831 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.870399699 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.87112667 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.870612932 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.869288419 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.871966085 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.867906107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.868353932 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.868925857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.868494198 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.865799536 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.871160742 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.864530233 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.868777205 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.863336001 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.877205809 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.870541576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.867383491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.87113947 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.872605524 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.870072489 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.874336519 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.875028847 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.870037485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.868813309 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.870967455 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.871346883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.866438625 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.869909074 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.86891222 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.871107629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.874173128 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.875460695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.869873505 seconds)
  done (took 104.653196344 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873122421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870120963 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.874388787 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.869540795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.875231369 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.875121411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.870804966 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87041359 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868018687 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.87233303 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874961715 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.873318723 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872856662 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869417036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.869456084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872360388 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.872430392 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.864705006 seconds)
  done (took 35.490189081 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.869833901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.86746346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.876587578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.872634585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.874525641 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.874673468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.875665586 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.872355708 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875359722 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870784388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87272345 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.877955641 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872902951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.871247863 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870133887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865567627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.873739902 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.871147451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.8726565 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870833446 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.873358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876483459 seconds)
  done (took 43.000011811 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.873315667 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.875485503 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.892371419 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893921747 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.894669342 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.908803614 seconds)
  done (took 13.13987354 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875849777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869978697 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871243234 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876808286 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87706347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87267211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869921715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870943441 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87315548 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875660083 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879247585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877519656 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874709964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877715654 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876129737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87218859 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870790021 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872983245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873389277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875847762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870544667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875007287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872455386 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873847185 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87231846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877229441 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87899112 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878021027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8762991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869918796 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87937761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87648082 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8772375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87458468 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873925756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883323323 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874942657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878070786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879505991 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880302427 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.882506011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879624389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878949461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879158506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876174393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872910315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873875322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876176234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875935628 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878650161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876379171 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876460792 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880031051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8795098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880720436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881256613 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875270254 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876415276 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881181857 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878645783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877693415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880689956 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874577145 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878237719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88199545 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874462434 seconds)
  done (took 125.634933113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878721565 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875199517 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880763341 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878868108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877651536 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876111931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874239725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880346044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877598497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876723959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880655254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878297148 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876222586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879227987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878517414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875399985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872010306 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879643483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877941345 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875905938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877693314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880464112 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880428732 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88127082 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881822016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880757592 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879868369 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880668028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877469659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878580352 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879082512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879756854 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879006713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877981112 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88310595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875004148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877601399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88068531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884224847 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88327028 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878426155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886515926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883769103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878189337 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881067053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885658206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883407251 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884640116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882072233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87707597 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883939577 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881103348 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879524989 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877780676 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878390736 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879803067 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880976438 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878565427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883884325 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883224947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880664876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881015997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881668295 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879233044 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880407072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882429896 seconds)
  done (took 125.866760005 seconds)
done (took 2564.5267106 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.865374988 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.962896038 seconds)
  done (took 15.63808454 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.037949395 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.989891552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.875010861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.893230172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875588518 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.89287624 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.889165791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.873880744 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.873979855 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.875240724 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.880782173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.061569816 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.880475963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875051384 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.877394745 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.968784092 seconds)
  done (took 52.426350888 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.878754772 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.878717732 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889974514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.885404709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.879724072 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.896681732 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.912248866 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.884624674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.913175554 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.890889906 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.955105929 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.894514897 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.876226981 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.92916178 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.896581367 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.895446431 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965652148 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.955565677 seconds)
  done (took 36.083919639 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.959411174 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.884578638 seconds)
  done (took 10.655821555 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.900981012 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.891553885 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.891573447 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.872759173 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.893738431 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.894811731 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.912090382 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.892418087 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.88590236 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.896061568 seconds)
  done (took 70.742854451 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.890851984 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.884694282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.885628189 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.882139901 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.877643937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878347935 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.882697554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879414232 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566297847 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.919040218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890115057 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.889881471 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.884128723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.885479955 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.882056407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.907228414 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.013900296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878673812 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.883181759 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.890367724 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.885363277 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.957785767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.898126542 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.883554973 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.916784194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.567969614 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.889807062 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.891871429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.021029448 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.881098928 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.884850745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.887005596 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.88710267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.274089514 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.196004743 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.883600698 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.89491595 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.891766305 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.882893751 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.017859736 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.887435108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.890996849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.878252047 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.171925301 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.9705423 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.930803282 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.230063516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.891416053 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.887218128 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.916946436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.887352455 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.88817618 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.901997357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.398544877 seconds)
  done (took 133.591038283 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.880236284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.167295823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033294252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87864414 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153601843 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08676258 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.880994258 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93098544 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880821396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08347533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042812606 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.990976585 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878323508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.878343926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8833455 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.875863958 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041770535 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.949409186 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.880985161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.878466008 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908315884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090965849 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.013468741 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.884137229 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.899782462 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.089846181 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.001259559 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.991739435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.187519729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.879070783 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946719853 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882512172 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.883237727 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882615413 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.039304666 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.979336016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979271744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.883015467 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879248927 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.880888885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.546989643 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082812322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.984677553 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028193221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13338174 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08744437 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.530707136 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.881953158 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.52585054 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.047202817 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.09775454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.095439582 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.009334481 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.887745114 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.240020815 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.882203953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884093538 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.12452423 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113723206 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.988487566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.8893266 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.884224616 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881379885 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130569797 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884449609 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.978826009 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886269789 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881646919 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983013346 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.988293159 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118111738 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100215541 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916167854 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.171675859 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.352681473 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098934307 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.956154084 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116678888 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.884824147 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882150064 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969220044 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.634961516 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04470732 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.136755099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105170576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921871796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.488382218 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.888358448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.077927448 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068599644 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.083060069 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127505266 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.039011782 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.088635745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.886248983 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.884755783 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.141195198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026014216 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.891367928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.24484705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120326875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.439654694 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.913756755 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.186438406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022967808 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.256993799 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.516075378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.888395335 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054127395 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925278992 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.889244409 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886666817 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.078718357 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.69869291 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885650479 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.404897334 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948709986 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.886914228 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091129504 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887102357 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08888688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881135036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112404887 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.873555765 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91223048 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.100170083 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12141147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.666822825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122407769 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118851929 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993392978 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098300309 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.469002159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872747802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.149053377 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876503024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.871521477 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039892229 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871461932 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020096277 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875685813 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098494774 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900208738 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027252899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874714202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106344951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90984631 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923106051 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.872952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002472638 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872253176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754229397 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02767484 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870629692 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868473862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.510434811 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.868849616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014834008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.099345735 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894068266 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.937141705 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.395962341 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867384258 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959504405 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893740274 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.365063743 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.866979471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.027908596 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.834758486 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296653988 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.864617678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.106919816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.050368379 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.86722435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865100071 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.607422363 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.575591576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861741813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02326361 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.59352816 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.518456612 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065794678 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864414954 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991058438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.864662871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.941956201 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213856012 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.860083805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.860241761 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.860888861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.860587096 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861351518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119319773 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.891662606 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.381253868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.999055581 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077268648 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.171524444 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081677546 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.908211522 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86080494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109016743 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863820496 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.926725489 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.861639282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883478183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094268344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863638169 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093169796 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115956938 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.804816028 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909972665 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.860266437 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858445781 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.857597296 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012534804 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950622545 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.861160866 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857451682 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96967669 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986630603 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052296338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.447592633 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.029863331 seconds)
  done (took 900.188938439 seconds)
done (took 1221.132305524 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.857638314 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85712894 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.845854831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854790487 seconds)
  done (took 29.209003312 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.859852298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.85761017 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.859315614 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857876905 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.859278648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857893471 seconds)
  done (took 12.939666745 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.899795629 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853212215 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855718539 seconds)
  done (took 21.396352571 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.926878346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266725703 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.974110625 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302997095 seconds)
  done (took 10.258745843 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.861533029 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860018264 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.860125538 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.859526737 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.86144478 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.861472528 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.859555963 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860835985 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863509548 seconds)
  done (took 18.537643376 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.172770155 seconds)
done (took 98.306697474 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.915233904 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.064584337 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.892953675 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.356223095 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.229667323 seconds)
    (6/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.784247119 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.487496027 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.990162832 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.897302717 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.288513301 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.992031892 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.880509824 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.021958662 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.918620852 seconds)
    (15/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.911528229 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.049366415 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.953048134 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.967452199 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.925201527 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.893371591 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258498338 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.173238481 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.998988255 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.096112486 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.188850487 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.993125632 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.974049372 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.223404375 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.031383316 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.328751376 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.034796919 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.970090065 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.912054187 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.893396567 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.038581202 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.255275507 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.890391666 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.960491768 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.973351673 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.986599924 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.33455108 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.017053609 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.067044106 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.990324824 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.233496907 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.814800989 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.254727962 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.078851276 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.874505396 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.046561118 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.916585559 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.981018397 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.546184542 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.000944732 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.16505271 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.886484796 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.025821943 seconds)
    (58/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.841605435 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 6.972690843 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.891886298 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221218601 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.278849743 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.947197722 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.126336432 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.484459092 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.990026791 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.693058539 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246695308 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.091936454 seconds)
    (70/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.97354058 seconds)
    (71/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.393446709 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.898192906 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.454954075 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.951125958 seconds)
    (75/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.46136556 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.186267392 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.873935252 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.975375137 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.915085485 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.208610713 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.951888772 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214882408 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.916865322 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.583867617 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.063151241 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.478573265 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.891941189 seconds)
    (88/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.200787191 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.91556606 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890518799 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.037464475 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.064174249 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.968213936 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.996063645 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.007080109 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.873617961 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.933188427 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.098928834 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.900378313 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.145051221 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.632312157 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.6879293 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.791223251 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.023757302 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.072867075 seconds)
    (106/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.304661723 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.894716729 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.051811425 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.10202009 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.534077973 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.897306537 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.877315708 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.919663404 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.180796869 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.917974652 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.870749444 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.220388935 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.364257539 seconds)
    (119/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.020145718 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.054880838 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.339013172 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.910606797 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.049472918 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.004949228 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.789434889 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.164558497 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.906177679 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.882060754 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.182450998 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.091653728 seconds)
    (131/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.929674404 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095917418 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.166043761 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.045300311 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 4.878832181 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.149458335 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.255213168 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883178779 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.876050817 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.986936658 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.85846406 seconds)
    (142/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.630104905 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.122836745 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.249546011 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.908255209 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.468894036 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036051586 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.18671995 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.359173394 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.218400503 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207600604 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.552956735 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.878203705 seconds)
    (154/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.036307803 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.893612866 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.976102039 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.926574308 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.082377059 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.501212839 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.741351303 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.851079196 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.499952279 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.168715664 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.581868845 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.47105994 seconds)
    (166/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.046215088 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043837274 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.697908504 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.885775683 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.895289475 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.263704142 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.285261401 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.863181712 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.905276763 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.924492856 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.921385699 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.410735485 seconds)
    (178/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.009564269 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.996681896 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.878745101 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.937709823 seconds)
    (182/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.400706996 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.11974633 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.006048103 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.017130091 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.023243396 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.937606241 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.380129149 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.033426489 seconds)
    (190/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.527932536 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.052384294 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.251813033 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.899781623 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.918324802 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.995985302 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.169676974 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103373576 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.108762138 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.051204626 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414088636 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.024650927 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.521376402 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.073386293 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.192706367 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.852564712 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.002010053 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.942397449 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.337989212 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.119495074 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.079807449 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.680114956 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.096016823 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.529045399 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.915249401 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.420015306 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.908005891 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578768487 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.971176369 seconds)
    (219/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883182362 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.919981127 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.973229778 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.035700241 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.917230394 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.950425739 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.992495381 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.970324067 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.032203113 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.14426245 seconds)
    (229/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876339082 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.860466467 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 5.739027328 seconds)
    (232/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.247497462 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.914115119 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.775615087 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.908736595 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.781853425 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.8850085 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.867576053 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.557338382 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.887835542 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.887950581 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.34885423 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.527659752 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.278520346 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974288618 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186744169 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.879214393 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.423682254 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.973866129 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.049236589 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.881990769 seconds)
    (252/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.940073497 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.215808657 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943292342 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.699785027 seconds)
    (256/309) benchmarking ("sort", Float64, false)...
    done (took 5.718041986 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.906226676 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.886832713 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.886900982 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.177901659 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.964728083 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.266318162 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.13673279 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.155439801 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.883052041 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.187192044 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.163160427 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.094198504 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.501463216 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.347542919 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.052984432 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.386237736 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.968032071 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.77182724 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.019489546 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.077313635 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.949182821 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.790522294 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.182559823 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.981869692 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.959771708 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057048284 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.021489811 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.966299863 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.928930496 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.619850347 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.171193484 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961043872 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.165511229 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.91962492 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.978181084 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.0636613 seconds)
    (293/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076912756 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.081519461 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.171788949 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.179549994 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.587213947 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.248962255 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.483371592 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.260940504 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.953146217 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.845227419 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.914849316 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.976919905 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.861648467 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.215975578 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.86250282 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.767034969 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.271805624 seconds)
  done (took 1023.288142206 seconds)
done (took 1025.17955063 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.910320215 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903462145 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.8877486 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.909947048 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.998953118 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.922710164 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.898034157 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889127805 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.935485025 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.936499055 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.886710858 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.921789253 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.889799453 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.889107296 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.886854626 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902029458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.19546922 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.915220025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.906393381 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.896884691 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.905248821 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.888508827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937554098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.921928608 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.892191988 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.890812097 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.892753318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.909402907 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001251586 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.8927215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893094455 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.900927288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.197383205 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.914093601 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884624257 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.907798271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.899575848 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.896984005 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.892021197 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.922734968 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332987584 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.892494256 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888688091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886306481 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887478533 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.888363152 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.885881169 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.890745431 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897234505 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901970428 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.327301929 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.903583572 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.886278415 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883152199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.89675256 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.881396474 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.884448537 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897613576 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.900121559 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897954826 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.175923313 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.910128424 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.880532083 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.895725193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.886802177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.361770645 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.877729577 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.880306328 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322873806 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.891228492 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.357158684 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889951992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876203479 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889825302 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907431036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.182763555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.898903655 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.874021482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883632126 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.875198563 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.88590106 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888943363 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.880843436 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875871963 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890430011 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.910339256 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.886145044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879307264 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.88553987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.896565164 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884973739 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.888675714 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.879493035 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.871913266 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.8866141 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879513863 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.880227975 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879582803 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.881028139 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887468782 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.322145238 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899917928 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873728346 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873360536 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.875750379 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.891871657 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.321948614 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.88470553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898087135 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924010119 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.878341274 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.173466636 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907477896 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893223877 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.886593636 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.880403893 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871889291 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.173556271 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347608263 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899411685 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.879457006 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.876628991 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894018742 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878838507 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874856976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.185016513 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.905840006 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89343273 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.999499119 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.889586702 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.910764306 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878152735 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.881862149 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.91370517 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89471753 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.911180038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.882332746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894497797 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.895844669 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875231141 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.890865235 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889845986 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.880821458 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.884017907 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873808348 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.913299711 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89276474 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893194711 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90070224 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000753501 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.877738056 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.175164152 seconds)
done (took 295.840769835 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948129308 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.869418108 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975428629 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.877307714 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961579483 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.979250563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.874436642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.87498141 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874719803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.280633255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875145924 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.875387618 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.870532187 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.874404864 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960853942 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.878524893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875303734 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.222617735 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.878504437 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949388804 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879583936 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876335973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.878533515 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.265188621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.870275446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878964829 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.959063238 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.87865789 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.228221636 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.878326699 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.879707677 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.229578808 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980038457 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.896576304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.888974947 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.88547089 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974853793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882740164 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.974376272 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.962666183 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978142279 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.918724243 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.870847561 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875932034 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882141991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.880251166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.877029537 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.908437079 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.880448496 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.877769535 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.241382284 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.88992696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.87704898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.877767852 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877212263 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.911323655 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.877187105 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.881590758 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971344228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.88084421 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.961008113 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265281078 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263076515 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.87966528 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.87386065 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877995644 seconds)
  done (took 185.088106851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.948015605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.95248608 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948749269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.88437808 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.929563208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953311693 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884112282 seconds)
  done (took 15.308054315 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887250718 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880101781 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931191658 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930486288 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880915779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.046884759 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881172447 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89240525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.879512147 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.934212538 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881232144 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880354529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.887940646 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.880864648 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929220469 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893658449 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.997804217 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883200317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88154741 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.035217849 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878727916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.887479628 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.940046826 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.893441975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.882713357 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.888421799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.478214263 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88243222 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879963197 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882987627 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880291214 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.927526941 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883024095 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.875377335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878809609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.999087615 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.883198345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879158677 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882582254 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88130987 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.882227487 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883537648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.882861687 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879836109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882765329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.907287986 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882871358 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.882870787 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.883315107 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883603922 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.935144302 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88435239 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.879975226 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.882133779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.938498154 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889025502 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882880499 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.87903445 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.885740095 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877981641 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.034358908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928761696 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.88042569 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93001522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882685946 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87927343 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.878376867 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.878284548 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.973789864 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.878477668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.926166758 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.875048047 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035613388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.900873195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879764094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.878649501 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.878037289 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875770193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.871535215 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.8804049 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.869686551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.875153687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.880268536 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867595904 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867220109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983264329 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.979612345 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.870685326 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.881622288 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.875173044 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.865508985 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.922038838 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.867198516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.866788453 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919161752 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.980745565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.922165419 seconds)
  done (took 206.798096862 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.871547739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.871311155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.865491706 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878969973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.864036023 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.864879895 seconds)
  done (took 13.00952067 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.863585025 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.861841092 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.860977073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.861155534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863255181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.858202452 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.860174233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860601957 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.864349116 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.858850234 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.856508846 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.857563279 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.856925037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.856475277 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.860794869 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854200336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.294849874 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.85153118 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.855031052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854455818 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.001429973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.851489662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853732941 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.854342565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858427028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.849521765 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857951949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.85056815 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.850346479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.859133872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.853292922 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.84771649 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.850067509 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.85398839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.852914664 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850858579 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849730263 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.847965046 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842662869 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845749243 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.848322359 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846311369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.844217968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.84524804 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.845855756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.849032454 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.850357143 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850095216 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.842538843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.844698688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.843842329 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.84416132 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.840573486 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.84239511 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.843042977 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84597992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.846936617 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.841435311 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.840099157 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.842483247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.841920792 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.840793015 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843778852 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.84614109 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.846835536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.843518519 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.843186554 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.845346973 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842200934 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.841137862 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.843866744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.839091728 seconds)
  done (took 136.59980311 seconds)
done (took 558.625074432 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.141624288 seconds)
  done (took 8.911774126 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.886773779 seconds)
  done (took 8.763574806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.393437086 seconds)
  done (took 10.163996665 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.854591043 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.856768857 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.844557688 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.844226085 seconds)
  done (took 29.181450441 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.927776585 seconds)
  done (took 8.697434023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.846705546 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.830581037 seconds)
  done (took 15.478520063 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.86149438 seconds)
  done (took 8.627432359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.243236167 seconds)
  done (took 9.012088504 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842477955 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.825005639 seconds)
  done (took 15.445682434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.81122956 seconds)
  done (took 8.573338144 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.467961569 seconds)
  done (took 11.240187493 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.838488451 seconds)
  done (took 8.613644365 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.847833479 seconds)
  done (took 8.610120923 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.03584074 seconds)
  done (took 9.797626771 seconds)
done (took 162.887117961 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.830094172 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.831525562 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.830342525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830371695 seconds)
  done (took 29.084291442 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.865979671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.865569712 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.867267104 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.877577032 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.868816607 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.86790944 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.858694522 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.858350616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.877855333 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.869586953 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.868389056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.868208333 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.865412843 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.859131168 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.868107633 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.86882099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.877153492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.867934632 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.859504076 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.869040009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.834320503 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.877996184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.869873371 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.834569697 seconds)
  done (took 46.527547988 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.031228291 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.904921039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.987722708 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.888091591 seconds)
  done (took 9.574480452 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.884889865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.887411406 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.897341194 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.937768018 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.963008061 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896586153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.861926887 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.856145651 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.841436733 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.887060079 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.962541161 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.902546929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.970505109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.834594824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.04160107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833958036 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.834679296 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.887009984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.938499111 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.951306032 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.834557602 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.886979582 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.886930478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.900181533 seconds)
  done (took 47.342865595 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830001429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.839069348 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.83665132 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828429163 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.827930477 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.828802715 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.834295639 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.830929288 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.846272248 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.825937216 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822941319 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.825539137 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.824400925 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825158014 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.823410206 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.835356671 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.836764088 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.823179483 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.827441607 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.829197076 seconds)
  done (took 38.36298668 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.816523667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.670713953 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.169405225 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.072258179 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.815730717 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.816319813 seconds)
  done (took 31.11348338 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.836560677 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829081626 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.8230952 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.880603464 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.962318681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.831084044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.825400198 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.835170655 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.87107298 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892275612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.842833566 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.851488973 seconds)
  done (took 24.033880538 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.821549202 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.819968701 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.820996162 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.837550212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.836136004 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.831570425 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.831845038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.818585204 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.839218331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.843959935 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.831630219 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.836892195 seconds)
  done (took 43.726583581 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908751215 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.863495232 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.850991542 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502820897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196296269 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03020026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345674523 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155191063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.822592628 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093392589 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994012583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925404738 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074556332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.311350541 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855582901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300336122 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122381178 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031562649 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844505938 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601659568 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88526681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.003517055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.677732349 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880546575 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030758132 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.947696929 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.080612598 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820339954 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959786116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859279371 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831173752 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820194528 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094027425 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19987514 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924288393 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830998723 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438960958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.533488026 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.811613582 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.615791439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.690638076 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.961584767 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832347537 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820773974 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755961286 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981869062 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196341772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.827375592 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.532011687 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82104283 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832188231 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909725185 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.825784474 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.63664772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74179592 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824799594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.819404666 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828323788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395485561 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050212046 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013697643 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.796365093 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.914426045 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606795065 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229430457 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.972172478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.825315621 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824522665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757293662 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.688960556 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879233534 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171384571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.84310246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472774055 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145175576 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.054089587 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76518565 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092320143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354331485 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.797336687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050767925 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823945954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759217754 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.857372129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756164948 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103455828 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857881351 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.562711859 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860880643 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155797615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83435627 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844372485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847476454 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047484396 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.709472889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823801522 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.784617828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969556626 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846316434 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157839437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758185248 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.828578271 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080120176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036089754 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895069254 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.34250225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987820484 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391950026 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.877598044 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981791936 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87416652 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.104063908 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885485438 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044884865 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88315206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82790546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139080539 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42356052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.965344873 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.039534592 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956604848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144903252 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853627166 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893593377 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837956222 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830605139 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715326568 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38511194 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.832199908 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.832411428 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898570004 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880734826 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.833651802 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778110847 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.462812059 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038674183 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.846816012 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056287969 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.412349918 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144698765 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766246293 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160815539 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924974963 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.055834666 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.49339469 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.920815773 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094265729 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904904222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.947251553 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882366633 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852658558 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931955245 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857241213 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.987358633 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128547132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.837295196 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.837265425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705185141 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873866684 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835111393 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.841659654 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588480956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118891196 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860196291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843125372 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725371973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850973513 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902265569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84251392 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846818007 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.377446636 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564883237 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843466726 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.428827261 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062665313 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848380236 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.623861881 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95290127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.921305256 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121209248 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899926878 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.77356735 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.551422404 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.532181145 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840419914 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775611986 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839371779 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848753029 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850471208 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.037352168 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124950655 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88593404 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623692525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.885343069 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853092018 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.846593974 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843541839 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354281173 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074313049 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040246173 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890587388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987387454 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.857802673 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777563051 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847242365 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84805699 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843009627 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843428899 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876492652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.630742581 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220258697 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105873461 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.455709206 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859372107 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.669007891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.904589159 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.905235518 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.819651367 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017798037 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.876738893 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992181642 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.872465064 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.723535991 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.558610254 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432442472 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185006119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175492243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317039018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.087848171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.893570919 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201191429 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796907158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.428047074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921268231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20233781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806651197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946876554 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.524229373 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219202452 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877806147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090414996 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263615251 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.751559795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023187224 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078948691 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898194673 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.027596814 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826017925 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.148871682 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004191964 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.696173532 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082274174 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194949213 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.679809124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.004916809 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.864209046 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552609244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946580123 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.573058102 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.034276953 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.055693052 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932562719 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35160399 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869728923 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088861317 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221372811 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019490578 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.986584084 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800160667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875686389 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874706155 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.864570373 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.863666323 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.742164288 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.120891042 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876266793 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79950995 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981563177 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164109583 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.770386837 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.870680708 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864736769 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177043058 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407978761 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038044331 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.968199268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386089493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874122997 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800718386 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799698263 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.558874208 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.87083203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84056148 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072096372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.96446971 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785539698 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948542978 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945854697 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121733313 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.880280307 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146042143 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143130622 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562983593 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89156983 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.966191259 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678940706 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.991335672 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.86738768 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102926897 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619996993 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093339467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.89431188 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817877188 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.867198821 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081556048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867674312 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935189045 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116210435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.589635262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.877521581 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346347859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970661048 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.953815709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957751824 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.987452224 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904777073 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973801648 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905419386 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.905367083 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90536465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941059476 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954322012 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.034379546 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.909138617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986050193 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123143943 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422129119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.901677582 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177793626 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264368292 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237279916 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957239365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895087143 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904850319 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832223653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044776343 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.12230505 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169411793 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.02624905 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.011152275 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921197041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713330566 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119834567 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138329365 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172409139 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.790895206 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411798005 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937322328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.896402122 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908090119 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.107522834 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108066223 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194891565 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038915778 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.977697133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260825435 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173112312 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8974675 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897418279 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487258397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.903460871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.720807881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.952458401 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97987381 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205085129 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922621832 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29669193 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936212584 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.068210803 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.429897819 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706957421 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203426337 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90372764 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975032923 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196414022 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315866971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227521271 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980949509 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923203747 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.023308029 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060994955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.789975636 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915819772 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913877642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961139323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.623597978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922573642 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204052342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225967142 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911649379 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.781951581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939654162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.923659295 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139860798 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191611375 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164200685 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924381967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919300364 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.729605013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200521092 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976062774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848185208 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.918808333 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015090588 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167157076 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9350231 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.369459164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629236577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184662665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.914374808 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937352468 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.081233755 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298159446 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252189487 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.455824413 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123446335 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507892907 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.497264569 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216902813 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922172687 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.077653619 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219595484 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920675436 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.996202096 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955504273 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.194078445 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232506037 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.930475354 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838975544 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.898216063 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267332883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486618958 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865526187 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934065854 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.987427478 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92851515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060614133 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936334471 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.815455058 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090881494 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.687412324 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205458677 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.93033327 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.919322301 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.748562451 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.240695908 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961302455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07411177 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927644889 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.660760238 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.290151676 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184818602 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.013739465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.933481828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.933262489 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930503394 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916743809 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.1265726 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.124484643 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202040435 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.031976593 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.965074546 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932863519 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146696807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142005117 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.982457714 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084289341 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.012876697 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970040915 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833721472 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432623979 seconds)
  done (took 1676.954277834 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950921663 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.95704291 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.937316107 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.986974099 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940617102 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972996784 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.987110207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021749293 seconds)
  done (took 57.612853675 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.929412465 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.122822398 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.939463259 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.930782451 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.938821974 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.931108315 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.098151248 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.938461406 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938749356 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.942627143 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.932539075 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.927692786 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238873119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.953610509 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.932326149 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.916631367 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.937603179 seconds)
  done (took 75.410576509 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.932705524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.023745538 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.956378962 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.948815916 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.885511288 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948346589 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.710976582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.962659603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.930427181 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.159343676 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.561276217 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.94358616 seconds)
  done (took 90.822821178 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.942626903 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.940466774 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939672535 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93900874 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.938223151 seconds)
  done (took 11.564199474 seconds)
done (took 2183.919735957 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.17521404 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15918526 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171021045 seconds)
  done (took 6.189885307 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.085796415 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.135502341 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.25458979 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.261735274 seconds)
  done (took 10.605767175 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.220172058 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.305386522 seconds)
  done (took 6.389594522 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.329741222 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945767122 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.318339853 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.934815236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.935197655 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.935774223 seconds)
  done (took 22.676119265 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.941453826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.944520476 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.941897639 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.944580956 seconds)
  done (took 9.63717951 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.921032639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.613413435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.922229957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.936962296 seconds)
  done (took 21.257685892 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.690705057 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.69907774 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.686114681 seconds)
  done (took 9.94079278 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.517999105 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.840573836 seconds)
  done (took 9.223158942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.199274561 seconds)
  done (took 4.063704314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.072988493 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.250908236 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.467767171 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.466572572 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.561025429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.678049233 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.263234575 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.18717564 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.343305419 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.384717625 seconds)
  done (took 25.541046342 seconds)
done (took 141.15264709 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.32140972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.173050905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.13834612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.279985002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.16022671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.138918431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.151398568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.262059375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.781609483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.781151637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.273850309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.161812406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.314138701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.179489643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.315339318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.179614789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161392079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332942433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.968702082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.206501228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.150905256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.914859763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.11679809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.923458842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.159001551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.091572415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.493882568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.178835305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125534066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.499865328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.089029046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.361917651 seconds)
  done (took 175.252849638 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.848354748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944904292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939001569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.939054832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.520752085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940285993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.938515742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939078462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.350672371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.327730717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939757022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.513429051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939084586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939618228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939056748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.939326481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.464303933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869014414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939185523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938982998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945693964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.447340726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.949872127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.486268863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.481168551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962474781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.940961263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970912663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947917921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961656463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.967723035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94178791 seconds)
  done (took 211.983362113 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.944048696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.947480006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.949669481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940606685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.949878474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.952187377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941066513 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941120937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.720274152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.715198441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.951440161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.948486136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.95040514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.941199596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957689569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.940496016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.951291114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953803774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.950588127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953303744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956796981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.863384888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.962995787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.856911245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.951847511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.951304836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.943153624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953379535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947630672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950264399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954405474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.942752097 seconds)
  done (took 223.637087813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147317724 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.952071517 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952634932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.905197353 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.951793023 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.952242196 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946640733 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.141000103 seconds)
  done (took 19.834156506 seconds)
done (took 632.586053491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.371988681 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.212651193 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120669922 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.977734518 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176736875 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.006172984 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.974336858 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.034857506 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698873534 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.034340783 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632481826 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.988473985 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719681798 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.995682846 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.103374909 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.031574791 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.510393774 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595944307 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.154215893 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010047833 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.138943588 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.923931056 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042238786 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.722520375 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.736797218 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969877179 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.129132118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.507515364 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.980962112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.139381491 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.680364326 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.338378135 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.978907212 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.970098971 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.024160936 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006592675 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306928079 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.977278698 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.096559658 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.73449326 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.998806177 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.583681918 seconds)
  done (took 106.209884132 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.941078174 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.940845686 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.938824946 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.941233302 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943031365 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.942389604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.941921805 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.940418382 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.941369539 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.941170953 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.940969416 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.944102722 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.940556413 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.942774254 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.941861739 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.941194872 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.94036148 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.943130407 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.943395824 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.941312591 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.946669582 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.950400423 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.958830288 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.940467651 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.942818386 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.940816243 seconds)
  done (took 52.395867555 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.956223594 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.09752452 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.177577711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971728732 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.955724101 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.96167951 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.973917153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.961817936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.958772133 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.960205059 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.048179456 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962316497 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976132822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177943785 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.968394877 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.957102156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.956315628 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.95895476 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.107300708 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969385978 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.976394994 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.962111178 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.976809759 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.971807798 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.95986267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960439324 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.962512961 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432877919 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.967867437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.048279304 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000237857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.980097469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.396452597 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191029308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.008197297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.965048069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958899266 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053880876 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.963774455 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.960768795 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.976789449 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.964306145 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181578024 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.454870908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.968852703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960803144 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.444197603 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.062732197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999775121 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967058394 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184491296 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.971422484 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.960708115 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.961412583 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.997067163 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966583628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.95970679 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.324459349 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.968492723 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.977178717 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.963599256 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.960075789 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.112950986 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.966739019 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102981578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.965641707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.967120031 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961668233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184608737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.97256218 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.4661468 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.968841557 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.961524645 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050664978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.108634716 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.463393588 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.969826649 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117165932 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412368121 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.982470395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.967302574 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.425043875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.987621679 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.968136063 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.961608663 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.961958569 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.960727143 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.005848788 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.976673858 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.399053704 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.466747917 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.334563722 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.985726721 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.976475334 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.962351012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.325587483 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.968893658 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.96285248 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.181206668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.474884741 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.972121284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.968592932 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.450991649 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.97585553 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.981760072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.971672444 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.186652156 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.973565855 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.004665697 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.960765289 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.967611195 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.963786236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.980950046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.96904309 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.960950791 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.439168367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.068542085 seconds)
  done (took 242.597264309 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.957158898 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.969519103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.956016635 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.954649668 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.95574665 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.962162723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.956020401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.95383098 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.959807116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.954847738 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955094691 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954808366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.957431712 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.964412455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.459744526 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.964376311 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.611559783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.956275979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.958925811 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.955289649 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.636040258 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.962133454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.958342423 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.954121865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.958495983 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95980766 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.965386562 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.992658512 seconds)
  done (took 170.590556882 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.96603721 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148493402 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.98341616 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.002385383 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.968602865 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.964323583 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.989212864 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.981164507 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.97189971 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.962561592 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.962369708 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.028936999 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.979135937 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.09951258 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.994604126 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.996587995 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.067681387 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.96889393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.964613462 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.964323588 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.995103965 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.957458509 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.026461087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.095050374 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978520412 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084010096 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972209694 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.965267719 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.966335452 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.084104218 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.978019429 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.025829722 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.996995966 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.982375322 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.087773473 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.086398476 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06859336 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993962047 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.966549287 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.964231235 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.964624609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.951482378 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083845046 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.981301226 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.96853079 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.072578926 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982891984 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.968709274 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.974707073 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.963155361 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.978094972 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.985588185 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.034281514 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.098302282 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.997693328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.989045849 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.992315533 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.251703321 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.97723652 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.065393068 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.955160382 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.08485583 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.984521445 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.953462061 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.966437038 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.973875401 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.994723689 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.995277549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.070218353 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.974753779 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.06911544 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.997561039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.970181513 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.966397074 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.966672299 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084632562 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.084450583 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.999370932 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.000335245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996319925 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.959614588 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.968150248 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.95638905 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.986010152 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.969466654 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.082923873 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.089220896 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.972732632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.968963107 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.968468727 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.96832425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.99297909 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.08909859 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003231999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.062701144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.032633814 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.043508907 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.984583914 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.981800256 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.969503489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.031933801 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.982662221 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.979812872 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.301809071 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.041625755 seconds)
  done (took 212.886543669 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.42240285 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.018209574 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.02612867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.256322638 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.397593951 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.793350936 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.013101353 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.01378902 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.041982427 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184485389 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.069997378 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026486244 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.000795208 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.98802424 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.017472155 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.03535047 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.019353627 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313362943 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.147241654 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.080588195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.996568747 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.278328811 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.334001442 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.388769201 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.046015746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.329801021 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.68052541 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.25674259 seconds)
  done (took 64.074327559 seconds)
done (took 850.624960867 seconds)
SAVING RESULT...
DONE!
