cset: moving following pidspec: 25976
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.19273247 seconds)
loading group "string"... done (took 0.536716506 seconds)
loading group "linalg"... done (took 9.814769392 seconds)
loading group "parallel"... done (took 0.167686826 seconds)
loading group "find"... done (took 2.516043835 seconds)
loading group "tuple"... done (took 2.326019461 seconds)
loading group "dates"... done (took 1.442881668 seconds)
loading group "micro"... done (took 0.574481574 seconds)
loading group "io"... done (took 0.571806443 seconds)
loading group "scalar"... done (took 54.56083829 seconds)
loading group "sparse"... done (took 13.276759007 seconds)
loading group "broadcast"... done (took 1.249416913 seconds)
loading group "union"... done (took 2.640131682 seconds)
loading group "simd"... done (took 3.566155724 seconds)
loading group "random"... done (took 13.43347321 seconds)
loading group "problem"... done (took 2.274358841 seconds)
loading group "array"... done (took 23.848361932 seconds)
loading group "misc"... done (took 1.090660481 seconds)
loading group "sort"... done (took 3.754975825 seconds)
loading group "collection"... done (took 20.818454429 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.77344598 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.163746661 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.243614848 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.303890739 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.303563462 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206667831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201251849 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177398886 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.657796847 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.239797463 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.181438645 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428033272 seconds)
done (took 6.693904721 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.283718202 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.132408318 seconds)
    (2/2) benchmarking "String"...
    done (took 0.2150293 seconds)
  done (took 0.993575161 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.145120619 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161543029 seconds)
  done (took 0.9561146 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.127353765 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169104046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.146267064 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131977956 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147973496 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.131264737 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.14805507 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.146589381 seconds)
  done (took 1.670198564 seconds)
done (took 4.682162585 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.534234835 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.903126718 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574762405 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.212592677 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.358752535 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.318181104 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320825714 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273196892 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134360242 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101577861 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.226774578 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.45292254 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.430739831 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955889223 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104633976 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153024906 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.172928206 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.814956496 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.125794698 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.159965244 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.540080621 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.264247011 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.15955786 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139642688 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.305747749 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171841266 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170804332 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147139661 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.716099094 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.175334448 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241861343 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.12609334 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169856865 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199393722 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.283467192 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15534231 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.733618151 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.247850582 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129462133 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142696148 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.731513344 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.166646471 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240316803 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148758023 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120067852 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181334442 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.146420155 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.126135523 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.157993275 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142354695 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212156937 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.491289011 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14826208 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.229818052 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.15225295 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.736185586 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.147685401 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.333748446 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181860137 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151168944 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.119766976 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.14890469 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.200966198 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.140983012 seconds)
  done (took 22.77994164 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.208056904 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.227086279 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138391901 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.185428328 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189796551 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.13915764 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.131926204 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137942751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157834107 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240308981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.184386506 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.236646503 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.118078982 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.150736277 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.197063816 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.278882391 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.172942523 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.152754201 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.153908329 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.155318774 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.17040023 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157434615 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.137598643 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.153668982 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214392626 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247103839 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.152505357 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169212859 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.14787069 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138760103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186691408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.210109749 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119802804 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147890804 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217899008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166362566 seconds)
  done (took 6.97231708 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.267791805 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.146245343 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.276207191 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233729303 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.190583035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.221723028 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.22645219 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.32087607 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.241672282 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.248054029 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.542131859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207919317 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171967678 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140843749 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140666911 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.13063407 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.121281484 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888086607 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21772203 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202460103 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21780116 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154021262 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.127061339 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.412993579 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128471714 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144991901 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137883665 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115570143 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.253802945 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1373843 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.526492859 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144441622 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139978484 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176416289 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.25312772 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127246 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.182340017 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.164910357 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154739301 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.128305143 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.259436203 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164797423 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.985616327 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125267815 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.144186142 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178428556 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.165369144 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.156893834 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164524344 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178219311 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.130633581 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168560332 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.924148594 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130461423 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.243109477 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.201901234 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148908391 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328812135 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.152887808 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.165249296 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152615218 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262595614 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16934416 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146445299 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123700577 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157631427 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.138372554 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147782829 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.546191663 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.138456713 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154087471 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145096943 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.393569811 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146011933 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129612292 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.166081106 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.127918921 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140236059 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.129258336 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.1402619 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.13195868 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13940418 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129616762 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144710511 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.122214563 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206338878 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.146465693 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167054135 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17007882 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.135987265 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.145277203 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171187411 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126356431 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.146589451 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203535031 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157249745 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.139498606 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155596113 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.174171729 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147925794 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.2757806 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.131125892 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172233983 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.148179179 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162525416 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.16365433 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127192781 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153100126 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12507191 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14840735 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.194781823 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.14980236 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.128464171 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.153169617 seconds)
  done (took 27.807669747 seconds)
done (took 58.206852354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.423150877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11464328 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114686232 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.136658788 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118495585 seconds)
  done (took 1.635217579 seconds)
done (took 2.344532569 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169275716 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.263564522 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.198212077 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.168803589 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.143907825 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16800244 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169811538 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.150573128 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169281653 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.17370058 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.153460297 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.194934356 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.183488208 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.161592406 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.158350374 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.209568061 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.154195097 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169604458 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.209294143 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148776391 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.163506546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150707503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169586579 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.138807875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1704223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156299275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169139176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152901707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.163246457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.138620979 seconds)
  done (took 2.4406633 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.168593436 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14949415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166346084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.141575057 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166558541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.137805653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168407449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150544912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.17366091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152616335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.165900147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136920554 seconds)
  done (took 2.429236637 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.151768252 seconds)
done (took 9.303345488 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80952054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.984532112 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.2027695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.344984163 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.710101962 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.322118476 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.689384802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.252194989 seconds)
  done (took 18.146992855 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.214113331 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.15556699 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.142322289 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.157940126 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.140076821 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.159107873 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.140286484 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.157601256 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.140178441 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.155714704 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.140771323 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.15733586 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141352262 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159575321 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.142931094 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.160260533 seconds)
  done (took 3.249144881 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.163273346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.180595661 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142733094 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16497454 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143360829 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.164051029 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.1471046 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.167410954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144243134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.160724279 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.149367947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.164160401 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.14712653 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.160669524 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.146051743 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.169800853 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.159251117 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.148498073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16498781 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.14849528 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.166768414 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.145347044 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.162836978 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.147716061 seconds)
  done (took 4.55297423 seconds)
done (took 26.671798977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200598414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152286824 seconds)
  done (took 1.082255851 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.19822835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.21902031 seconds)
  done (took 1.157855199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.161183137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157768876 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.172671399 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.170646631 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.14036764 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158395352 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.167418147 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.159501219 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.141826974 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.16212327 seconds)
  done (took 2.334937215 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139388326 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156642964 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152221242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.210264588 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.148859153 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.163082261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.145647711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.162095264 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.145975965 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.158114659 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.145105953 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.175582733 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.161501543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.16097459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.16222929 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.146336765 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.166793836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.144337 seconds)
  done (took 3.588914414 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136064859 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137132173 seconds)
  done (took 1.019909654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.138540522 seconds)
    (2/7) benchmarking "second"...
    done (took 0.13653503 seconds)
    (3/7) benchmarking "month"...
    done (took 0.155408659 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153727719 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136798751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.139153939 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.157566196 seconds)
  done (took 1.763346163 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.631838169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273933438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.431328314 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.129906044 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146392848 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.381172634 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.162251778 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111556574 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.131139162 seconds)
  done (took 3.176812428 seconds)
done (took 14.864641796 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137141322 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225298412 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.654378885 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.15985727 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.156456838 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.200339722 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.354293937 seconds)
done (took 2.640319764 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370181502 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.194755144 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.125924463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14486032 seconds)
  done (took 1.584449461 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.129932444 seconds)
    (2/2) benchmarking "read"...
    done (took 0.149585991 seconds)
  done (took 1.035915252 seconds)
done (took 3.381049643 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156026336 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.158049358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145104905 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.162435321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.146121863 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.161018521 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.145042257 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.158927053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143997711 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.159089295 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145035273 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162369251 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.142754746 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.16213647 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142995279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.162823708 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144009305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158907148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143171489 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.163185556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.14550733 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160160171 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.145463889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162558521 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.145757222 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162049587 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.141939069 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.159008908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144421228 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.160908171 seconds)
  done (took 5.338608632 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.165996039 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.134094496 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.155894685 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14792775 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.158015206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141188415 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155558818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13929858 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159702222 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139858358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.161242711 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141298904 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.155217783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.262830909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.159425929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.165320464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167565931 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.139008948 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.156313592 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142099145 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.162084508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.139365557 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.159262711 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.141706847 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.140941736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.156069008 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.143018117 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.159011073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.141937393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.158407085 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.144607006 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.16060073 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.141117107 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.169702446 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.145203032 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.159252305 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.148998766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.156681586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.144780003 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.157097841 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.139978904 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.15881866 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.138540243 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165790705 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.142016454 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.14236992 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.156896768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.143783089 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.160440025 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.144975419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.158252317 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.139128446 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.163359391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.143682168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.164092445 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.138579983 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.160763041 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.139568517 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.161680197 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.14234359 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.157868469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.139805138 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.165009601 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.143270174 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.174485387 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.150069363 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.157512837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.145148346 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.142597323 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.167670693 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.145395305 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171459024 seconds)
  done (took 11.806415677 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138469144 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13717289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158360501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141603482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162034642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141371678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160952241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14377792 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159617714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142761171 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161104635 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142086993 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159971111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142844143 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160035854 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142692098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142367266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160871365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.142699152 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160667358 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143138524 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.16130459 seconds)
  done (took 4.078562574 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283900628 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14441173 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20794893 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.169502281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156468152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169066541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143792867 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.168057964 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147644334 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.17202013 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152547751 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168089531 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.159438431 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.168098891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168729837 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.151436856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.166055893 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.153462531 seconds)
  done (took 3.823940251 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.137856777 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137515951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158175003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138594161 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156380012 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136786598 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.156553288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138562663 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155396157 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137933742 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155807244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138907608 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.154998132 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138119659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136739875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156626692 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139253183 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156422196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13905246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156116012 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137652071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157240806 seconds)
  done (took 3.999483384 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153751395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.15866019 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160567136 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168836903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.146202321 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.16493934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.152724868 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.16557329 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.151496081 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.165254395 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.147172207 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.164837721 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.161214495 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164392832 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.15272822 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166229868 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146776206 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16695489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.146028207 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.160975568 seconds)
  done (took 3.944478345 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234860453 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176482987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176613939 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16427082 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175648803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157113415 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183135649 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156300393 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174417362 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186253085 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157086666 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173446149 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164335213 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.180317483 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156219726 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183691027 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.181308531 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16464894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174846815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156689339 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186426989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155652825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183051211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1763762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.15746779 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174985659 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155915916 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.180504867 seconds)
  done (took 5.627165787 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151588341 seconds)
    (2/2) benchmarking "in"...
    done (took 0.16766755 seconds)
  done (took 1.102629811 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142159488 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141264263 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.15978638 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140388942 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159545708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142657108 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.160642215 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140907025 seconds)
  done (took 1.969672541 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.206342162 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.228334693 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.164775772 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152881173 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227885683 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.222281479 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.221116596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.145345159 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.164216832 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.134438325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222685232 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.134398306 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.161892515 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138154021 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.161288457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147202029 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.162138565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149793699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.166584941 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.14343486 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165834147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146541959 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162376305 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148945128 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.155665535 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.144195921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.165458261 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.169307145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14040305 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.167076554 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.141588466 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.160844267 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.147173185 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.170918871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.147602988 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.235375462 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149959852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158096292 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141940396 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165066731 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17365658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160324437 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.144261991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.162054266 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152549706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.173794586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.152805465 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.170726809 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.14161291 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.164633296 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.146503477 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156505377 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141774733 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162263232 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.142794416 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168136116 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142226396 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157665301 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.138335678 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.157021504 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.139225037 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.156113148 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1626292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.145905635 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162543295 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.144655476 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161375759 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.14402432 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141426783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.162106578 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.14178926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201224332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.163644553 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.147089166 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.166188172 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.144268835 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166172458 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.150391611 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165791754 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.149973611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.172603863 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177381774 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168937195 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139691926 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.157377765 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.148359788 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.161279937 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.144423045 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.153843516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1524513 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.16285828 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.143125812 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.154186088 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.14096178 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.15749817 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.146667533 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.15310243 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14361987 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.159219968 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.147334238 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165402667 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.142275914 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164550953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147063324 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.167040445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.143538225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211749413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145202892 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.167955995 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.149504347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17523185 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.140727952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.162933778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140872593 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157192545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.139434142 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1644867 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144306829 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163322794 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147211877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164972026 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145143247 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163880896 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.14329399 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.157423789 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14734681 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.170305107 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144830009 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.166576141 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.14619415 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163285359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.144037799 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165170445 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.142199508 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166737124 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140341031 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.162325111 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.144520334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167632421 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.145698555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.160296222 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.143304047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.164931449 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.145192556 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.165834147 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.144651635 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.158637492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135031906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.165486546 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.139592053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163389982 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152834869 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159250559 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.147948563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159165003 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150144791 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.163156432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.155413409 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17351131 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.155232938 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171467266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.143485774 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165419709 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.148835966 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.167738369 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.141175425 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.162778312 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.142638321 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.168910725 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13624016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168276776 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.14032797 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.1677735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.156874627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.173682631 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.15528078 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.1776434 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.18900944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.183107712 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15643819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.171117011 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.152708455 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.174986707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.151801496 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.175322085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159079098 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.178182854 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.152302887 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.171604364 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.158957574 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.169319996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.15477897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170679525 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154371586 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.159550945 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.149966836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.158218583 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.149863889 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.165143975 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147839889 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.168196599 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146663483 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162051263 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151607477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.161607143 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.152141764 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157792622 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.150328753 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17329173 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.153038456 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170431938 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.15543918 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169972593 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.153918525 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176541654 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.154765212 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.173271405 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.154284983 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.165993176 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.148375642 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.180761394 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.15744111 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.148058702 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.172745221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.153002557 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175192181 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.150747382 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.167682217 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.155620837 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.177750397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.146895775 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.175881863 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.16767216 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.152748335 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17728267 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.142757539 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.161945803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.154852303 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.170757259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.151152672 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.167255068 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.148400435 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.171107443 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.153288907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.149425915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170020154 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157725225 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.170478662 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.148544867 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.170112275 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.151440836 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.161940566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.148906156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.169899818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.146047482 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.167925963 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154126443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178419755 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.14976262 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166521874 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.14951168 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.174052301 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.152153636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16430595 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.152395427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.165362718 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.146363096 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.172485831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.146126474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.174304637 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.145923025 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.175921044 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.146397667 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168974491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.155851733 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175404009 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.149825128 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.180035534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.186823408 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.149139845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.165377455 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154042354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.16951185 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.151935522 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.167552033 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.154949662 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.169187297 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.154835611 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.17214298 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.150601274 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.148899521 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.181844632 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.153697477 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.183880296 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.157888374 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.182450715 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.149963693 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.17847095 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.151474151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.181387172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.146602022 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.17730907 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1522225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.179199114 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.173414789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.154522163 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.167849487 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.147891852 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.150754645 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.180691274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.151065579 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.179649312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.153874176 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.175047469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.172066434 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15192309 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.162014178 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.177333235 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.161176641 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.176679381 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.140953748 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.16381748 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.157072558 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.177484512 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.157857294 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.171600872 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.158594469 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182720303 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.157421974 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.175250847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.162208825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.185007465 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.161607212 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.181690772 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.148054162 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.174885159 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.159869213 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.174971692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.156663218 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.179811833 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.148806283 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.17911328 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.160295873 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.178950898 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.153401491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.170040478 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.15459452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.182966772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.159069739 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.178849629 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.155766316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.177093819 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.151822519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180033159 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.159723733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.178979394 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162013689 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.174139462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.158722279 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.173404523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.159462876 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.173770701 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.150181248 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.163709226 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.146073534 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.176295533 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.148001503 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.177496174 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.15835226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.167490642 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.155855154 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.177594581 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.148454423 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171195723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155185936 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.166431499 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156382526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.167946217 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.148740632 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.173612231 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.162022349 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.170440599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.156945237 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173277621 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.159933327 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.16728077 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.153062969 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166982128 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153380468 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.170838205 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.156889923 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.148502543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.17211253 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.14149879 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.180124023 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.153579935 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.178106797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.146133527 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.17222665 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.150417731 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.179143172 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.163179829 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.174873914 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.165018121 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.182868017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.152205249 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.178173076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.161786775 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.179899273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.164165988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.173086256 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148030975 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.161755067 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.171953082 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.150573966 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.175220466 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.149620563 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.141642803 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176283101 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.151912474 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175291076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.15107375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174394034 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.140753024 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.162517873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.149266677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.165656471 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155234265 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173617749 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146289832 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.168542173 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.147665146 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.17108258 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154182386 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.164482858 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.143605692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.172144238 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149393159 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.168095188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.142573228 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171689291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.147387108 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172052326 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.14844255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.164325505 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.146656778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.176107869 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.14574074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.167224268 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145402987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176826955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.149500296 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.167521023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1414499 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.177331978 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.15108695 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.175877882 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.144268626 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.172524244 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.147406664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.181628823 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.159826959 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.173128929 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.159816762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.181074213 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.162594698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18733744 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.142637203 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.173880701 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157288996 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.18161276 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.176535927 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.159701803 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.15177803 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.187244063 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.163326915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.185544894 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.14559121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.174221247 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.158281162 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.173526396 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.154342602 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178386442 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.15106062 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.172292859 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.163178712 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.184628926 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.152543071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.175897857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.146841089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.184629135 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.155024113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.183107223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.146464086 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.167912483 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152505986 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175334657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148783165 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171683145 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.152678563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.17331352 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.14505839 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.170293932 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.155709396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177479204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.158036019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172180834 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.158398006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.176049483 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.164508629 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.17265345 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.157189332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180062632 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.168187449 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.183475496 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.161062311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.187402741 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.162762038 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.181604309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.168033099 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.179233895 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.162526463 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.190218672 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.170380326 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.192333815 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161839924 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.176570568 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.160263956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.172320865 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.149387293 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.180792125 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.166432827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.184093661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.157075072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.169676046 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.161584025 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.179472055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.161908228 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.176445134 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.158394025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.184363179 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.155655758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.18015161 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.155792926 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.184120481 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.169153983 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.180435934 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.172655126 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.170926135 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168287182 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.185970576 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.169552008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.179323572 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.156632208 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.170846935 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.1584624 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.182441426 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.16765484 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.178034372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.162012781 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.178825744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.160312425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177967114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.161042616 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.187484596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.168660205 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.17815401 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.164861467 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.183380023 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164224305 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.182360899 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.167075576 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.189382183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.16186346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.190829364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.166914312 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.180933902 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.16030593 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.183696265 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.163061727 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.174382092 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.167994477 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.182113871 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.157224742 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.163301911 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.194415156 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.160977873 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.194163727 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.167897259 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.185118582 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.166198439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.19590927 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.162436508 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.186674157 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.152987471 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.178906689 seconds)
  done (took 97.930634966 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200660364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182094036 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152972665 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176933883 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172796625 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181858112 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.15463831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173981203 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154326049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187494583 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153306506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175286257 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168417157 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.201111887 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.199201169 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.165622249 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178180899 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.166519569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17854994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157467161 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194615949 seconds)
  done (took 4.559540846 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.155125662 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155267999 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.187150125 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.16396715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188350837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.162974286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.187321725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.165293227 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.185093021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.165897144 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.181564848 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16541049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.184131865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.163534693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155805776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.175712917 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154448272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.175140568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.15490671 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.180101743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153396741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175969514 seconds)
  done (took 4.622429431 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.18387911 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.158538177 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.183652195 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.163201619 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.187947085 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.156197866 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.183099471 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157462901 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.187080564 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148781629 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.172403767 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.157163212 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.180553407 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.16383913 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.177715965 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.166452731 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.196560051 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.169998782 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.189639619 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.165638103 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.172115741 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.168039805 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.166023487 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.179950677 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.167880357 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.193123371 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.169837869 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.192808387 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.157859949 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.193655632 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.162538127 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.174740657 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.156839148 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.176625324 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.158994171 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.193195378 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.17148717 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.184786697 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.167928199 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.179761477 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.168670541 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.167301512 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.185096722 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.166780566 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.189436031 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.160724908 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.193913555 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.165015608 seconds)
  done (took 9.224098121 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.183040874 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.225283467 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.167352566 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.223902145 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.196346966 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.168676548 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.194614482 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.199190623 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.182579712 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.159617155 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194091302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.171277786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.189751714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.167290058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.195638565 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.167248363 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.18714845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.158624432 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.184154564 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.184058043 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.169077157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.181146918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170176459 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.190792348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.164396884 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.186448919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157829289 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.188040532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.172942034 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.19420207 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.163965474 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.185852615 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.190500831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158976641 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183113858 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.165197055 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.196841651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.163886413 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.182028106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.160460978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.181057661 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162089258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.182057788 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.174570104 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.184348303 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.160309003 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.187087828 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.16821336 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.194253334 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.16089539 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.189463897 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.191140787 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.164146153 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.181823331 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.162721461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.19039111 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.160131536 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.180850372 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.162627874 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.192756844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.160976895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.185224672 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.172127196 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.184509497 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.184224544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.169848763 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.182841966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.163035816 seconds)
  done (took 13.154306075 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188853695 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.186016671 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170259989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194440927 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163427346 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.186106767 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163095949 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185328875 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.167217564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.194324642 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187698171 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.296360941 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.168508788 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190132907 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.163557042 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187081541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.399960149 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187976907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171339526 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193557295 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.170623792 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.201101691 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.169234439 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.197952826 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196135277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.160237207 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183935331 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.167082141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.199548629 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.167608604 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200695005 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.161924781 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.186027846 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.198799163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.183690468 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.190482463 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.164844566 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191394241 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.165892953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.186665427 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.159415663 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.19569388 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16291087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180184505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.163092737 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.186688125 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.192439206 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.175952683 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190155256 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.167947893 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184775732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170388008 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185258334 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.162545112 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.193853422 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.201275316 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.174198828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.195859543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162103924 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192625472 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.193765352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.177893641 seconds)
  done (took 12.468232448 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.159297212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156751428 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.18315723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157138069 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.180871674 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157798209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180139249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158535872 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178327216 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157148475 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.18176662 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158491523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181665769 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158534336 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.180104816 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158993263 seconds)
  done (took 3.607084462 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176352943 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.19641094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.2638031 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161690394 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.181274658 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166201443 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.182242797 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161352502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.156899701 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187158716 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162559778 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.186493547 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.198535862 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164569671 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.182140899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.16304301 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.180603833 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164474896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182344207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.242429781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186483281 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.160459232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.186298621 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.163936839 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.186138405 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.165578039 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.19265327 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.161571594 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.185025693 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.164487118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.189006996 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165215423 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.182168766 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.165237423 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.185095744 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.160693269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.183661693 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.162258831 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184342157 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.16043388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.184548189 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.161457193 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.184071033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.163942565 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.182740138 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.160426266 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.181466722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.165961816 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.184776779 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162482813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.183920176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.168324128 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.190627314 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.169712154 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.193050038 seconds)
  done (took 10.710424489 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.172543589 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184601128 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.174097488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.181310696 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.163260985 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.183594995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.162254083 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.186585389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162098895 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157599789 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.186150347 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161473606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.184141573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161085638 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185210004 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161607003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.183264855 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160723092 seconds)
  done (took 4.040478542 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159341631 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158314335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182395331 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157774602 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.183841116 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157602095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181077775 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.15962805 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180818734 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158955758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181708722 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160211365 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181662836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159314603 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156956552 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.183495191 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.159502476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.183255287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158171022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181650963 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159305383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.181822004 seconds)
  done (took 4.658868072 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.17189232 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.260267105 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188973612 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.245460404 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.18241768 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154637751 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.192185194 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179630524 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.176720867 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176391146 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.156557688 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178523051 seconds)
  done (took 3.19728207 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189550361 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.220145313 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162275594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187780932 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17116576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188550653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165432838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188065814 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175206428 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203347507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190242279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175709146 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196598254 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173667335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197803995 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171030897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195554267 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168309742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185214265 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204147748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16720101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195547003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16836729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188140266 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166259411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19974209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174873215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201842846 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189152895 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174679685 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191044127 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165918096 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197059766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1777622 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185435662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196234033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16803261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203558497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172269533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198237918 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.163603766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193480121 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17283818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196547829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201058598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168471005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195568864 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168333487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195181524 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19428993 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208259234 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19956204 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176378575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.21289495 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182459515 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.213564309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201476599 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200956141 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179340194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197673112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17040917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197745048 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20763199 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176555971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199683493 seconds)
  done (took 13.280278729 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202137157 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187107453 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167482192 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203058434 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174607609 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192330952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172223018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.205967253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170419087 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194558121 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231918947 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168590154 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205714008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.181769972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197380477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172141653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197538388 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201445659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171403291 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.219123815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175146295 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204880244 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179991953 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207708047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204324097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173139126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191692882 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175899603 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204711926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170001856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201297735 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169892973 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199204871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189530736 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179301991 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190456622 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169279557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195095968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168039665 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196560052 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176030765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211285458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191605999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168562776 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202508573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170059056 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191007041 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16780884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198658782 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166565804 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207351298 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.206636961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184445731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206210859 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172484224 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192613949 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168733538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193754317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169843246 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200497005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177787064 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195131587 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.214724932 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169137989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198388357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182176379 seconds)
  done (took 13.396274275 seconds)
done (took 237.298241493 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.333647107 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.347206443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.158047682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.529346993 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.16680096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.878899545 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.785481241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.2275568 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.185862322 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.162102178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.183783845 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173872669 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.519812331 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.153506881 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.180255883 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.169668574 seconds)
  done (took 32.102429158 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.349996114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.398184295 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.176547031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.190366247 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.161789778 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188748933 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.162656159 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.18978838 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.161505454 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.19306247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.162355353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.182922982 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.165551639 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.182707871 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.15851513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.185268043 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.164153626 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.186227872 seconds)
  done (took 4.520457036 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.180323419 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.224842838 seconds)
  done (took 1.368794383 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.190901092 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284358507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.392144909 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.23359444 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180716207 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.207199114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232864528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.173082485 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.27309199 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.173282929 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.204008135 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.186482024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.190010825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.192161378 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177192784 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.185738983 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.189724965 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.201971424 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.176518746 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.188578241 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.184500278 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.192030914 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.169423779 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.207230123 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.269956606 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.178520327 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.198601652 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.169002985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.201367646 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.18350462 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.202962262 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.216068677 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.184880284 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.250859205 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.198579372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.256043803 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.183521731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.197032108 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.179467655 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.194693543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.172744104 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.200435265 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.183376671 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.187938634 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.171779317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.199471664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.168300382 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.195728521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.193856216 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.170732535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.196657341 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.172219945 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.243411121 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.195512362 seconds)
  done (took 11.861255681 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.004339588 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.07525531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.198022109 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.21994445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.093080622 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16726708 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.02256069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.158819358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.301618941 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.138125107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.178914302 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192067372 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.186712709 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.188169809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.181993185 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.191796597 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172587519 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192340031 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168461715 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.972375119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192614088 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.99333784 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.177791533 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.304167241 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.188001282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.164639303 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186059694 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.161056025 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242929076 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.191897517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.15669346 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.049425349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.172986663 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170698523 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186293243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.156376799 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183184119 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163112502 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.356592343 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278711769 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.215581116 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182375985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163269506 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.188681256 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.169857494 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181647541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165626509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.209238619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181453521 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.181260131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.178803743 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.193006527 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.162385943 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.198026509 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.163459544 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329663151 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303242682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184911154 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178738232 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190632412 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325801975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.170824237 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20012049 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.96136464 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282788684 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.186841847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.881364802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169872998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.18391871 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165481239 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189183066 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.160893574 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192619326 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239403349 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.307838029 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171952033 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192123523 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170368104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274561242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238767932 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164623938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243746219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187743218 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189779231 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.202448859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168330554 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.23258209 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.16381762 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.199515106 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.170361538 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193644457 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.188633135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.190427498 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.30868234 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170694891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199259486 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294767861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169102091 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196894521 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16499256 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198100261 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189048133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.190730958 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.176062194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188748095 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.174186396 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.199887081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166769043 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.204953507 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169913437 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.198146356 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.174728504 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.184086328 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183726506 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326715359 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1890093 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.160295174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.207577793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169758948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24721796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.198365868 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328553024 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168990274 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19876082 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16288866 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.18689772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.181101382 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198632871 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.160486819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191342977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164455411 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.187889675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.167390909 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.277226385 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208064587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217819389 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.233574745 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164832623 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.215779814 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170644536 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.247806163 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194381981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18051695 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188572443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873178007 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191058094 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.171163596 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164734007 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245690042 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.189826234 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.167169023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.21724704 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.159300076 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.899303116 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.168780402 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.168902554 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.19379727 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163680312 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192036291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16537962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.207450263 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207247932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183214779 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192721714 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166726578 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.23856211 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.247803579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.165847068 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.286525542 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192127644 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.089894462 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165375988 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191015003 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186616609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253543973 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169275436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.205817513 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595783374 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.169886687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185917218 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196924204 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18344309 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.17306698 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193605974 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.166425493 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.260209626 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17729133 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335659234 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.250449097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.243991991 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.172292789 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196146521 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16311369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.193626369 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186095452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.191791009 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.165756762 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.198353157 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.169166414 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197652648 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.172585983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.194087181 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.318168462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161921778 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210206619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167845017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184863173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.174371824 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.183576417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177702556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19643755 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161761422 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.203675481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873144553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.176284358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196859112 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161772736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200124891 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.24830448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165759347 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.208584904 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.175715222 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.205205285 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.305863337 seconds)
  done (took 58.015889033 seconds)
done (took 108.82715875 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325805747 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232141322 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.429250326 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239809546 seconds)
  done (took 2.285384964 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.354478806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.209362308 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.312620341 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184939789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.286488735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.188898882 seconds)
  done (took 2.546714635 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235619977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2339771 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237157602 seconds)
  done (took 1.721421838 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283624195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.285389573 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415760622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330397602 seconds)
  done (took 2.395234758 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.341760848 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.179738988 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.221016304 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.293038033 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309357706 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271603812 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186049357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.240665101 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.221176589 seconds)
  done (took 3.314047897 seconds)
done (took 13.267690675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.207634225 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223236069 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.185298004 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202291995 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198094813 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226088038 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.192312933 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.22220598 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.190920158 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204229462 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.190057968 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.199295455 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.283785459 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196488115 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.200689767 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190443422 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.202240662 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202451862 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.229204566 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.177694733 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.228646185 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.17604159 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202328173 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.18089088 seconds)
  done (took 5.921606442 seconds)
done (took 6.93849183 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.272918225 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.185226418 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171604783 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199964325 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.281638608 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180667458 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215597319 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175841145 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212910803 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176786029 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.192154883 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188212272 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199021467 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.248476151 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.206489387 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.197864268 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1684687 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.213565496 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.189564259 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.215512461 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.261160096 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195015302 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.184837332 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.19512628 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283343853 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16810776 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200043385 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173383291 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214423845 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.174455704 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199068331 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163358273 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.217054278 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.189045967 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191705663 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173671596 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190757917 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.139930993 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199713106 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176209418 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210239444 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176852937 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.196790249 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165139994 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199544719 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.17512646 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190388386 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178260098 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.190122152 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.174351152 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192497105 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.192343175 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.19773101 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16491301 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.190195415 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166235176 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.208488524 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165822134 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213315464 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166672591 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.188599263 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167308077 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.181164448 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195250179 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.176333666 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.194257873 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.172852917 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.203685608 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.172589056 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196157696 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165210883 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.201706027 seconds)
done (took 14.947538232 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.172982891 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.238246567 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.279990494 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257719505 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.228056933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209175761 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179771953 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.21879109 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.18138368 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.21181255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200035144 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.225439562 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.28739786 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.180945147 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.234808351 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178445597 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.203878859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.173954104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.288958184 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.222875828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189521516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210394911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.194588083 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.213335998 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.170139583 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.229644287 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.19934602 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178843692 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.193122813 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.179302829 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.213061731 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169804344 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197473715 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189230348 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212634931 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.17936373 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209826613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.176431305 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.197183874 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.173449431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.207522059 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.187203484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.197011436 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.180089312 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.203810345 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.188313332 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.205911311 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.186326068 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.203347926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.182364601 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.202190796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.21868151 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.182207039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.212770912 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.18217568 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.211617832 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.184049382 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.208143857 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.173714549 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.207194225 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.171431158 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.194612108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.170550249 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.216158493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.174094345 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.208281863 seconds)
  done (took 14.341194785 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187602208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225956527 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182203059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211008816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176668066 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19766089 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164388641 seconds)
  done (took 2.399278917 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.166301664 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.296209315 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.291448095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289249282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284649954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.297581906 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190168038 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190574723 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.204132453 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.203803151 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.293157811 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325895911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.178618803 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.206975971 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.295036471 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166401538 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.295637036 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.276570784 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181469935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.290345651 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211970321 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200369823 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.207346479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.167489315 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.285994678 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195933715 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.343740011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185490627 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.20452985 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.179942575 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209339959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.274405006 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.292391861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.182289451 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199121411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260225829 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.286725707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210697673 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301590447 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171146135 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.286814336 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206547215 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.18317909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208544746 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183494144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.281296805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.216976265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.186492919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.206511456 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.271533482 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207160422 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.29156494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178628372 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211719102 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176290714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214169065 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18797104 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209642162 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.301973177 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.189234329 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2910236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.29438541 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.289028375 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.299985424 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.199356426 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.2904472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.283222468 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.215976557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.290556711 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.190333491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.297443899 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212136683 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.18115048 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.288438704 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187210538 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.295060636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.298341919 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211139629 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.18679156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.199809208 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.192230381 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.201772865 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.299482916 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186309167 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206644853 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189013421 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209485158 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182785255 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.293663182 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.227879258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182807605 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.207396765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188745859 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212766162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183251236 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.295613499 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.213247997 seconds)
  done (took 23.632599998 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.171551285 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168252191 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201117754 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.171001424 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198106198 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.16820917 seconds)
  done (took 2.166340426 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212938741 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.212283978 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19398633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211952023 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.235846262 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.301235514 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.306397482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212596169 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.208445711 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.224299892 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.306550715 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.306007698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.281935503 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.221000938 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.310797274 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.187828703 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.306605819 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.213980423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.200642344 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.217299909 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.186803503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.220192945 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182715134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.293258381 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.217503706 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185825237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205135653 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.190944114 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.219169142 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.203600332 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186806646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21788036 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.180884734 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.208307356 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.311182239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175481742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209719266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185177039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.217203808 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.18281843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.302669285 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212377635 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189170355 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.216647243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177934569 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.205903558 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.212343483 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177069374 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.308822721 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.215639712 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.188136913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.212892855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.184698488 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.21333481 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.178050016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204532992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.188288678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.309319711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.216266398 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.181038734 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.219819084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.18643963 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.207703996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.18775565 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.213838575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.186762507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.207674523 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184300741 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211082429 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185792132 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.219252602 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.186546068 seconds)
  done (took 16.838710006 seconds)
done (took 60.419090166 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.63726351 seconds)
  done (took 2.7291034 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.067424496 seconds)
  done (took 2.16345249 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.629555407 seconds)
  done (took 18.753815063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493419171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.421163544 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.111747241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242931661 seconds)
  done (took 3.360640204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.156567256 seconds)
  done (took 2.263282223 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.489521328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.353333339 seconds)
  done (took 1.944546999 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.807847422 seconds)
  done (took 1.921858918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.810311702 seconds)
  done (took 2.909110439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.369594206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.286692044 seconds)
  done (took 1.769615816 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.69275227 seconds)
  done (took 1.811372313 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.349446253 seconds)
  done (took 14.468161978 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.320970495 seconds)
  done (took 1.434997704 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357347537 seconds)
  done (took 1.477500456 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.583591252 seconds)
  done (took 4.704836209 seconds)
done (took 62.819454836 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.184476183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.213806169 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188215275 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.21005688 seconds)
  done (took 1.900861136 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189367447 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209448212 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189183555 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.209007305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.19241972 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21038688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184736551 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212434556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183550436 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.210944213 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184967096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.182949102 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.217188932 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.18228547 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21098479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185356672 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215552062 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182337014 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.214157611 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182236442 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213968899 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.183476265 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.216390646 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.212123483 seconds)
  done (took 5.889095254 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181809712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171584529 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204593056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171081392 seconds)
  done (took 1.846463436 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196086876 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229455715 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19947383 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220378653 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199593188 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226269277 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184979249 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208980136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184245148 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.22135671 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.20092122 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228076839 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196643093 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218603148 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195684172 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.209508695 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188381986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225076317 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191970711 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.223161269 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186628621 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222933378 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182372284 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.22369772 seconds)
  done (took 6.092844837 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260623086 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223608952 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209975095 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.24414655 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180943051 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240050568 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.255554146 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.190876228 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.216828062 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.188819122 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.212543579 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.184262608 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.259742527 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.188892386 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.216398817 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.185773066 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.225631835 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.222920666 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.232991291 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215682595 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.188891409 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224046018 seconds)
  done (took 5.898328132 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.276233941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.20815566 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.173249824 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202446763 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.184843198 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.208388441 seconds)
  done (took 2.385439099 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175534613 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.167764421 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.19963181 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169719837 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201433715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168700014 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197215651 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169728637 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198042433 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169806859 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198504712 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169980624 seconds)
  done (took 3.319663066 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306755349 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217854798 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351403485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.469702956 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26261489 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255514057 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.352162101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255320736 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.278561261 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231417906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253171929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256947339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250940361 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276304201 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236161037 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247729826 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23706646 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32817581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237368034 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332214452 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254005206 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24567321 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288733086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247844296 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205966625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259762293 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.21539401 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201608389 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26818578 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261419906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240610555 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248137491 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243518188 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288918444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312258633 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239849774 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384372063 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199775125 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.264038046 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.293814179 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.33003268 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208687083 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287684349 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249135452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225657536 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281178214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247131008 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.283948818 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.20008976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241578765 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277751522 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27623834 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.237948974 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233354815 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400585437 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230612426 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.210057508 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280554741 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286376989 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302322453 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275696442 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.191012628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270322643 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290596102 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314865529 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.210964188 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.262159175 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221615612 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232533341 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308134156 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280309249 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259936197 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285529536 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196896965 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27097517 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264686941 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249602551 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27696867 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269978676 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217002246 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218114189 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231259645 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192068907 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287665282 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215837783 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316010297 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200249487 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.274828943 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274106296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22236452 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258764819 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254758234 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233072376 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246302969 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.161571175 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242168854 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.252836272 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225144133 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226765847 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219467922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238606669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.22018212 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220037268 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220180234 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237931234 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.225171092 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255712965 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240531704 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.230366096 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275390956 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21600575 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.263700712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262798642 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296670198 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200817925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228451816 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318515784 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237389405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.235075633 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267628446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294707448 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209850289 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2310247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230034141 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291589804 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243476911 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298540897 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203503113 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233102897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.2276008 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241971692 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257090304 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.257844311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196150153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.266573633 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286686387 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.196447188 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237336326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286598247 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198641741 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221403854 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205351043 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233873525 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239641018 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.221582996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.236507869 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220019808 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266614491 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266889526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253345275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204257538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271514555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197279417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.26966858 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247708874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18592057 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273560276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299954763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225313009 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251664266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260261448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278181674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272520269 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196263645 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283445891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223480444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.191024641 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260218706 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268787322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230928388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288520977 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276056822 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.265217665 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.261855366 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216096125 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267627259 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287021275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253656208 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.209204327 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27345279 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266387716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190485885 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222028305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196141632 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235766154 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196610267 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235657132 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276333674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230233957 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275574359 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2660427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23776578 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294653881 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.195074388 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258286756 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.27483048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20872794 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29122209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29053513 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278008188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211534651 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262133264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.187495281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22603454 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.200566427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257041206 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237010098 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204598574 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240750587 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294416909 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265319982 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217292506 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287579028 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262588909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30523239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.187644742 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261893639 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262359061 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236492853 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.286801834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202285431 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259995492 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294029429 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237716542 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261836509 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267095836 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279827903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295864718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.264237792 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202160274 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24231601 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230524356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237256008 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259282274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210845388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229131163 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214789604 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.236321602 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238576986 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284449231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212678232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27527474 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.253268031 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236725564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226248044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238006034 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246884678 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24449841 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.164180445 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265578535 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292104673 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215675261 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250959357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268348789 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196985524 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.451824356 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283796634 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273057768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204263335 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24016832 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27303954 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226511695 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259026515 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.287363009 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208220543 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310312087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273393146 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.238529006 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199474807 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249723865 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220213478 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.23017529 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.253143085 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.231723392 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.24405394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28959779 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234803741 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241876498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280644487 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.242783876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.220445072 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237090764 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327537182 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238075876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27252907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.270006891 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.26253988 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252676964 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224055377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194110368 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232871024 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286988939 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19943884 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279857237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262067404 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281943465 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2754066 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231996192 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24069618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196141283 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269540841 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250415573 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281308678 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206455024 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.238015323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288793219 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.188207243 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233012033 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230017658 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390427721 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249195306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267670491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166658763 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.383690761 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1981583 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23407376 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258170749 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239113438 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234203595 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.258851074 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273775107 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245898588 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229572071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237032377 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277890855 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282864462 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26556743 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244874785 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245718747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262413816 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225558781 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271891419 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248312373 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216399865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259455131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298151322 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275266568 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.202673678 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273512575 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240468778 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273331057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272003863 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238882403 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254235612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230722915 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264945354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208163762 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226367683 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228004902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.266631393 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23041722 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271523704 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241350454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232565608 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196628216 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249797897 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268040091 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209061571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.231865798 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288580133 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.199717645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285260787 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313398023 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199053874 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269843323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243646207 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201600078 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24177488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211382956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232153125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.248144893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273468226 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.23187802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272025863 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236170047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26665891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253608228 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212770423 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.373147242 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.196619276 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295847817 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257175022 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.323064267 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219116971 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280424557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273718537 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217734951 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266595075 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248613668 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.319415339 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236686174 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270897019 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231538592 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213856455 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238690269 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204724497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255123993 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271340232 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211479825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238741533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.236649856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2481025 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.247963934 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212701768 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303844574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252988037 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289993861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257392857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241887533 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278183839 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273842575 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199842312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268290053 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272003444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216147318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254916844 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.202936491 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.24041891 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31822238 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195840826 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263280826 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276354696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243065895 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278487299 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.236553825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249965726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245311852 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278848518 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198025601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.256470673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274181863 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206334549 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.227744533 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245269318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261821283 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271498492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213376436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.282518887 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298817469 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.196052584 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236299183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386768248 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233807036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300988136 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227202426 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210389743 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247569121 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230419106 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.270756777 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277091522 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.200596249 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232614985 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.246945509 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224746945 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.231777937 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246969605 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287487536 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259499201 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257542806 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.239334625 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.357747238 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214492849 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276334931 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177886378 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.232593335 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210575731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23784931 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243638175 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283378494 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320234717 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.238327025 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.250936868 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205039063 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.23026762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201028287 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265507995 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253134354 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240987209 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250876805 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164383334 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24546208 seconds)
  done (took 121.808293642 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238555196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228776788 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.244107229 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.299002198 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271897076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367944905 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.305224219 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322536127 seconds)
  done (took 3.539790639 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.191034069 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.259913638 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.242975591 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189736488 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213222576 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.549592584 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.236777596 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.190143243 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.263913239 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.225954991 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.18218001 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.645772692 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.226086431 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220376488 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.222068044 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181224512 seconds)
  done (took 5.495582644 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.114353438 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.625217983 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.100215747 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.370162365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.339891127 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289336025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.883381329 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.27361098 seconds)
  done (took 13.262748706 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.247582322 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.279782297 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45752969 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.385603993 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.295411588 seconds)
  done (took 2.938048268 seconds)
done (took 175.485587383 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19853656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.19653868 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.228304311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.227192788 seconds)
  done (took 2.104267799 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.248002417 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.16299894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.194836718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153094957 seconds)
  done (took 2.023215731 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.479471935 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154342393 seconds)
  done (took 1.926877223 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217131382 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.23838178 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207345501 seconds)
  done (took 1.948200256 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.2081558 seconds)
  done (took 1.486747372 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.192295123 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189636057 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.317603517 seconds)
  done (took 1.977191722 seconds)
done (took 12.739905054 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217142277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.050022632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656487672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.20603458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.828073947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470426372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.554635614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25359391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.279917579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215379763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247515274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.765961789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.537298004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.95755389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.523907335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.957753077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.795817401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184281045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221403853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185657757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.52858251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182926893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215016658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184717344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795167249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.493329563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213450956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.967645606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214936061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193869626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504711807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184146322 seconds)
  done (took 24.047602283 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187899453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27340893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240619774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218141777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193648577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217583674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194165612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228152616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31974478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184969611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238795869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183999725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222313885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184436582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24099538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183294258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219476932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185377904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223411232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18663777 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238923819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181875572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217935745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183818557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215949807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203148669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21553935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197362667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.714182159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19247287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220480481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183584099 seconds)
  done (took 8.580479683 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229335588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284666995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237681901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256659943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272792511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187063173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306016289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25263017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.296531563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217751782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206017749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217260869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225401079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.21895871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.208508358 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.217294252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.185701967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.21929744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222437923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18766339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238163038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184618798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217008322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186716412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216253268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.207809597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216003027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198071766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215564982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194926883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221103116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185689535 seconds)
  done (took 8.424855284 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.198457569 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197783671 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242437184 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.23914766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.198851893 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.196719569 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.232745938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.193735251 seconds)
  done (took 3.000171181 seconds)
done (took 45.331008714 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.209234987 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.231740432 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.20672566 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201016833 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.3118685 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.226239104 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.204739653 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225775149 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.200067271 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.240540155 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184734455 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.225131841 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.20563425 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228214984 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.315254126 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.203568624 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.319930628 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.316464475 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192447378 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234127608 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.208562276 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.31714424 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234167418 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193125955 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.295748153 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.190068304 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.306761425 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.228810521 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19648602 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.217583116 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.283167224 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230777112 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192323828 seconds)
  done (took 9.061031224 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296369601 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.229044978 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193633353 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.228411518 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19537261 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227446381 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.334392523 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.195495111 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.226346939 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19527574 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.191132336 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.318449574 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.236272294 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.190048329 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.22878454 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174427069 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.33652352 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.192920272 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.219786329 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.156858983 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22215772 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.197027569 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347648608 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.189615035 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.230071157 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.193338204 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.228557206 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198980681 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.226165912 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196171804 seconds)
  done (took 8.111010765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.201355423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207565641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.247196169 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293670096 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225153981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.23956992 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208906524 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.238704237 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.217417103 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.222409288 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203546205 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.257346971 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203902117 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.232154592 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.18714845 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.236700561 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203467494 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.221767936 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196391525 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239070555 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205434854 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.237083151 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211647166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.229635138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187469719 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.229685073 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199337011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.232920192 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196223417 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237418599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189875332 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224145124 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.190648057 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256138718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.189036469 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236304701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.208515063 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237237222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.2015111 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.255800685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190080596 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225199378 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.212836772 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.280420715 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.22338993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.202152033 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222358025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.206259678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.186785205 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243351336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.263253169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.190584082 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243776181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.189987638 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.21922711 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.198733861 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.220643351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.194147035 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.235996561 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.192449473 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207315539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232307893 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202200712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.224525549 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201145551 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223298228 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.189382183 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228574807 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216827573 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232616452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.226837016 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.223494971 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.200632706 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.23748886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201047074 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236081488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189211002 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236713412 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199939811 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.22822609 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203124364 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.22610047 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.190907587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239850752 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210464124 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238295805 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.201106649 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.234093246 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190559009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226755162 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207127875 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225591955 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191609911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238624269 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.190354863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.228969829 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199969493 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.234438821 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188091307 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250546316 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.193822343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.222511046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.21770038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.227492965 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193287778 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.230387887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231850014 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.225406806 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198831359 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233400421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.191690648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.23279329 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.193120996 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.221987657 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206419056 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240715037 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.199970052 seconds)
  done (took 26.819578663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.415252316 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.410943947 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.293752229 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.456720439 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.239845374 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.328675595 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.404834372 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.410657249 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.190983155 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.261257315 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.28148789 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.371022111 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.190912546 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254591524 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.414048672 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.456419632 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.257177327 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264269849 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260713111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20595573 seconds)
  done (took 7.70547365 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200924084 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.254873543 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.213296957 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24083733 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201076617 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236812027 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192562406 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.243217731 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202556764 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231434318 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196688071 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231218719 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205813323 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.205146967 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.236838148 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.246896271 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198389823 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224934819 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.215092436 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.224924203 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211214429 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250458875 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199958947 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.242966023 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209655153 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235251703 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.189808495 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.225783251 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199603874 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233003163 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.194417112 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231471125 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.200687113 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168034985 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.238678675 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206900053 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231668427 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193812915 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231172624 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.195023752 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.236386554 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203815653 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.231318382 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202766357 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.210199984 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.211360816 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.203163615 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.238441565 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.17548251 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244665051 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204253907 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.201738992 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.235839069 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209443952 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.232185951 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.20797526 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233596884 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.202471488 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.227720857 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189063847 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.224347454 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193837778 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234948732 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.203435647 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.237004091 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200589265 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234419823 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192594743 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.22643955 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.195540579 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.227194882 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.206018866 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247452696 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.202326637 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231171506 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.202834942 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.233511329 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162107416 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198209004 seconds)
  done (took 18.398435933 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.220149225 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235386358 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21126241 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.257911987 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204282961 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231789741 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203961412 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.244387711 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205099685 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.209135813 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.239811431 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.205065742 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.253357707 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.238005405 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203892898 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240453762 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206560974 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263438389 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205758428 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25100217 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204773805 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.231988719 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205491425 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238450853 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.219714183 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239219317 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217061611 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.237977679 seconds)
  done (took 7.684693214 seconds)
done (took 79.08406139 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.529572022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.764033541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.455838972 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.459106846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.456056249 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.468844048 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.451319403 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.468977375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.022513407 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.428875208 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455512115 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.461449602 seconds)
done (took 31.829570577 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.445972913 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.212364087 seconds)
    (2/2) benchmarking "String"...
    done (took 2.218542316 seconds)
  done (took 5.776662801 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.212689407 seconds)
    (2/2) benchmarking "String"...
    done (took 2.213712512 seconds)
  done (took 5.768086082 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.444048855 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.445357541 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.934162857 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.4508852 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.445055618 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.442540214 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.445807389 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.465394098 seconds)
  done (took 17.97053529 seconds)
done (took 35.754579826 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.5069637 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.644754825 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.708922831 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.433251254 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.446656031 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.458901443 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.44522219 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.476962189 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.450512946 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.439039281 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.953692156 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.710315956 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.456634465 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.823500181 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.432984321 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.455624629 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.461876751 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.68989192 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.446121116 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.486248496 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.429456916 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.450351473 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.473062811 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.45415482 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.457244947 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.457437709 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.469468359 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.446887904 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.64532934 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.460866078 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.488559055 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.448931949 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.469955433 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.462916408 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.450489759 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.466530905 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.649655867 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.458526535 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.447447054 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.450148863 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.646829461 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.459922942 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.446559301 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.452159734 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.434544505 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.509532532 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.440730836 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.633769071 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.47212135 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.453509346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.487918889 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.823047261 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.463368282 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.454130515 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.455221995 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.690945336 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.475167757 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.51829007 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.475514729 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.454552496 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.448608374 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.449462393 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.516137003 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.459137158 seconds)
  done (took 159.932613642 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.448375663 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.449232895 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.451614203 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.456069797 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.454204477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.452441055 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.449378933 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.448361415 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.457456007 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.474403414 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449934591 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.451415924 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.455555277 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.471863776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.457377157 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.468644581 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.453290883 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.454715296 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.471842404 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.450339111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.455497937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.452561111 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.44953873 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.450209416 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.460479297 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.525922395 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.461366421 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.465172632 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.460513798 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.450751245 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.461578668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.460875856 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.196181651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.404835768 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.462674548 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.490380865 seconds)
  done (took 89.582066897 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.4519456 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.451820375 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.451811226 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.485693956 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.450464337 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.054391065 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.075997234 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.458489519 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.451579492 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.857976283 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.611590273 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.920116867 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.701810196 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.452940699 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.545898889 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.463102605 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.455264946 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.547849834 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.481241016 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453792972 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.452695486 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.073568014 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.470301845 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.639386126 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.635760316 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.455220248 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.489967264 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.85286432 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.453714261 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.488590903 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.792363889 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.487615778 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452189975 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.85409234 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.894821541 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.456614071 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.569516557 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.455072185 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.490971093 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.452573334 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.743115378 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.454724026 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.766583866 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.460451779 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.458584293 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.122459218 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.453852965 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.060706882 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.454470711 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.443072195 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.454747143 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.455432427 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.130050547 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.464159583 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.165393867 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.454652578 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.453867842 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.455420343 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.454872369 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.456030617 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.491171957 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.006683252 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.364870491 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.453690026 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.462415716 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.495876256 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.457039614 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.462798865 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.737935739 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.517032578 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.087183293 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.457818763 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.502218753 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.55406515 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.573305027 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.45664529 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.459588192 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.458321551 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.461575596 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.575109447 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.453965829 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.896355395 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.454690292 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.642479536 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.45603334 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.008464485 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.56042797 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.456539829 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861186957 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.459267621 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.46047811 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.205735451 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.5552183 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.457140325 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.467454346 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.460403868 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.898336095 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.084278385 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.779228769 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.461190072 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.06284647 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.460699996 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.915311158 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.053134341 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.150360741 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.457602953 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.570666494 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.636782862 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.458890547 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.457022921 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.986111851 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.457029627 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.514671873 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.452202057 seconds)
  done (took 400.2067784 seconds)
done (took 651.069721313 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.439417751 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.437220403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439938836 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438833737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.435762676 seconds)
  done (took 13.535182931 seconds)
done (took 14.890121642 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.796465249 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.792801585 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.792454334 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.547848927 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.79167267 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.792495471 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.679712553 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.752236999 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.793939229 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.793786696 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.518434991 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.81451964 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.75459526 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.562071965 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.512510145 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.678152647 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.526032047 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.711578337 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.665574931 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.855871057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.881622656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.535391198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812202725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.51905134 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852007717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.86934379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.74548628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.693336562 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.50427069 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.503087997 seconds)
  done (took 20.12241438 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.519989169 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831577885 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.87195746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.532088194 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830731897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.519832026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.835410704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87425475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.740925016 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.709297739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.50599109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.501958664 seconds)
  done (took 20.106341317 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.502723217 seconds)
done (took 76.88398923 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.515661454 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.579729168 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.51188779 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.494103056 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.488945347 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.490650871 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.495629088 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.493212998 seconds)
  done (took 13.416948063 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.495187482 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.49110051 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.491886992 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.489843785 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.489043963 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.488785341 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.490009658 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.490727557 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.492919456 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.490097379 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.491243405 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.490690262 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.491776713 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.493905754 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.502189 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.493250713 seconds)
  done (took 25.221458609 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.497490428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.492138211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.493548935 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.491335385 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.491729291 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.492932376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.494169614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.490983595 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.490784268 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.49592738 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.493817685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.49374512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.495300345 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.490295798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.491552871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.494521824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.490703951 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.494656618 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.497076409 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.490154369 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.491218192 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.490996656 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.49255202 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.491249272 seconds)
  done (took 37.178636683 seconds)
done (took 77.169492785 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.478017282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.456579709 seconds)
  done (took 6.28181789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.591058682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.60897304 seconds)
  done (took 4.553451455 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.494170733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.491249272 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.495280021 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.492954935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.49293517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.492590644 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.493780878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.495499113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.494597532 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.491632141 seconds)
  done (took 16.283973472 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.495264517 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.492930839 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.491182154 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.49255712 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.500188677 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.493844644 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.494372155 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.490821563 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.496214008 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.492552719 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.495224567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.490632503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.49430825 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.495480815 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.493467291 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.49385058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.49207745 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.494777793 seconds)
  done (took 28.239006372 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.517043823 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.52080736 seconds)
  done (took 4.390785169 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.677558927 seconds)
    (2/7) benchmarking "second"...
    done (took 1.576331739 seconds)
    (3/7) benchmarking "month"...
    done (took 1.658902016 seconds)
    (4/7) benchmarking "year"...
    done (took 1.65050842 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.574683694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.521470013 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.586935322 seconds)
  done (took 12.602279382 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.500466296 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.846833526 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.036357766 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.713925353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.485277981 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.508848087 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.443027427 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.508442031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.516389759 seconds)
  done (took 16.910124815 seconds)
done (took 90.61499399 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.460686027 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.466696638 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.472104309 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.477030494 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.855566759 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.495282885 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.466883952 seconds)
done (took 18.052908195 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.451971791 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.454101182 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.463617126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.467784835 seconds)
  done (took 11.191810914 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.462003792 seconds)
    (2/2) benchmarking "read"...
    done (took 1.868564571 seconds)
  done (took 5.681661194 seconds)
done (took 18.231634274 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.49646907 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.497792771 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.496909069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.49346331 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.493631627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.495991564 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.499239464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.49625312 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.496722942 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.496420111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.498191355 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.499584549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.501254455 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.498301216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.496880784 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.49709373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.49864714 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.49787651 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.497523743 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.497738365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.500334854 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495697672 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.494767875 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.498163489 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.499699578 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.498583793 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.500605349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.50019147 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.49946512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.49843133 seconds)
  done (took 46.285907797 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.50310455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.508476043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.498121723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.498554111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.498504873 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.498793876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.500996042 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.49464691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.496596181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.499890733 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.501462232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.497055456 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.502511738 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.498323495 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.49969399 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.497654066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.500999813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.499641331 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.500488366 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.500208023 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.49876112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.499948212 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.500469788 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.50178001 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.500953298 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.5004994 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.498054257 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.504472042 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.499435927 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.501616651 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.498766149 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.502544214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.500334295 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.500971248 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.497627038 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.503639115 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.506799364 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.506098576 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.50314408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.500292251 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.50362361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.502182017 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.50086055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.503585197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.499810137 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.499918112 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.505856017 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.501511191 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.505645795 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.499048308 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.502886296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.498593431 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.505027002 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.503613693 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.507825891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.50522123 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.505164658 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.515600482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.504644062 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.505327807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.505516379 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.504274321 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.503708957 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.501064975 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.506960766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.503047001 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.502764563 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.501848664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.503440696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.503113769 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.506768424 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.501969001 seconds)
  done (took 109.501705702 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.506751313 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.503394391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.504879706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.505099845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.503367153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.50733323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.503371134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.50224662 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.505641744 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.507910468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.501967883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.50328928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.505075121 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.50284034 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.50310022 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.503634855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.504585535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.506649274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.504288569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.504610258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.505130227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.504018912 seconds)
  done (took 34.457194523 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.505816767 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.505901693 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.504637217 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.504830328 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.508109726 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.504379852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.505531883 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.50175368 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.505533071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.505312442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.506266125 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.504595871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.507352576 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.505034753 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.507062455 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.507253891 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.505891217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.508874837 seconds)
  done (took 28.463223152 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.512870667 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.506289591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.508995593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.510374329 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.507006583 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.508882659 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.508533034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.507542405 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.505929002 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.511803631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.508425478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.507032423 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.508765395 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.508653999 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.50790537 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.506381154 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.506150398 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.504964912 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.507675173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.503301362 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.50676535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.506226107 seconds)
  done (took 34.532999274 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.510007871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.506333941 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.510094056 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.508138569 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.507802144 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.515577575 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.508646177 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.508662938 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.51040059 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.506476767 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.509048671 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.508088005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.509809103 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.507122799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.507423674 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.505164938 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.509531135 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.506481795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.510304279 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.507976049 seconds)
  done (took 31.535453986 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.511295606 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.511017987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.509620951 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.511741961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.509962126 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.510473713 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.510916995 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.510248684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.510185269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.512545765 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.50919436 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.511024552 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.508564811 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.512663378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.507143471 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.511382349 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.51306259 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.512058133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.515490971 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516121219 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.513214425 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.510819358 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.510861611 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.512755708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.519587582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.514178933 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.513942171 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.513134107 seconds)
  done (took 43.693656925 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.538113611 seconds)
    (2/2) benchmarking "in"...
    done (took 1.539386258 seconds)
  done (took 4.441220144 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.516882489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515307219 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.514351162 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.51290866 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.514950121 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.519272807 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.512689428 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.513484641 seconds)
  done (took 13.487269086 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.513098907 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.519183689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.516987391 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.512935479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.517686013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.507213591 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.527069748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.517323048 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.513098 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.51161904 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.516219486 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.512674552 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.514025282 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.510750005 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.512169251 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.526407164 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.517674698 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.512386456 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.511212424 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.515461219 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.512238952 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.517058489 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.51697908 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.517162413 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.519245499 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.530540441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.524344681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.516919644 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.515793175 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.524356065 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.515675561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.516083505 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.514099384 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.515739466 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.513493371 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.513429885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.531123127 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.519501328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.528319418 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.519393702 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.516214108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.516243023 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.518251867 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.523184408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.519190953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.518147664 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.513672095 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.513426113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.515721866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.517660591 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.524095348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.511270253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.519698769 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.525966325 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.522365518 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.532184365 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.520547201 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.517387861 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.519281258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.533059546 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.539960214 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.529394765 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.528470346 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.520000553 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.529552885 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.530790822 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.535581655 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.521974897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.52010741 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.516790508 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.528983749 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.54408532 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.53546516 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.522006744 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.516278781 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.519766096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.514698342 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.522683785 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.532390257 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.528624765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.522807475 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.520152109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.529673502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.52720552 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.520271887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.523132656 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.518371226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.516808597 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.514469124 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.53643714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.525849481 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.521712503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.516915385 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.521634839 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.525158612 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.524642415 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.515244571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.52550684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.526890535 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.519549867 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.519081162 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.518152832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.530119717 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.524656243 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.520875874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.532082606 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.52369404 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.517922566 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.534061001 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.527033151 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.52205263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.516706349 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.532137152 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.525084998 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.522097258 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.532744003 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.528109405 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.526372733 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.521197074 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.522925297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.527902675 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.536374074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.525914643 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.522881715 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.524241386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.529793697 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.519125791 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.529974587 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.52513298 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.521699721 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.522658503 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.525562224 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.534459305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.525715596 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.526388028 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.527774517 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.526352478 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.522032934 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.522269836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.529556098 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.531721317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.525210294 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.533193432 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.533947019 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.525704352 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.527472523 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.544758451 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.524866535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.534007153 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.532854213 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.527536149 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.522779188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.528340511 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.530159666 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.517930388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.524377017 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.518230287 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.528408955 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.523080414 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.525780478 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.523549608 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.522675963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.526505012 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.530258492 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.533768435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.528338904 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.52842006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.529262485 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.526944662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.523976897 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.530991057 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.522295329 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.522522033 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.526370217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.526058865 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.525122643 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.538205941 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.530227412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.525822941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.524335043 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.525853323 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.534045076 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.531730187 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.542145339 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.530752549 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.524611475 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.527956942 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.520955912 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.522080148 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.528771711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.524624396 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.531094561 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.548516051 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.54799692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.523759202 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.527217533 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.522093207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.529507698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.535729438 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.529817863 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.528558415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.52416903 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.521891367 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.531644283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.527976498 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.533367826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.522833385 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.527550606 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.532721514 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.530035768 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.5241823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.530718467 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.539151522 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.534143553 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.529293914 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.52495258 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.522692865 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.529972212 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.522091601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.526216916 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.529306904 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.528601717 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.542911288 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.532639102 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.535684391 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.537491465 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.530721749 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.528199291 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.533221997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.535173921 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.533340727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.543567237 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.533617019 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.530703869 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.546016013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.533518264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.528019869 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.539870119 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.534852023 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.531685768 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.52486905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.534729032 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.528723799 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.528236866 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.526219011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.527615139 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.530671114 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.548350876 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.53614695 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.531650638 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.532043775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.532317063 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.532065845 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.539103192 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.541054488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.539721846 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.542200443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.535230912 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.531434689 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532885851 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.532515483 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.529703952 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.530006155 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.528112409 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.538989141 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.54386518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.534010575 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.53946448 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.532889902 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.532376288 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.529847406 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.530876168 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.537586379 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.55528011 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.546142355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.547730267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.544207123 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.533746645 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.545772336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.53502921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.530135362 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.531520175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.54043318 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.528371241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.532473368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.536262188 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.534819268 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.537139255 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.538466309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.535300543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.532979648 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.5320106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.529616232 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.536049242 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.53175966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.535206887 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.527335284 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.533542498 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.539313275 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.548760914 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.534980391 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.53804356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.554853868 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.539516443 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.539096068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.541179643 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.534789166 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.530829375 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.540148646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.541177967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.53174674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.540033338 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.532915674 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.546960546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.532771171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.549276064 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.54186772 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.534673438 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.542606989 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.533259711 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.526288364 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.532769286 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.535894125 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.548645397 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.541190748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.53254747 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.537622138 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.534759134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.534662474 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.54015144 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.533351273 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.538710614 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.533547318 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.551183499 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.540687541 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.539745312 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.548289835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.542005167 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.535514049 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.532996689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.531043298 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.549472109 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.540385338 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.540823801 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.54331071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.53368302 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.540174487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.535666163 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.537205674 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.539987033 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.538234296 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.553678789 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.545491993 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.542389992 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.536559712 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.555152998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.545478094 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.5519484 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.546505669 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.539687205 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.54165191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.535485483 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.543355408 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.540719179 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.549125625 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.542782152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.536651414 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.543659917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.54101342 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.545715625 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.554840458 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.546080895 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.533483134 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.552650445 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.556643132 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.537249255 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.54523407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.540481719 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.536806182 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.546584172 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.541325821 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.538575611 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.544218717 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.546510559 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.546516635 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.540068678 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.545737485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547779644 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.547863105 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.536908429 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.541125446 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.542261415 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.540122526 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.539100188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.542473383 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.554595176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.546889936 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.544590831 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.548869588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.547493993 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.556516579 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.549088051 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.544916221 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.545097041 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.540824151 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.540868639 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.549343321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.54588052 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.545149491 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549869854 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.540694037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.547340762 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.542669079 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.558557691 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.552727829 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.543840945 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.538734849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.541180901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.548214686 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.540546742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.541130684 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.55626515 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.551408109 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.541030253 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.543145396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.547682984 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.546330088 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.550814458 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.54554151 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.548416038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.547254577 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.549991518 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.547370654 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.543319161 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.540160938 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.542252685 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.565076537 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.554458567 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.550629448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.543878031 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.547615308 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.543617593 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.551759899 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.549818591 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.547394889 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.551101435 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.547978064 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.553550839 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.541699821 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.546369409 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.548756514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.559996771 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.553583315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.545270037 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.567360277 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.560951291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.553706445 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.545128399 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.551465797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.545460355 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.552055118 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.550024972 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.546468235 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.567796575 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.56062199 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.55198367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.554740306 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.546264228 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.547859054 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.553386153 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.550435778 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.554211398 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.552534719 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.560051876 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.558870719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.549307283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.551016998 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.549218863 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.549305047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.552261919 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.552457544 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.555713195 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.562135171 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.555993608 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.556431792 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.557023767 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.552339442 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.551892877 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.554007461 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.546604425 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.554020522 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.547557759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.557884071 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.54820386 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.546483599 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.550259219 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.546816044 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.547329447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.557707234 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.558129145 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.551973753 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.551234972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.557060712 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.56742914 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.556756903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.551826039 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.543941935 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.563341889 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.557619234 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.551872623 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.547662521 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.550551016 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.572719408 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.561331787 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.549073035 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.55768237 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.571758601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.559845425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.552097652 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.552417804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.557238878 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.555546345 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.561575463 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.552164908 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.570257293 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.55652042 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.547603505 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.5578803 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.553420655 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.557087462 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.565769013 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560171095 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.548751276 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.550911398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.576498031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.557567551 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559309322 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.578913492 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.559119704 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.562397216 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.55677171 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.54577052 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.553364223 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.561716333 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.558216866 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.555735195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.555784434 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.55456263 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.550052489 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.567342747 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.572021135 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.566090073 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.556356503 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.551284699 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.554151265 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.559378954 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.552148915 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.553947677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.555855671 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.553952357 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.556550872 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.550710045 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.579032571 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.581002654 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.562005895 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.553873785 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.551849715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.565482454 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.558437983 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.56211352 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.559100148 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.551443239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.552954534 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.563635432 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.563261642 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.555204751 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.555688472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.553347461 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.550796788 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.558922891 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.574623561 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.571611515 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.565685553 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.562251457 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.559329716 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.555079316 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.561815228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.558219449 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.556378154 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.560022611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.556750687 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.558880079 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.555749653 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.557941272 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.558419405 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.560749031 seconds)
  done (took 918.333096432 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.551626083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.55335256 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.556156827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.55707105 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.55942072 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.559504459 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.554949132 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.553385315 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.555203702 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.556500027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.556269271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.555939691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.554841436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.554352617 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.557452243 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.560906593 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.558366675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.55813564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.560395285 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.558856472 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.558507406 seconds)
  done (took 34.09523334 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.557836929 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.557454478 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.55989103 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.556920332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.5565515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.556814033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.557055056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.562208225 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.563332111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560890181 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.560266288 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.563360326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.562985139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.556671976 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.557547925 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.560355965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.561261876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560039723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.556920262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.56021691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.557880999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.558820574 seconds)
  done (took 35.70806574 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.557776725 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.557777145 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.55526649 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.56073618 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.56020818 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.560715088 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.563245438 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.559826428 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.559640999 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.559823844 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.559960733 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.557304808 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.562167229 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.570294449 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.568307813 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.561587895 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.561928231 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.558745145 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.55850545 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.557902091 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.574610919 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.56997716 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.55801698 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.556874237 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.562384016 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.559145615 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.566577844 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.563656454 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.553850598 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.564387273 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.558598199 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.560485381 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.576156158 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.565581349 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.558058745 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.568760036 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.566822639 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.55805218 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.563992949 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.578999746 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.576887117 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.565807775 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.586710573 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.573370677 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.568094099 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.566915387 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.570688075 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.567153337 seconds)
  done (took 76.478014211 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.568268004 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.5654138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.565692676 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.568895249 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.565700638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.567086569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.564958226 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.566066187 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.570829643 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.57155271 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.566359661 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.567558276 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.567627559 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.56964234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.567783236 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.569284754 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.569182646 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.568269121 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.568790486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.570545598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.569636055 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.569362487 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.569210023 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.567366562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.566890804 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.568982341 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.571352055 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.571282703 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.570477991 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.572347573 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.569921916 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.572494938 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.575071313 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.572477129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.568340359 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.57126671 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.571350519 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.572758449 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.572647821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.572249027 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.571300373 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.570573605 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.571447039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.570691775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.570544061 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.571235002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.571618919 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.569956417 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.572476849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.573616938 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.572382353 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.571892627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.569029274 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.57102415 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.574184678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.574750043 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.574523828 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.572364265 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.574631802 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.573665408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.572713751 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.572509744 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.570695058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.574358024 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.574240202 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.572892335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.573154938 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.57263518 seconds)
  done (took 108.213015289 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.572147617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.574542754 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570955357 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.569456563 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.5732157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.569210233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.56625441 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.57437318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.570632271 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.570283413 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.566894156 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.574093116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.573411814 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.574559586 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.577740647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.575519065 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.574382958 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.575075294 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.576082406 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.577059066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.577962603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.572779681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.576369942 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.576258057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.576510881 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.573239376 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.573683078 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.576302755 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.581738991 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.573548005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.575002869 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.57566231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.573528659 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.575252691 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.577748679 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.571986214 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.57561384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.57322897 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.575870437 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.577139104 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.571666411 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.575095129 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.573555059 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.576435802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.580024387 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.576088831 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.576409402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.570145477 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.576719148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.576827053 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.577071218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.577370209 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.579046609 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.575379523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.575416119 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.576489789 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578528876 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.576930767 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.576404235 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.580196057 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.574959846 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.578938844 seconds)
  done (took 99.056500693 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.578375854 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.58001419 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.580764914 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.580645696 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.577396539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.579626432 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.580774343 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.587352763 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.583251963 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.578361327 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.580315067 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.581368972 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.579942393 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.578356018 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.580302355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.580482896 seconds)
  done (took 26.705642737 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.579197815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.579938832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.579634254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.580119162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.58137414 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.578547802 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.578989479 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.581336356 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.584097531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.591810243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.581987277 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.579525022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.580568311 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.57996146 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.579351187 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.580503568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.580916679 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.582772921 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.581434203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.578987663 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.582375873 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.583050401 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.581122851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.583265931 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.580184883 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.581475829 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.5798736 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.580413892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.580756534 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.582903664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.581621518 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.579458254 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.579161987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.58291414 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.581481975 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.576683319 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.579304952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.580291461 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.582312807 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.583044324 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.580948946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.579729866 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.58659296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.581938597 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.581112934 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.582076534 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.582217893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.582548102 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.582719074 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.584662547 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.582065639 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.586547144 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.586789074 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.58620555 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.584409302 seconds)
  done (took 88.413163226 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.583118985 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.581992235 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.584776528 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.585650312 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.585681182 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.587405633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.586164693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.587150014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.582745893 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.586678096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.585552744 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.583128903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.583826058 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.581204985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.578582025 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.58385553 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.583582731 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.588002148 seconds)
  done (took 29.940999342 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.580913676 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.587179138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.585854667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.587800585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.585281481 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.584030344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.582721448 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.583834857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.588091125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.584540395 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.585930375 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.586991893 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.585531931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.583588179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.586803252 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.579361244 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.58548877 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.583508559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.586882103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.587158116 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.586488338 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.588529519 seconds)
  done (took 36.29813484 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.581951378 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.581599448 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.57969739 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.603045192 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.592673692 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.583247003 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.581917785 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.583521411 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.606111503 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.616022051 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.611399396 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.594728003 seconds)
  done (took 20.539779954 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596200746 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587914496 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.588298763 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587938662 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58157654 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587005652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587593855 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586780414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585478363 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587154623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588895278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58916689 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59118712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5869847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589176668 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589442484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590308795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589125265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589144821 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589037545 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587327061 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586237678 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.5889559 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589235824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589788338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587287602 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590504561 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586580249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583364546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586893277 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588910573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.585980103 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590580408 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592153374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586150864 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591159602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586049176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59037738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586845157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590719881 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.588862802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590581037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58392202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589612059 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590796428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590272897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587650497 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591503571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589085735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589733932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587379303 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588291151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589297703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591570199 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591745361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590390231 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594417419 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.593053768 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593068155 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595005621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588835983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593005228 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593565983 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593770199 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593641482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589251888 seconds)
  done (took 106.316651094 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594937596 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.589734281 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593544263 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593136669 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587795907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592213996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591440853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595746498 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594617933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593433704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594995146 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591537234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592479882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590646408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593787241 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593368682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594052568 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593535532 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595621343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595756136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594931101 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595950715 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595412518 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595004994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59606239 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595429978 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597715673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595032092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592781805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594429501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593635196 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593663133 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594964416 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.593465622 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590970123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594740784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595538441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596512377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597311223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591368148 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589046204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595390378 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596434365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595518047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59725947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596627686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595988219 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593782213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597500841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59486573 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595741889 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595194333 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597780975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594076803 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596362289 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598136118 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597544701 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599860081 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597114969 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598181445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596417953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593447533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597282937 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599135966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594998917 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600014639 seconds)
  done (took 106.691721695 seconds)
done (took 2034.543968877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.570620119 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.566777381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.589711653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.779980052 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.587426725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.221195377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.146730321 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.582743518 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.590999317 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.592505164 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.591267227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.569407464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.888531146 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.581397677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.593148891 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.568493382 seconds)
  done (took 58.452331405 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.630608543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.606320329 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.736382049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.601148093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.631471013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.842665258 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.665524715 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.599362461 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.796412169 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.60784231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.584866973 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.619751926 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.592016904 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.580535276 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.611379143 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.837759746 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92780276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.573107586 seconds)
  done (took 34.477190641 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.14215418 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.665692054 seconds)
  done (took 6.240918975 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.622016459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.602926602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.603593446 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.605339757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.568655693 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.560321043 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.599309381 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.571977344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.57185603 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.744147632 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.605635395 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.66085408 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.600932005 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.603293129 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.606203135 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.661679254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.790082733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.605661936 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.6059501 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.616476858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.599586582 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748340135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.651201944 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.603979528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.743066419 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.582881944 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.602081382 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.616851557 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.792079217 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.607386945 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.603329795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.601309496 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.604174805 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.572323966 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.203569462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.572325154 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.628835203 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.619255284 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.609189828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.806713759 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.602673776 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.615907163 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.575033389 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.201926307 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.763044309 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.767849878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.568324226 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.620888662 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.604123052 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.687557405 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.595396524 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.606804957 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.709900191 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.522541588 seconds)
  done (took 100.670665874 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.57182949 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.563120422 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.563288461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.576027021 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.564325673 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.589002275 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.575102323 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943721265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.628733235 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.56433573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971170635 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.596635019 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577777174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.564015857 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.563644161 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.625743749 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.563038079 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.571263427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.573803135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.568990023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.566925585 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.571665713 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.577834234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.586651976 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.63610589 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.571097205 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.569000708 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.574404748 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.572443466 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.565464715 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.567735255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.567703826 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.566861261 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.56641302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95120399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.585886655 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.567783725 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.567126169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612133428 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.570718455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.600556258 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236570237 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.563429679 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.572692868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.595271927 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.241945153 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.566763064 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.568352233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.574991695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.56836634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.587141773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.580244038 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.566910778 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.577879771 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.567161019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.678514147 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.668327236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.571651325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57629179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.57753727 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.592770212 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.570121592 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.58035767 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.571044475 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.568831693 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.567865718 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.767652577 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.569422759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.567635172 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.570308277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.570716848 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.577428666 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.36256084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.58035341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.590298738 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.584896096 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.581634858 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578434311 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.575664894 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.567840785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.581087721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.584418801 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970056946 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.58291435 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.570814278 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.593519609 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.584467619 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.572484043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.586965494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.572326551 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.570669985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580283079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.961246538 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.619896357 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.569300816 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.567942893 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.617505899 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569004689 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.581194927 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.567129521 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.571905129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.589485437 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.370857985 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581157283 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.574001344 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.58100014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.572801542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.572659834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.567900848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.58555882 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.581056642 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.573433256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.569668601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.56866114 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593728574 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.571348633 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.008704459 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.5737877 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572605916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.589130783 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.56911909 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.630022994 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57789758 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.571154265 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.58155887 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.996518552 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.601502119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.575810094 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.571251763 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.573819129 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.580156736 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582960306 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.572391922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578731206 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.578198247 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.594906168 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.597420244 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.57330363 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.590801177 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57226991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.580728038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.574808151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.366007018 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978732421 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.804329867 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.589149081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.571456399 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.593739958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.613155067 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.580832521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.589353087 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.574954259 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96565953 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.832660634 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.573951897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.574966342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.596227286 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.575731732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.58600783 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.360608706 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.596926676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.587336979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.59061023 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.573643687 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.46225592 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.622234573 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.580669441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.986247343 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.626436644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.589476428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 3.371619255 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.583043207 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.575312824 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.589735539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.576413174 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.574683764 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.577573866 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.767210341 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.574930095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.579985207 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.580126565 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.574042412 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.579185943 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580048273 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.5869539 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.579837142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.576364704 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.660756651 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.580745499 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.575551192 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.575877422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.582691067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.281666614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.393210478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.587824681 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.585975494 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.588078693 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.58550155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.579243981 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.57741393 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.589059963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.580924292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.63863198 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.0088095 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.59551693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.66001312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584976763 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.594893247 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.578599346 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.592242072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.597708619 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.587558516 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.598128505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.795792119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.58217976 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.578335694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.592994542 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.589361049 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.581759454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.583745112 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.593215171 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.580990083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.589850497 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.604003972 seconds)
  done (took 571.019866857 seconds)
done (took 772.297856053 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.591510555 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.592954523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.59192604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.593973717 seconds)
  done (took 11.823842962 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.6261262 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.622071354 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.625874701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.619388751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.627363088 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.618396655 seconds)
  done (took 11.193223873 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.590468383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.589443602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.590835957 seconds)
  done (took 9.222743619 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.889757769 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.592592815 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.05813756 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.594883958 seconds)
  done (took 10.591339862 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.624374441 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.625664199 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.628526854 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.626421488 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.627913159 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.630272467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.62525905 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.624683628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.628703622 seconds)
  done (took 16.093270101 seconds)
done (took 60.381665925 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.754129 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.74467675 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.591428421 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.665199394 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.793192835 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.757414892 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.75419011 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.753519215 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.756798193 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.656830383 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.753786358 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.648698763 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.749956751 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.890209223 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.659079971 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.753160371 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.652126224 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.846970135 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.745474896 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.662347216 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.783284802 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.65336437 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.662671838 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.598361146 seconds)
  done (took 44.744098744 seconds)
done (took 46.203568555 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.659070403 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.779546547 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.624222815 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.625714695 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.634517699 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.599761534 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.649202458 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.622057107 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.646627969 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.647662737 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.60009754 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.636613218 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.647677822 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.637619281 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.664711065 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.625581228 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.622054033 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.634319979 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.650583011 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.651669112 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.628332905 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.632247369 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.659988257 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.624243418 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.644899606 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.642459631 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.641198437 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.592984206 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.62708533 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.651947011 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.604571782 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.641466628 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.655351005 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.638479656 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.629601781 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.64105673 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.635806132 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.779696008 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.659682841 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.637028354 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.637095681 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.652939735 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.640219611 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.642824622 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.639286044 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.660611939 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.643904018 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.649976998 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.605876697 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.591169589 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.651144814 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.649651816 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.639937034 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.604768106 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.607706748 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.650710191 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.641063644 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.657671273 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.635257878 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.636760373 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.668619801 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.658005603 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.650259785 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.647059239 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.639345618 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.650769207 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.638720259 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.653308288 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.638376779 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.636663992 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.629414467 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.636874913 seconds)
done (took 127.681032696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.80982421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.603295992 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.842386941 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.633059553 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.85902921 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.808432483 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.634052207 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.63877299 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.638098951 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.493868878 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.636575014 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.638286475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.602818067 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.637975611 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.80630868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.634458125 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.640316133 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.395261716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.641224558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.818312999 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.608323307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.64026899 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.635994284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.503604543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.605313008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.603019839 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.821807228 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.639694195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.397838929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.611758241 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.60412403 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.400152142 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.824969083 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.654779913 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.64767887 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.648731868 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.862914202 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.638080793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.813680916 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.812629036 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.847269405 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.678454013 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.606370824 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.60838819 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.639503389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.639001929 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.635735802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.666933624 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.607638722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.636129566 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.400553032 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.643882299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.639275357 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.641618113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.638820412 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.667497452 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.638555364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.640688526 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.826923103 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.640034113 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814630967 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.505933401 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.499618632 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.642822526 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.609119707 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.639396462 seconds)
  done (took 129.505110883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.75653112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.773803708 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.807287086 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.636021871 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.730549954 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.815259189 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.638694907 seconds)
  done (took 13.624725882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.652139634 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.643862394 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.730009941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.729264943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.64017205 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.866418419 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.64103899 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.660160974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.641538006 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.7313085 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.643105314 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.644472736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.652345735 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.61363767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.727397877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.656175272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.810961785 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.641466837 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.646205499 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852034326 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.642615168 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.651782325 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.728143083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.656265647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.642880495 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.654305271 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.460524694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.64141746 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643743244 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.645568755 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.644337035 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.757191679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.642429599 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.612777016 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.646080622 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813478516 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.644305466 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.645012889 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.676749117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.612114012 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.645491162 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.637416113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.641946856 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.638864342 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.639598514 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.67049951 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.646193555 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.64156259 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.643479454 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.644043631 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.732304995 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.639361681 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.643720965 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.639458831 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.73184956 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.653554408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.642071802 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.638588887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.644925308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.644908476 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852670511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.732559148 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.639749022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.734838138 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.64647774 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.647187607 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.646520762 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.646969632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.787954599 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.646860889 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.732330976 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.645790572 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.87992642 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.674141034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.644213974 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.647706807 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.649520375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.643721593 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.606320609 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.653012649 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.642946076 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.644570794 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.656514421 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.643271466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647791734 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859659877 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.811423715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.646871016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.668412233 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.659056225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.647812756 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.740246368 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.648403963 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.648543505 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.736172037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.812799659 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.73276043 seconds)
  done (took 169.021329463 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.659385596 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.661483 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.65071969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.67529579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.642299974 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.641269885 seconds)
  done (took 11.404244982 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.64494228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.654023392 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.646123575 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.646057016 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.650060737 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.644966095 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.648763784 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.642648622 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.654535469 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.6466756 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.650805245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.650741411 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.651125538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.650206077 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.643641345 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.647271975 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.644061232 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.643631917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.644979993 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.645802724 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.609276012 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.647211353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.652931075 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.645545708 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.651817246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.649240172 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.68210329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.654360517 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.646581245 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.650224724 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.654986224 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.645395061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.651568261 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.649984122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.651497372 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.649823975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.656782752 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.647191309 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.651563512 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.65444712 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.650502344 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.651231697 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.652106668 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.647758629 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.643087225 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.652231544 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.657776035 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.680786223 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.655094758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.653891323 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.649192261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.654939221 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.647528293 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.657284631 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.653632979 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.647741029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.656753837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.649937747 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.652596535 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.645543403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.649167048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.652906071 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.651283379 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.659827412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.650878229 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.652411805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.654078636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.660274047 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.659330422 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.654449005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.653445596 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.65823545 seconds)
  done (took 121.346336573 seconds)
done (took 446.368633131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.128876514 seconds)
  done (took 4.607898393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.86279624 seconds)
  done (took 4.34328702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.022407878 seconds)
  done (took 24.510317129 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.683536572 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.615730115 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.644464146 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.63048688 seconds)
  done (took 12.053841065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.209456105 seconds)
  done (took 4.690070504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.641410685 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.615070324 seconds)
  done (took 6.736947625 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.042128123 seconds)
  done (took 4.523730288 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.37784742 seconds)
  done (took 4.864896298 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.640580412 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.629573285 seconds)
  done (took 6.759833147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.600891077 seconds)
  done (took 4.082682931 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.657451063 seconds)
  done (took 16.13781117 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.640791193 seconds)
  done (took 4.127341822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.655776828 seconds)
  done (took 4.135446694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.448626253 seconds)
  done (took 6.931012107 seconds)
done (took 109.986891772 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.619142141 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.615411498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.617996674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.622204681 seconds)
  done (took 11.952507089 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.775224 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.779183721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.780862497 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.767585738 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.766076468 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.779134274 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.694214607 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.688770967 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.751916358 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.750807488 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.776192908 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.7659173 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.773729886 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.68724263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.749432592 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.776202337 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.752555964 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.78239209 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.68519237 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.76193907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.656917406 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.76552975 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.749312116 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.653849138 seconds)
  done (took 43.353070598 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.239475564 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.786215831 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.868665981 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.745154325 seconds)
  done (took 9.121032221 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.822151546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.817406459 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.837678869 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.877628363 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.928296958 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.82865356 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.693640162 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.685218281 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.669339097 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.829629173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.900108457 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.822362257 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.042282612 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.661224657 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.042190561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.660271394 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.659073615 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.83053683 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.8780083 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.897959859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.658942524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.819552961 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.826380436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.818210262 seconds)
  done (took 44.988276583 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.674611345 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.681965284 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.65727597 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.658802422 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.659323996 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.658571526 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.686441271 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.662539209 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.673591174 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.659171393 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.654902205 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.658698219 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.678188616 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.663473197 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.663273521 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.674362641 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.661160403 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.66801316 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.674962159 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.656503876 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.655277881 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.672538595 seconds)
  done (took 38.135665717 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.628071139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.624130764 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.063635677 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.967345708 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.624015736 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.617652077 seconds)
  done (took 16.007971195 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.741969422 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.930796228 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.647333366 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.073092745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.18687537 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.64957995 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.655109424 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.979986631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.319505574 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.277805299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.71242628 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.73919826 seconds)
  done (took 24.401351108 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789330193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628478594 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.637908633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644129676 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623898402 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625941888 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.695542359 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227219327 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.654116212 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992515599 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631207293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792532626 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973735976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631478346 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.624721621 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.631805204 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951845483 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292353309 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638489922 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644324533 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693113768 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634568335 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.629277578 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905138705 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633734849 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629863406 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.118041477 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63642255 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024636792 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977672301 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976459856 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637730748 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9960569 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202103215 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816286764 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904759747 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653486941 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63156467 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.628827032 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.64353861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637775796 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636565027 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972804992 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635251313 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632354296 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63326377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222008679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.65816533 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.634311947 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636146468 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980537329 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798428068 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.666571427 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.632832499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686991761 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627357431 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.665237458 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836536057 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352169016 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631326651 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639281713 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.628855388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633884099 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633124506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422678889 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.663487236 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.662637058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664072226 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63394989 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643972464 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686519006 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637774747 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.678783245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633121573 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530594847 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644540622 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639364684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356930305 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644491663 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.631981763 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950945298 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636313039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638276488 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.635953636 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636996297 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610255327 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67269546 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.616948496 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707966075 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232968103 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905785575 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685555405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699112087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945909462 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.612588165 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638985516 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.642581294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641418298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680295868 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234511177 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63175848 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.659722161 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976294681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.936909086 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646720578 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.613399861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258032394 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644549352 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.690821507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648260509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908240496 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.393233456 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993777002 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645132597 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705932927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.63857925 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.641833713 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649928598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.667843725 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653476116 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025713325 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.617258521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642313873 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791589349 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647884903 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641778609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645011492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657264307 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647305848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.921570264 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65552945 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985220328 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.647384768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637159585 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.648491962 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652032846 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.644923143 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949671533 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645230584 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995854151 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641969625 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644940114 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635724487 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.940705519 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.641217993 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.69230752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079896264 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649776064 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.647933232 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991971814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706425237 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841341207 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708454756 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.648622635 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979851838 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.671305967 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.67407657 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645671213 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644090914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654934821 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.671087574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661961552 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399674008 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646805924 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64611247 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645781143 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.689470777 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79792584 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673048786 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9183862 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.644760762 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648442515 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.668566373 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.662021476 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951907431 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987382055 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.661605781 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89415316 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.247741839 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402526676 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694977622 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.65306985 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.650211175 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.651225201 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646714642 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646099689 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644845479 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922217273 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005953202 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.673464202 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398941234 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648900394 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663136283 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.67588979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993494704 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.68126722 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645565543 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.647633334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65289797 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649538185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997420692 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946780313 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.695215921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64713299 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.251568094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677983422 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647050927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.650456877 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706502481 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663341058 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30955794 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069842261 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642442101 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008993392 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661836676 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.692667343 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.647509505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648761271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692101768 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.657460422 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675466552 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.921489947 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650557937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647847118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363970516 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568136004 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351477098 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658264365 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.655090986 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647175245 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269548453 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64514887 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65094416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004068394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251255903 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642315898 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251968005 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647497073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.583511284 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000539454 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96151452 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664834125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.662244339 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003008134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947795038 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706510025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656274586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648946838 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.622061926 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321599276 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64731346 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901848133 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281057319 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666215795 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654365266 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.698150023 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.645816273 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191817549 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648865893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650146573 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65661199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667675059 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326072611 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653769869 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65539731 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4557296 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.664062588 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.259887518 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646572724 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925533687 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99683137 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.992691878 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.663136771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.65219795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.988614753 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000701347 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653314014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655959672 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367759196 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.599475884 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.688661876 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656680434 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.66007046 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664454607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046657609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.655018281 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.662340791 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665530373 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653429392 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653312548 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.652203328 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667633154 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656063386 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.302460389 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.677774737 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650923976 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655930129 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655905825 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992166951 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.699917008 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422430813 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973870979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656815996 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718444643 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.677933346 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653188231 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.635277014 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658528853 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655926427 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70325584 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954818905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.655069336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.662060587 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.688486364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948231895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.654981056 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.676033314 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96952322 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.654651545 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.681291734 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572071281 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71797936 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.67709106 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659500066 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663369344 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718932624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811388935 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93344014 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.010523196 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008443951 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202194776 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657294897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662062752 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.701914399 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819145437 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660167121 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.668639427 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.661840797 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421888077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583403797 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422223455 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014061425 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657616796 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660803724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659356402 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979448993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658340771 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018904778 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660027438 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.65135769 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714739842 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660046644 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675172171 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955374982 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010631519 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659192137 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665405636 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66362608 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.662538162 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017587571 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.955586811 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317726996 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390135645 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659173139 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.671938869 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264627576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000978197 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655380478 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664974156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657862707 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.661601242 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662947502 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.687635907 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665614252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969368101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002275988 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231800287 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008100891 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.688702034 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.623316764 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668960348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996132539 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.574805986 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942257531 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434528651 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53016232 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994787117 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811605512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938956134 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.658600022 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985994378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.673498425 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661075476 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66501208 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660071229 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.665629966 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011365133 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431434961 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004555677 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.696075178 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.672569745 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721234733 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.93968409 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970557988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.649639106 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971288108 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021360468 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678348902 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663268981 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435919261 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020238397 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664716791 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.683104325 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98337526 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668126931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729916004 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.627233324 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.667316563 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399200765 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.962522049 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72122712 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681725448 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.5468224 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429586332 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.678348273 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323092413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669819954 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679402877 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028091142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.693444536 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663818842 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035887804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.696743281 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.679081048 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944241513 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.435100162 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.609432876 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.671444951 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666249668 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.666407998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665076683 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703466551 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66092874 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66205088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.202374548 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667920621 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664822321 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701919985 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.678290654 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679252718 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.667050049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668751801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.690094949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.643031701 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.647170496 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.67797581 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868344711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337030847 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667003325 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.368238656 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.089667967 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005229366 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.675219523 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.64498167 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.692661965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668164506 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66572921 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660076048 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684886325 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395935824 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.679737207 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.016672232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698989865 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.969560515 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967060825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.672094266 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950959127 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684819557 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715516897 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.644477486 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67196918 seconds)
  done (took 1131.669683094 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.721763082 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.692142136 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.695908956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.725162676 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.672925237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.847636072 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.726887686 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.670997757 seconds)
  done (took 23.27381436 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.680029562 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.693778448 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.678845683 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.691594511 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.672874673 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.277068963 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.677511295 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.6993617 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.722684568 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.674771212 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.664529547 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.44622986 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.697679781 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.684037963 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.667016874 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.702135097 seconds)
  done (took 37.861205396 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.713685938 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.780157798 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.896401561 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.670920234 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.684916567 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.659712733 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.989891592 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.678758731 seconds)
  done (took 29.595436753 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.711306445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.711862171 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.713481582 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.715182637 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.712615759 seconds)
  done (took 10.087203408 seconds)
done (took 1421.930357521 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.702488982 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.699439363 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.703367306 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.701303287 seconds)
  done (took 8.328788808 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.65180691 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.651124002 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.649467576 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.683420776 seconds)
  done (took 11.156025427 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.167578853 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.37111521 seconds)
  done (took 6.062197016 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.672976571 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.518122312 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.501600169 seconds)
  done (took 9.216220931 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.075845678 seconds)
  done (took 3.598498664 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.230908903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.272948187 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.679015397 seconds)
  done (took 8.708453219 seconds)
done (took 48.597348519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.687155609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.435250181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.829901834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.673810127 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.872835226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.834366716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.91484364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.684755792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.682006629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.679285753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.672188482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.836709123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.90521574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.439661776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.907559474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.441283211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.841738185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.680911519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.679248457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.677943054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.912657957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677924895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665006982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.677672768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.837791733 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.959593256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684232122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.431454656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.675483942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.683924192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.823130721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679285823 seconds)
  done (took 92.610452421 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.680270795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.664718817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.664715883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675344889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.679961677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.682157487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.664581089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.676855834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.681943703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.671606005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.664472207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.682794579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.674952102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.676744298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.682495588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.67354438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.680513633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.673838342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.68556176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.676271542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.67500553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.673466787 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.693238226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.694285984 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.673487948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.666346817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.663654784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.664429883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674757384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.675651213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.67497487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.678293238 seconds)
  done (took 87.149279251 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.677367143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.673103472 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.678737918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.678184286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.70507737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.68087534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.678771232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672089167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.676040508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.678990115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674356914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.675840971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.673336393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668009528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.675543168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668417053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.675705269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.690987521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.673526081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.674882749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.672137707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.669952163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.669564824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.676879092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.698857376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.675595899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.686859342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.678550254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.67384379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.695985782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.684889398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.680556584 seconds)
  done (took 87.241061244 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.001673956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.712929277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.721520802 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.690286732 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.715371347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.7176319 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.683217328 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.003651512 seconds)
  done (took 17.776411093 seconds)
done (took 286.305337159 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.688064244 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.686397341 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.741803061 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.689471615 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.744161042 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.743344387 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.989540429 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.740743219 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.982110783 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685412301 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.732043859 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.686339862 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.668956296 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90441061 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.683546001 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.68353343 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.685569303 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.682639252 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.677928736 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.018287312 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.756510378 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684270186 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.700416093 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.684725342 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.666926919 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.782324973 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.792723851 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.927497554 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.89045255 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.787313526 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.693282366 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.688443272 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68804832 seconds)
  done (took 77.384537589 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.712073861 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.717562687 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.719166592 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.718380809 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.716850097 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.724814378 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.71429181 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.715328884 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.721516262 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.715665588 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.720161761 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.722118015 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.721897387 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.715139334 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.716909113 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.702859141 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.715140732 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.719803963 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.717767671 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.699636664 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.719607012 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.719552466 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.718286382 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.725398251 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.724913902 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.72079159 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.719528719 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.717303785 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.719703463 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.719336586 seconds)
  done (took 53.063437677 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.728980131 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.683223963 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.689346879 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.730303762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.713653531 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.719077195 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.093493803 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.719827919 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.717571488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.723131482 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.691103387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.723081127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.788796816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.700573376 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.718858383 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.720505589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.721122568 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.714128382 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.687994752 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.740639295 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.108958688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.723405679 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.092792596 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.739588672 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.7223575 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.718190351 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.728783248 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.690019381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.720550358 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.694734086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.619874916 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.084382658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.70164963 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.695681274 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.605575053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.722347933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.727737864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.68999745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.706621072 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.717586992 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.089285866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.721451799 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.689484116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.678612762 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.725908581 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.724650111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.695325642 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.680819677 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999559511 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.729967197 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690742517 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.72520479 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.730830506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.721254986 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.005537157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72339639 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.717961202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.689190295 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.73826085 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.088635503 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.721625983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.7190971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.689440186 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.716083449 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.690728409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.715429665 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.743142965 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.721329996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.710953118 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.721926999 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.68930225 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.720017468 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.728053826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.697162747 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.692809819 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.703428278 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.722721724 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.695948346 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.689630713 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.072906827 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.729479286 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.700425522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.109109964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.723782473 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.727246879 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.727997464 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.724621476 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.851880606 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.084415483 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.687086256 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.717703837 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.690227647 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.095920787 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.739001726 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.72463265 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.688694351 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.731939655 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.725877921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.703970805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.687178586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.72158345 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.745158096 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.691846918 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.727407445 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.095964019 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.736802075 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.698752474 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.723099076 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.856823902 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.727263223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.745341499 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.729201249 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.113082816 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.728284372 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.726711406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.696294061 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.694375311 seconds)
  done (took 245.333324307 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.698495808 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.68689063 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.693454663 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.685673925 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.69749142 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.724709546 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.698225522 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.704808761 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.721637437 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.696247756 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.699966734 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.727869585 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.727217127 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.694374404 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.69922502 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.689293031 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.696645433 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.699776068 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.690249298 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.697792506 seconds)
  done (took 51.575160572 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.732986786 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.441343763 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.388655778 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.733726684 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.732212874 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.728931801 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.797681605 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.731609655 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.731096532 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.119369858 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.932294044 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.730080969 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.729344074 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.726593724 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.380695548 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.721162307 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.110497362 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.399602841 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.721626402 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.409954017 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.721638555 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.731180899 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.723181488 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.412087459 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.104323811 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.075945203 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.789740162 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.417738597 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.72089272 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.731229649 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.417428921 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.721932308 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.727759724 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.424418775 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.727330271 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.75150164 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.729344144 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.802478094 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.805150781 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.129909537 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.424013696 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.091690011 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.750145881 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.974971887 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.728298061 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.709149746 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.422342464 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.724243914 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.711367207 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.733317204 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.749412478 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.395188313 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.721721596 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.391917366 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.723510092 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.732822798 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.417096127 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.379006995 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.378485979 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.931749841 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.731077884 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.091093427 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.723159139 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.422199289 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.726232924 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.732034919 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.735446945 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.943591431 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.420804001 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.079693375 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.106718529 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.106009989 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.724610022 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.807769899 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.737239142 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.113255324 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.797588227 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233054287 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.116031375 seconds)
  done (took 156.64717937 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.094420736 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.837224133 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.241971343 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.448944451 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.363873576 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.923918817 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.868455269 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.047868727 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.711166763 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.885459806 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.550387867 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.842491283 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.600868239 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.812418465 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.858281908 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.91765133 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.257583594 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.697123705 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.546772812 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.52883345 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.703142488 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.880632446 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.603961579 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.191248762 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.699201414 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.580919333 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.694052505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.383292527 seconds)
  done (took 65.323510275 seconds)
done (took 650.859374523 seconds)
SAVING RESULT...
DONE!
